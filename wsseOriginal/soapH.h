/* soapH.h
   Generated by gSOAP 2.8.87 for wssedemo.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_double_DEFINED
#define SOAP_TYPE_double_DEFINED

#ifdef SOAP_DEFAULT_double
#define soap_default_double(soap, a) (*(a) = SOAP_DEFAULT_double)
#else
#define soap_default_double(soap, a) (*(a) = (double)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 double * SOAP_FMAC4 soap_new_double(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_double(soap, data, "double", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_double
#define soap_PUT_double(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_double(soap, data, "double", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_double
#define soap_PATCH_double(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_double(soap, data, "double", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_double
#define soap_POST_send_double(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_double(soap, data, "double", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_double
#define soap_GET_double(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_double(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_double
#define soap_POST_recv_double(soap, data) ( soap_read_double(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ULONG64_DEFINED
#define SOAP_TYPE_ULONG64_DEFINED

#ifdef SOAP_DEFAULT_ULONG64
#define soap_default_ULONG64(soap, a) (*(a) = SOAP_DEFAULT_ULONG64)
#else
#define soap_default_ULONG64(soap, a) (*(a) = (ULONG64)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_new_ULONG64(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ULONG64
#define soap_PUT_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ULONG64
#define soap_PATCH_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ULONG64
#define soap_POST_send_ULONG64(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ULONG64
#define soap_GET_ULONG64(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ULONG64(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ULONG64
#define soap_POST_recv_ULONG64(soap, data) ( soap_read_ULONG64(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_dateTime_DEFINED
#define SOAP_TYPE_dateTime_DEFINED

#ifdef SOAP_DEFAULT_dateTime
#define soap_default_dateTime(soap, a) (*(a) = SOAP_DEFAULT_dateTime)
#else
#define soap_default_dateTime(soap, a) (*(a) = (time_t)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_new_dateTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_dateTime
#define soap_PUT_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_dateTime
#define soap_PATCH_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_dateTime
#define soap_POST_send_dateTime(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_dateTime
#define soap_GET_dateTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_dateTime(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_dateTime
#define soap_POST_recv_dateTime(soap, data) ( soap_read_dateTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__DecisionType_DEFINED
#define SOAP_TYPE_saml2__DecisionType_DEFINED

#ifdef SOAP_DEFAULT_saml2__DecisionType
#define soap_default_saml2__DecisionType(soap, a) (*(a) = SOAP_DEFAULT_saml2__DecisionType)
#else
#define soap_default_saml2__DecisionType(soap, a) (*(a) = (enum saml2__DecisionType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__DecisionType(struct soap*, const char*, int, const enum saml2__DecisionType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_saml2__DecisionType2s(struct soap*, enum saml2__DecisionType);
SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_in_saml2__DecisionType(struct soap*, const char*, enum saml2__DecisionType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2saml2__DecisionType(struct soap*, const char*, enum saml2__DecisionType *);

SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_new_saml2__DecisionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__DecisionType(struct soap*, const enum saml2__DecisionType *, const char*, const char*);

#ifndef soap_write_saml2__DecisionType
#define soap_write_saml2__DecisionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__DecisionType
#define soap_PUT_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__DecisionType
#define soap_PATCH_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__DecisionType
#define soap_POST_send_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_get_saml2__DecisionType(struct soap*, enum saml2__DecisionType *, const char*, const char*);

#ifndef soap_read_saml2__DecisionType
#define soap_read_saml2__DecisionType(soap, data) ( soap_begin_recv(soap) || !soap_get_saml2__DecisionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__DecisionType
#define soap_GET_saml2__DecisionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__DecisionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__DecisionType
#define soap_POST_recv_saml2__DecisionType(soap, data) ( soap_read_saml2__DecisionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__DecisionType_DEFINED
#define SOAP_TYPE_saml1__DecisionType_DEFINED

#ifdef SOAP_DEFAULT_saml1__DecisionType
#define soap_default_saml1__DecisionType(soap, a) (*(a) = SOAP_DEFAULT_saml1__DecisionType)
#else
#define soap_default_saml1__DecisionType(soap, a) (*(a) = (enum saml1__DecisionType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__DecisionType(struct soap*, const char*, int, const enum saml1__DecisionType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_saml1__DecisionType2s(struct soap*, enum saml1__DecisionType);
SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_in_saml1__DecisionType(struct soap*, const char*, enum saml1__DecisionType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2saml1__DecisionType(struct soap*, const char*, enum saml1__DecisionType *);

SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_new_saml1__DecisionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__DecisionType(struct soap*, const enum saml1__DecisionType *, const char*, const char*);

#ifndef soap_write_saml1__DecisionType
#define soap_write_saml1__DecisionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__DecisionType
#define soap_PUT_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__DecisionType
#define soap_PATCH_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__DecisionType
#define soap_POST_send_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_get_saml1__DecisionType(struct soap*, enum saml1__DecisionType *, const char*, const char*);

#ifndef soap_read_saml1__DecisionType
#define soap_read_saml1__DecisionType(soap, data) ( soap_begin_recv(soap) || !soap_get_saml1__DecisionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__DecisionType
#define soap_GET_saml1__DecisionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__DecisionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__DecisionType
#define soap_POST_recv_saml1__DecisionType(soap, data) ( soap_read_saml1__DecisionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__FaultCodeType_DEFINED
#define SOAP_TYPE_wsc__FaultCodeType_DEFINED

#ifdef SOAP_DEFAULT_wsc__FaultCodeType
#define soap_default_wsc__FaultCodeType(soap, a) (*(a) = SOAP_DEFAULT_wsc__FaultCodeType)
#else
#define soap_default_wsc__FaultCodeType(soap, a) (*(a) = (enum wsc__FaultCodeType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeType(struct soap*, const char*, int, const enum wsc__FaultCodeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsc__FaultCodeType2s(struct soap*, enum wsc__FaultCodeType);
SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_in_wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *);

SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_new_wsc__FaultCodeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeType(struct soap*, const enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeType
#define soap_write_wsc__FaultCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__FaultCodeType
#define soap_PUT_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__FaultCodeType
#define soap_PATCH_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__FaultCodeType
#define soap_POST_send_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_get_wsc__FaultCodeType(struct soap*, enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeType
#define soap_read_wsc__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__FaultCodeType
#define soap_GET_wsc__FaultCodeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__FaultCodeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__FaultCodeType
#define soap_POST_recv_wsc__FaultCodeType(soap, data) ( soap_read_wsc__FaultCodeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum_DEFINED
#define SOAP_TYPE_wsse__FaultcodeEnum_DEFINED

#ifdef SOAP_DEFAULT_wsse__FaultcodeEnum
#define soap_default_wsse__FaultcodeEnum(soap, a) (*(a) = SOAP_DEFAULT_wsse__FaultcodeEnum)
#else
#define soap_default_wsse__FaultcodeEnum(soap, a) (*(a) = (enum wsse__FaultcodeEnum)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsse__FaultcodeEnum(struct soap*, const char*, int, const enum wsse__FaultcodeEnum *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsse__FaultcodeEnum2s(struct soap*, enum wsse__FaultcodeEnum);
SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_in_wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *);

SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_new_wsse__FaultcodeEnum(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsse__FaultcodeEnum(struct soap*, const enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_write_wsse__FaultcodeEnum
#define soap_write_wsse__FaultcodeEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsse__FaultcodeEnum
#define soap_PUT_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsse__FaultcodeEnum
#define soap_PATCH_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsse__FaultcodeEnum
#define soap_POST_send_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_get_wsse__FaultcodeEnum(struct soap*, enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_read_wsse__FaultcodeEnum
#define soap_read_wsse__FaultcodeEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsse__FaultcodeEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsse__FaultcodeEnum
#define soap_GET_wsse__FaultcodeEnum(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsse__FaultcodeEnum(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsse__FaultcodeEnum
#define soap_POST_recv_wsse__FaultcodeEnum(soap, data) ( soap_read_wsse__FaultcodeEnum(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsu__tTimestampFault_DEFINED
#define SOAP_TYPE_wsu__tTimestampFault_DEFINED

#ifdef SOAP_DEFAULT_wsu__tTimestampFault
#define soap_default_wsu__tTimestampFault(soap, a) (*(a) = SOAP_DEFAULT_wsu__tTimestampFault)
#else
#define soap_default_wsu__tTimestampFault(soap, a) (*(a) = (enum wsu__tTimestampFault)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsu__tTimestampFault(struct soap*, const char*, int, const enum wsu__tTimestampFault *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsu__tTimestampFault2s(struct soap*, enum wsu__tTimestampFault);
SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_in_wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *);

SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_new_wsu__tTimestampFault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsu__tTimestampFault(struct soap*, const enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_write_wsu__tTimestampFault
#define soap_write_wsu__tTimestampFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsu__tTimestampFault
#define soap_PUT_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsu__tTimestampFault
#define soap_PATCH_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsu__tTimestampFault
#define soap_POST_send_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_get_wsu__tTimestampFault(struct soap*, enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_read_wsu__tTimestampFault
#define soap_read_wsu__tTimestampFault(soap, data) ( soap_begin_recv(soap) || !soap_get_wsu__tTimestampFault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsu__tTimestampFault
#define soap_GET_wsu__tTimestampFault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsu__tTimestampFault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsu__tTimestampFault
#define soap_POST_recv_wsu__tTimestampFault(soap, data) ( soap_read_wsu__tTimestampFault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_ns1__div_DEFINED
#define SOAP_TYPE_ns1__div_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__div(struct soap*, struct ns1__div *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__div(struct soap*, const struct ns1__div *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__div(struct soap*, const char*, int, const struct ns1__div *, const char*);
SOAP_FMAC3 struct ns1__div * SOAP_FMAC4 soap_in_ns1__div(struct soap*, const char*, struct ns1__div *, const char*);

SOAP_FMAC3 struct ns1__div * SOAP_FMAC4 soap_new_ns1__div(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__div(struct soap*, const struct ns1__div *, const char*, const char*);

#ifndef soap_write_ns1__div
#define soap_write_ns1__div(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__div(soap, data), 0) || soap_put_ns1__div(soap, data, "ns1:div", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__div
#define soap_PUT_ns1__div(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__div(soap, data), 0) || soap_put_ns1__div(soap, data, "ns1:div", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__div
#define soap_PATCH_ns1__div(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__div(soap, data), 0) || soap_put_ns1__div(soap, data, "ns1:div", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__div
#define soap_POST_send_ns1__div(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__div(soap, data), 0) || soap_put_ns1__div(soap, data, "ns1:div", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__div * SOAP_FMAC4 soap_get_ns1__div(struct soap*, struct ns1__div *, const char*, const char*);

#ifndef soap_read_ns1__div
#define soap_read_ns1__div(soap, data) ( ((data) ? (soap_default_ns1__div(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__div(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__div
#define soap_GET_ns1__div(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__div(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__div
#define soap_POST_recv_ns1__div(soap, data) ( soap_read_ns1__div(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__divResponse_DEFINED
#define SOAP_TYPE_ns1__divResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__divResponse(struct soap*, struct ns1__divResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__divResponse(struct soap*, const struct ns1__divResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__divResponse(struct soap*, const char*, int, const struct ns1__divResponse *, const char*);
SOAP_FMAC3 struct ns1__divResponse * SOAP_FMAC4 soap_in_ns1__divResponse(struct soap*, const char*, struct ns1__divResponse *, const char*);

SOAP_FMAC3 struct ns1__divResponse * SOAP_FMAC4 soap_new_ns1__divResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__divResponse(struct soap*, const struct ns1__divResponse *, const char*, const char*);

#ifndef soap_write_ns1__divResponse
#define soap_write_ns1__divResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__divResponse(soap, data), 0) || soap_put_ns1__divResponse(soap, data, "ns1:divResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__divResponse
#define soap_PUT_ns1__divResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__divResponse(soap, data), 0) || soap_put_ns1__divResponse(soap, data, "ns1:divResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__divResponse
#define soap_PATCH_ns1__divResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__divResponse(soap, data), 0) || soap_put_ns1__divResponse(soap, data, "ns1:divResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__divResponse
#define soap_POST_send_ns1__divResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__divResponse(soap, data), 0) || soap_put_ns1__divResponse(soap, data, "ns1:divResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__divResponse * SOAP_FMAC4 soap_get_ns1__divResponse(struct soap*, struct ns1__divResponse *, const char*, const char*);

#ifndef soap_read_ns1__divResponse
#define soap_read_ns1__divResponse(soap, data) ( ((data) ? (soap_default_ns1__divResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__divResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__divResponse
#define soap_GET_ns1__divResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__divResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__divResponse
#define soap_POST_recv_ns1__divResponse(soap, data) ( soap_read_ns1__divResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__mul_DEFINED
#define SOAP_TYPE_ns1__mul_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__mul(struct soap*, struct ns1__mul *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__mul(struct soap*, const struct ns1__mul *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__mul(struct soap*, const char*, int, const struct ns1__mul *, const char*);
SOAP_FMAC3 struct ns1__mul * SOAP_FMAC4 soap_in_ns1__mul(struct soap*, const char*, struct ns1__mul *, const char*);

SOAP_FMAC3 struct ns1__mul * SOAP_FMAC4 soap_new_ns1__mul(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__mul(struct soap*, const struct ns1__mul *, const char*, const char*);

#ifndef soap_write_ns1__mul
#define soap_write_ns1__mul(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__mul(soap, data), 0) || soap_put_ns1__mul(soap, data, "ns1:mul", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__mul
#define soap_PUT_ns1__mul(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mul(soap, data), 0) || soap_put_ns1__mul(soap, data, "ns1:mul", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__mul
#define soap_PATCH_ns1__mul(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mul(soap, data), 0) || soap_put_ns1__mul(soap, data, "ns1:mul", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__mul
#define soap_POST_send_ns1__mul(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mul(soap, data), 0) || soap_put_ns1__mul(soap, data, "ns1:mul", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__mul * SOAP_FMAC4 soap_get_ns1__mul(struct soap*, struct ns1__mul *, const char*, const char*);

#ifndef soap_read_ns1__mul
#define soap_read_ns1__mul(soap, data) ( ((data) ? (soap_default_ns1__mul(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__mul(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__mul
#define soap_GET_ns1__mul(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__mul(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__mul
#define soap_POST_recv_ns1__mul(soap, data) ( soap_read_ns1__mul(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__mulResponse_DEFINED
#define SOAP_TYPE_ns1__mulResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__mulResponse(struct soap*, struct ns1__mulResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__mulResponse(struct soap*, const struct ns1__mulResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__mulResponse(struct soap*, const char*, int, const struct ns1__mulResponse *, const char*);
SOAP_FMAC3 struct ns1__mulResponse * SOAP_FMAC4 soap_in_ns1__mulResponse(struct soap*, const char*, struct ns1__mulResponse *, const char*);

SOAP_FMAC3 struct ns1__mulResponse * SOAP_FMAC4 soap_new_ns1__mulResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__mulResponse(struct soap*, const struct ns1__mulResponse *, const char*, const char*);

#ifndef soap_write_ns1__mulResponse
#define soap_write_ns1__mulResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__mulResponse(soap, data), 0) || soap_put_ns1__mulResponse(soap, data, "ns1:mulResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__mulResponse
#define soap_PUT_ns1__mulResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mulResponse(soap, data), 0) || soap_put_ns1__mulResponse(soap, data, "ns1:mulResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__mulResponse
#define soap_PATCH_ns1__mulResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mulResponse(soap, data), 0) || soap_put_ns1__mulResponse(soap, data, "ns1:mulResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__mulResponse
#define soap_POST_send_ns1__mulResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__mulResponse(soap, data), 0) || soap_put_ns1__mulResponse(soap, data, "ns1:mulResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__mulResponse * SOAP_FMAC4 soap_get_ns1__mulResponse(struct soap*, struct ns1__mulResponse *, const char*, const char*);

#ifndef soap_read_ns1__mulResponse
#define soap_read_ns1__mulResponse(soap, data) ( ((data) ? (soap_default_ns1__mulResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__mulResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__mulResponse
#define soap_GET_ns1__mulResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__mulResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__mulResponse
#define soap_POST_recv_ns1__mulResponse(soap, data) ( soap_read_ns1__mulResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__sub_DEFINED
#define SOAP_TYPE_ns1__sub_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sub(struct soap*, struct ns1__sub *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sub(struct soap*, const struct ns1__sub *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sub(struct soap*, const char*, int, const struct ns1__sub *, const char*);
SOAP_FMAC3 struct ns1__sub * SOAP_FMAC4 soap_in_ns1__sub(struct soap*, const char*, struct ns1__sub *, const char*);

SOAP_FMAC3 struct ns1__sub * SOAP_FMAC4 soap_new_ns1__sub(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sub(struct soap*, const struct ns1__sub *, const char*, const char*);

#ifndef soap_write_ns1__sub
#define soap_write_ns1__sub(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sub(soap, data), 0) || soap_put_ns1__sub(soap, data, "ns1:sub", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__sub
#define soap_PUT_ns1__sub(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__sub(soap, data), 0) || soap_put_ns1__sub(soap, data, "ns1:sub", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__sub
#define soap_PATCH_ns1__sub(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__sub(soap, data), 0) || soap_put_ns1__sub(soap, data, "ns1:sub", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__sub
#define soap_POST_send_ns1__sub(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__sub(soap, data), 0) || soap_put_ns1__sub(soap, data, "ns1:sub", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sub * SOAP_FMAC4 soap_get_ns1__sub(struct soap*, struct ns1__sub *, const char*, const char*);

#ifndef soap_read_ns1__sub
#define soap_read_ns1__sub(soap, data) ( ((data) ? (soap_default_ns1__sub(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__sub(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__sub
#define soap_GET_ns1__sub(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__sub(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__sub
#define soap_POST_recv_ns1__sub(soap, data) ( soap_read_ns1__sub(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__subResponse_DEFINED
#define SOAP_TYPE_ns1__subResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__subResponse(struct soap*, struct ns1__subResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__subResponse(struct soap*, const struct ns1__subResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__subResponse(struct soap*, const char*, int, const struct ns1__subResponse *, const char*);
SOAP_FMAC3 struct ns1__subResponse * SOAP_FMAC4 soap_in_ns1__subResponse(struct soap*, const char*, struct ns1__subResponse *, const char*);

SOAP_FMAC3 struct ns1__subResponse * SOAP_FMAC4 soap_new_ns1__subResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__subResponse(struct soap*, const struct ns1__subResponse *, const char*, const char*);

#ifndef soap_write_ns1__subResponse
#define soap_write_ns1__subResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__subResponse(soap, data), 0) || soap_put_ns1__subResponse(soap, data, "ns1:subResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__subResponse
#define soap_PUT_ns1__subResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__subResponse(soap, data), 0) || soap_put_ns1__subResponse(soap, data, "ns1:subResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__subResponse
#define soap_PATCH_ns1__subResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__subResponse(soap, data), 0) || soap_put_ns1__subResponse(soap, data, "ns1:subResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__subResponse
#define soap_POST_send_ns1__subResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__subResponse(soap, data), 0) || soap_put_ns1__subResponse(soap, data, "ns1:subResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__subResponse * SOAP_FMAC4 soap_get_ns1__subResponse(struct soap*, struct ns1__subResponse *, const char*, const char*);

#ifndef soap_read_ns1__subResponse
#define soap_read_ns1__subResponse(soap, data) ( ((data) ? (soap_default_ns1__subResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__subResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__subResponse
#define soap_GET_ns1__subResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__subResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__subResponse
#define soap_POST_recv_ns1__subResponse(soap, data) ( soap_read_ns1__subResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__add_DEFINED
#define SOAP_TYPE_ns1__add_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__add(struct soap*, struct ns1__add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__add(struct soap*, const struct ns1__add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__add(struct soap*, const char*, int, const struct ns1__add *, const char*);
SOAP_FMAC3 struct ns1__add * SOAP_FMAC4 soap_in_ns1__add(struct soap*, const char*, struct ns1__add *, const char*);

SOAP_FMAC3 struct ns1__add * SOAP_FMAC4 soap_new_ns1__add(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__add(struct soap*, const struct ns1__add *, const char*, const char*);

#ifndef soap_write_ns1__add
#define soap_write_ns1__add(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__add(soap, data), 0) || soap_put_ns1__add(soap, data, "ns1:add", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__add
#define soap_PUT_ns1__add(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__add(soap, data), 0) || soap_put_ns1__add(soap, data, "ns1:add", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__add
#define soap_PATCH_ns1__add(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__add(soap, data), 0) || soap_put_ns1__add(soap, data, "ns1:add", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__add
#define soap_POST_send_ns1__add(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__add(soap, data), 0) || soap_put_ns1__add(soap, data, "ns1:add", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__add * SOAP_FMAC4 soap_get_ns1__add(struct soap*, struct ns1__add *, const char*, const char*);

#ifndef soap_read_ns1__add
#define soap_read_ns1__add(soap, data) ( ((data) ? (soap_default_ns1__add(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__add(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__add
#define soap_GET_ns1__add(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__add(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__add
#define soap_POST_recv_ns1__add(soap, data) ( soap_read_ns1__add(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns1__addResponse_DEFINED
#define SOAP_TYPE_ns1__addResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__addResponse(struct soap*, struct ns1__addResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__addResponse(struct soap*, const struct ns1__addResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addResponse(struct soap*, const char*, int, const struct ns1__addResponse *, const char*);
SOAP_FMAC3 struct ns1__addResponse * SOAP_FMAC4 soap_in_ns1__addResponse(struct soap*, const char*, struct ns1__addResponse *, const char*);

SOAP_FMAC3 struct ns1__addResponse * SOAP_FMAC4 soap_new_ns1__addResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__addResponse(struct soap*, const struct ns1__addResponse *, const char*, const char*);

#ifndef soap_write_ns1__addResponse
#define soap_write_ns1__addResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__addResponse(soap, data), 0) || soap_put_ns1__addResponse(soap, data, "ns1:addResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ns1__addResponse
#define soap_PUT_ns1__addResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__addResponse(soap, data), 0) || soap_put_ns1__addResponse(soap, data, "ns1:addResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ns1__addResponse
#define soap_PATCH_ns1__addResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__addResponse(soap, data), 0) || soap_put_ns1__addResponse(soap, data, "ns1:addResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ns1__addResponse
#define soap_POST_send_ns1__addResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ns1__addResponse(soap, data), 0) || soap_put_ns1__addResponse(soap, data, "ns1:addResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__addResponse * SOAP_FMAC4 soap_get_ns1__addResponse(struct soap*, struct ns1__addResponse *, const char*, const char*);

#ifndef soap_read_ns1__addResponse
#define soap_read_ns1__addResponse(soap, data) ( ((data) ? (soap_default_ns1__addResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns1__addResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ns1__addResponse
#define soap_GET_ns1__addResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ns1__addResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ns1__addResponse
#define soap_POST_recv_ns1__addResponse(soap, data) ( soap_read_ns1__addResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE__wsse__Security_DEFINED
#define SOAP_TYPE__wsse__Security_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Security(struct soap*, struct _wsse__Security *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Security(struct soap*, const struct _wsse__Security *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Security(struct soap*, const char*, int, const struct _wsse__Security *, const char*);
SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_in__wsse__Security(struct soap*, const char*, struct _wsse__Security *, const char*);

SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_new__wsse__Security(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Security(struct soap*, const struct _wsse__Security *, const char*, const char*);

#ifndef soap_write__wsse__Security
#define soap_write__wsse__Security(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Security
#define soap_PUT__wsse__Security(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Security
#define soap_PATCH__wsse__Security(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Security
#define soap_POST_send__wsse__Security(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_get__wsse__Security(struct soap*, struct _wsse__Security *, const char*, const char*);

#ifndef soap_read__wsse__Security
#define soap_read__wsse__Security(soap, data) ( ((data) ? (soap_default__wsse__Security(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Security(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Security
#define soap_GET__wsse__Security(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Security(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Security
#define soap_POST_recv__wsse__Security(soap, data) ( soap_read__wsse__Security(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _saml2__EncryptedAttribute is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedAttribute_DEFINED
#define SOAP_TYPE__saml2__EncryptedAttribute_DEFINED

#define soap_default__saml2__EncryptedAttribute soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedAttribute soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedAttribute2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedAttribute soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedAttribute soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedAttribute soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedAttribute soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedAttribute(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedAttribute
#define soap_write__saml2__EncryptedAttribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedAttribute
#define soap_PUT__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedAttribute
#define soap_PATCH__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedAttribute
#define soap_POST_send__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedAttribute soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedAttribute soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedAttribute soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedAttribute soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__Attribute is a typedef synonym of saml2__AttributeType */

#ifndef SOAP_TYPE__saml2__Attribute_DEFINED
#define SOAP_TYPE__saml2__Attribute_DEFINED

#define soap_default__saml2__Attribute soap_default_saml2__AttributeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *);

#define soap_serialize__saml2__Attribute soap_serialize_saml2__AttributeType


#define soap__saml2__Attribute2s soap_saml2__AttributeType2s


#define soap_out__saml2__Attribute soap_out_saml2__AttributeType


#define soap_s2_saml2__Attribute soap_s2saml2__AttributeType


#define soap_in__saml2__Attribute soap_in_saml2__AttributeType

#define soap_new__saml2__Attribute soap_new_saml2__AttributeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Attribute(struct soap*, const struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_write__saml2__Attribute
#define soap_write__saml2__Attribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Attribute
#define soap_PUT__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Attribute
#define soap_PATCH__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Attribute
#define soap_POST_send__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Attribute soap_get_saml2__AttributeType


#define soap_read__saml2__Attribute soap_read_saml2__AttributeType


#define soap_GET__saml2__Attribute soap_GET_saml2__AttributeType


#define soap_POST_recv__saml2__Attribute soap_POST_recv_saml2__AttributeType

#endif
/* _saml2__AttributeStatement is a typedef synonym of saml2__AttributeStatementType */

#ifndef SOAP_TYPE__saml2__AttributeStatement_DEFINED
#define SOAP_TYPE__saml2__AttributeStatement_DEFINED

#define soap_default__saml2__AttributeStatement soap_default_saml2__AttributeStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *);

#define soap_serialize__saml2__AttributeStatement soap_serialize_saml2__AttributeStatementType


#define soap__saml2__AttributeStatement2s soap_saml2__AttributeStatementType2s


#define soap_out__saml2__AttributeStatement soap_out_saml2__AttributeStatementType


#define soap_s2_saml2__AttributeStatement soap_s2saml2__AttributeStatementType


#define soap_in__saml2__AttributeStatement soap_in_saml2__AttributeStatementType

#define soap_new__saml2__AttributeStatement soap_new_saml2__AttributeStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AttributeStatement(struct soap*, const struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AttributeStatement
#define soap_write__saml2__AttributeStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AttributeStatement
#define soap_PUT__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AttributeStatement
#define soap_PATCH__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AttributeStatement
#define soap_POST_send__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AttributeStatement soap_get_saml2__AttributeStatementType


#define soap_read__saml2__AttributeStatement soap_read_saml2__AttributeStatementType


#define soap_GET__saml2__AttributeStatement soap_GET_saml2__AttributeStatementType


#define soap_POST_recv__saml2__AttributeStatement soap_POST_recv_saml2__AttributeStatementType

#endif
/* _saml2__Evidence is a typedef synonym of saml2__EvidenceType */

#ifndef SOAP_TYPE__saml2__Evidence_DEFINED
#define SOAP_TYPE__saml2__Evidence_DEFINED

#define soap_default__saml2__Evidence soap_default_saml2__EvidenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *);

#define soap_serialize__saml2__Evidence soap_serialize_saml2__EvidenceType


#define soap__saml2__Evidence2s soap_saml2__EvidenceType2s


#define soap_out__saml2__Evidence soap_out_saml2__EvidenceType


#define soap_s2_saml2__Evidence soap_s2saml2__EvidenceType


#define soap_in__saml2__Evidence soap_in_saml2__EvidenceType

#define soap_new__saml2__Evidence soap_new_saml2__EvidenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Evidence(struct soap*, const struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_write__saml2__Evidence
#define soap_write__saml2__Evidence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Evidence
#define soap_PUT__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Evidence
#define soap_PATCH__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Evidence
#define soap_POST_send__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Evidence soap_get_saml2__EvidenceType


#define soap_read__saml2__Evidence soap_read_saml2__EvidenceType


#define soap_GET__saml2__Evidence soap_GET_saml2__EvidenceType


#define soap_POST_recv__saml2__Evidence soap_POST_recv_saml2__EvidenceType

#endif
/* _saml2__Action is a typedef synonym of saml2__ActionType */

#ifndef SOAP_TYPE__saml2__Action_DEFINED
#define SOAP_TYPE__saml2__Action_DEFINED

#define soap_default__saml2__Action soap_default_saml2__ActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ActionType(struct soap*, const struct saml2__ActionType *);

#define soap_serialize__saml2__Action soap_serialize_saml2__ActionType


#define soap__saml2__Action2s soap_saml2__ActionType2s


#define soap_out__saml2__Action soap_out_saml2__ActionType


#define soap_s2_saml2__Action soap_s2saml2__ActionType


#define soap_in__saml2__Action soap_in_saml2__ActionType

#define soap_new__saml2__Action soap_new_saml2__ActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Action(struct soap*, const struct saml2__ActionType *, const char*, const char*);

#ifndef soap_write__saml2__Action
#define soap_write__saml2__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Action
#define soap_PUT__saml2__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Action
#define soap_PATCH__saml2__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Action
#define soap_POST_send__saml2__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Action soap_get_saml2__ActionType


#define soap_read__saml2__Action soap_read_saml2__ActionType


#define soap_GET__saml2__Action soap_GET_saml2__ActionType


#define soap_POST_recv__saml2__Action soap_POST_recv_saml2__ActionType

#endif
/* _saml2__AuthzDecisionStatement is a typedef synonym of saml2__AuthzDecisionStatementType */

#ifndef SOAP_TYPE__saml2__AuthzDecisionStatement_DEFINED
#define SOAP_TYPE__saml2__AuthzDecisionStatement_DEFINED

#define soap_default__saml2__AuthzDecisionStatement soap_default_saml2__AuthzDecisionStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *);

#define soap_serialize__saml2__AuthzDecisionStatement soap_serialize_saml2__AuthzDecisionStatementType


#define soap__saml2__AuthzDecisionStatement2s soap_saml2__AuthzDecisionStatementType2s


#define soap_out__saml2__AuthzDecisionStatement soap_out_saml2__AuthzDecisionStatementType


#define soap_s2_saml2__AuthzDecisionStatement soap_s2saml2__AuthzDecisionStatementType


#define soap_in__saml2__AuthzDecisionStatement soap_in_saml2__AuthzDecisionStatementType

#define soap_new__saml2__AuthzDecisionStatement soap_new_saml2__AuthzDecisionStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthzDecisionStatement(struct soap*, const struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AuthzDecisionStatement
#define soap_write__saml2__AuthzDecisionStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthzDecisionStatement
#define soap_PUT__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthzDecisionStatement
#define soap_PATCH__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthzDecisionStatement
#define soap_POST_send__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthzDecisionStatement soap_get_saml2__AuthzDecisionStatementType


#define soap_read__saml2__AuthzDecisionStatement soap_read_saml2__AuthzDecisionStatementType


#define soap_GET__saml2__AuthzDecisionStatement soap_GET_saml2__AuthzDecisionStatementType


#define soap_POST_recv__saml2__AuthzDecisionStatement soap_POST_recv_saml2__AuthzDecisionStatementType

#endif
/* _saml2__AuthnContext is a typedef synonym of saml2__AuthnContextType */

#ifndef SOAP_TYPE__saml2__AuthnContext_DEFINED
#define SOAP_TYPE__saml2__AuthnContext_DEFINED

#define soap_default__saml2__AuthnContext soap_default_saml2__AuthnContextType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *);

#define soap_serialize__saml2__AuthnContext soap_serialize_saml2__AuthnContextType


#define soap__saml2__AuthnContext2s soap_saml2__AuthnContextType2s


#define soap_out__saml2__AuthnContext soap_out_saml2__AuthnContextType


#define soap_s2_saml2__AuthnContext soap_s2saml2__AuthnContextType


#define soap_in__saml2__AuthnContext soap_in_saml2__AuthnContextType

#define soap_new__saml2__AuthnContext soap_new_saml2__AuthnContextType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContext(struct soap*, const struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_write__saml2__AuthnContext
#define soap_write__saml2__AuthnContext(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContext
#define soap_PUT__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContext
#define soap_PATCH__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContext
#define soap_POST_send__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContext soap_get_saml2__AuthnContextType


#define soap_read__saml2__AuthnContext soap_read_saml2__AuthnContextType


#define soap_GET__saml2__AuthnContext soap_GET_saml2__AuthnContextType


#define soap_POST_recv__saml2__AuthnContext soap_POST_recv_saml2__AuthnContextType

#endif
/* _saml2__SubjectLocality is a typedef synonym of saml2__SubjectLocalityType */

#ifndef SOAP_TYPE__saml2__SubjectLocality_DEFINED
#define SOAP_TYPE__saml2__SubjectLocality_DEFINED

#define soap_default__saml2__SubjectLocality soap_default_saml2__SubjectLocalityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *);

#define soap_serialize__saml2__SubjectLocality soap_serialize_saml2__SubjectLocalityType


#define soap__saml2__SubjectLocality2s soap_saml2__SubjectLocalityType2s


#define soap_out__saml2__SubjectLocality soap_out_saml2__SubjectLocalityType


#define soap_s2_saml2__SubjectLocality soap_s2saml2__SubjectLocalityType


#define soap_in__saml2__SubjectLocality soap_in_saml2__SubjectLocalityType

#define soap_new__saml2__SubjectLocality soap_new_saml2__SubjectLocalityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectLocality(struct soap*, const struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectLocality
#define soap_write__saml2__SubjectLocality(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectLocality
#define soap_PUT__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectLocality
#define soap_PATCH__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectLocality
#define soap_POST_send__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectLocality soap_get_saml2__SubjectLocalityType


#define soap_read__saml2__SubjectLocality soap_read_saml2__SubjectLocalityType


#define soap_GET__saml2__SubjectLocality soap_GET_saml2__SubjectLocalityType


#define soap_POST_recv__saml2__SubjectLocality soap_POST_recv_saml2__SubjectLocalityType

#endif
/* _saml2__AuthnStatement is a typedef synonym of saml2__AuthnStatementType */

#ifndef SOAP_TYPE__saml2__AuthnStatement_DEFINED
#define SOAP_TYPE__saml2__AuthnStatement_DEFINED

#define soap_default__saml2__AuthnStatement soap_default_saml2__AuthnStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *);

#define soap_serialize__saml2__AuthnStatement soap_serialize_saml2__AuthnStatementType


#define soap__saml2__AuthnStatement2s soap_saml2__AuthnStatementType2s


#define soap_out__saml2__AuthnStatement soap_out_saml2__AuthnStatementType


#define soap_s2_saml2__AuthnStatement soap_s2saml2__AuthnStatementType


#define soap_in__saml2__AuthnStatement soap_in_saml2__AuthnStatementType

#define soap_new__saml2__AuthnStatement soap_new_saml2__AuthnStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnStatement(struct soap*, const struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AuthnStatement
#define soap_write__saml2__AuthnStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnStatement
#define soap_PUT__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnStatement
#define soap_PATCH__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnStatement
#define soap_POST_send__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnStatement soap_get_saml2__AuthnStatementType


#define soap_read__saml2__AuthnStatement soap_read_saml2__AuthnStatementType


#define soap_GET__saml2__AuthnStatement soap_GET_saml2__AuthnStatementType


#define soap_POST_recv__saml2__AuthnStatement soap_POST_recv_saml2__AuthnStatementType

#endif
/* _saml2__Statement is a typedef synonym of saml2__StatementAbstractType */

#ifndef SOAP_TYPE__saml2__Statement_DEFINED
#define SOAP_TYPE__saml2__Statement_DEFINED

#define soap_default__saml2__Statement soap_default_saml2__StatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *);

#define soap_serialize__saml2__Statement soap_serialize_saml2__StatementAbstractType


#define soap__saml2__Statement2s soap_saml2__StatementAbstractType2s


#define soap_out__saml2__Statement soap_out_saml2__StatementAbstractType


#define soap_s2_saml2__Statement soap_s2saml2__StatementAbstractType


#define soap_in__saml2__Statement soap_in_saml2__StatementAbstractType

#define soap_new__saml2__Statement soap_new_saml2__StatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Statement(struct soap*, const struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__Statement
#define soap_write__saml2__Statement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Statement
#define soap_PUT__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Statement
#define soap_PATCH__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Statement
#define soap_POST_send__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Statement soap_get_saml2__StatementAbstractType


#define soap_read__saml2__Statement soap_read_saml2__StatementAbstractType


#define soap_GET__saml2__Statement soap_GET_saml2__StatementAbstractType


#define soap_POST_recv__saml2__Statement soap_POST_recv_saml2__StatementAbstractType

#endif
/* _saml2__EncryptedAssertion is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedAssertion_DEFINED
#define SOAP_TYPE__saml2__EncryptedAssertion_DEFINED

#define soap_default__saml2__EncryptedAssertion soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedAssertion soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedAssertion2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedAssertion soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedAssertion soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedAssertion soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedAssertion soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedAssertion(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedAssertion
#define soap_write__saml2__EncryptedAssertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedAssertion
#define soap_PUT__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedAssertion
#define soap_PATCH__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedAssertion
#define soap_POST_send__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedAssertion soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedAssertion soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedAssertion soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedAssertion soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__Advice is a typedef synonym of saml2__AdviceType */

#ifndef SOAP_TYPE__saml2__Advice_DEFINED
#define SOAP_TYPE__saml2__Advice_DEFINED

#define soap_default__saml2__Advice soap_default_saml2__AdviceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *);

#define soap_serialize__saml2__Advice soap_serialize_saml2__AdviceType


#define soap__saml2__Advice2s soap_saml2__AdviceType2s


#define soap_out__saml2__Advice soap_out_saml2__AdviceType


#define soap_s2_saml2__Advice soap_s2saml2__AdviceType


#define soap_in__saml2__Advice soap_in_saml2__AdviceType

#define soap_new__saml2__Advice soap_new_saml2__AdviceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Advice(struct soap*, const struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_write__saml2__Advice
#define soap_write__saml2__Advice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Advice
#define soap_PUT__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Advice
#define soap_PATCH__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Advice
#define soap_POST_send__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Advice soap_get_saml2__AdviceType


#define soap_read__saml2__Advice soap_read_saml2__AdviceType


#define soap_GET__saml2__Advice soap_GET_saml2__AdviceType


#define soap_POST_recv__saml2__Advice soap_POST_recv_saml2__AdviceType

#endif
/* _saml2__ProxyRestriction is a typedef synonym of saml2__ProxyRestrictionType */

#ifndef SOAP_TYPE__saml2__ProxyRestriction_DEFINED
#define SOAP_TYPE__saml2__ProxyRestriction_DEFINED

#define soap_default__saml2__ProxyRestriction soap_default_saml2__ProxyRestrictionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *);

#define soap_serialize__saml2__ProxyRestriction soap_serialize_saml2__ProxyRestrictionType


#define soap__saml2__ProxyRestriction2s soap_saml2__ProxyRestrictionType2s


#define soap_out__saml2__ProxyRestriction soap_out_saml2__ProxyRestrictionType


#define soap_s2_saml2__ProxyRestriction soap_s2saml2__ProxyRestrictionType


#define soap_in__saml2__ProxyRestriction soap_in_saml2__ProxyRestrictionType

#define soap_new__saml2__ProxyRestriction soap_new_saml2__ProxyRestrictionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__ProxyRestriction(struct soap*, const struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_write__saml2__ProxyRestriction
#define soap_write__saml2__ProxyRestriction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__ProxyRestriction
#define soap_PUT__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__ProxyRestriction
#define soap_PATCH__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__ProxyRestriction
#define soap_POST_send__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__ProxyRestriction soap_get_saml2__ProxyRestrictionType


#define soap_read__saml2__ProxyRestriction soap_read_saml2__ProxyRestrictionType


#define soap_GET__saml2__ProxyRestriction soap_GET_saml2__ProxyRestrictionType


#define soap_POST_recv__saml2__ProxyRestriction soap_POST_recv_saml2__ProxyRestrictionType

#endif
/* _saml2__OneTimeUse is a typedef synonym of saml2__OneTimeUseType */

#ifndef SOAP_TYPE__saml2__OneTimeUse_DEFINED
#define SOAP_TYPE__saml2__OneTimeUse_DEFINED

#define soap_default__saml2__OneTimeUse soap_default_saml2__OneTimeUseType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *);

#define soap_serialize__saml2__OneTimeUse soap_serialize_saml2__OneTimeUseType


#define soap__saml2__OneTimeUse2s soap_saml2__OneTimeUseType2s


#define soap_out__saml2__OneTimeUse soap_out_saml2__OneTimeUseType


#define soap_s2_saml2__OneTimeUse soap_s2saml2__OneTimeUseType


#define soap_in__saml2__OneTimeUse soap_in_saml2__OneTimeUseType

#define soap_new__saml2__OneTimeUse soap_new_saml2__OneTimeUseType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__OneTimeUse(struct soap*, const struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_write__saml2__OneTimeUse
#define soap_write__saml2__OneTimeUse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__OneTimeUse
#define soap_PUT__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__OneTimeUse
#define soap_PATCH__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__OneTimeUse
#define soap_POST_send__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__OneTimeUse soap_get_saml2__OneTimeUseType


#define soap_read__saml2__OneTimeUse soap_read_saml2__OneTimeUseType


#define soap_GET__saml2__OneTimeUse soap_GET_saml2__OneTimeUseType


#define soap_POST_recv__saml2__OneTimeUse soap_POST_recv_saml2__OneTimeUseType

#endif
/* _saml2__AudienceRestriction is a typedef synonym of saml2__AudienceRestrictionType */

#ifndef SOAP_TYPE__saml2__AudienceRestriction_DEFINED
#define SOAP_TYPE__saml2__AudienceRestriction_DEFINED

#define soap_default__saml2__AudienceRestriction soap_default_saml2__AudienceRestrictionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *);

#define soap_serialize__saml2__AudienceRestriction soap_serialize_saml2__AudienceRestrictionType


#define soap__saml2__AudienceRestriction2s soap_saml2__AudienceRestrictionType2s


#define soap_out__saml2__AudienceRestriction soap_out_saml2__AudienceRestrictionType


#define soap_s2_saml2__AudienceRestriction soap_s2saml2__AudienceRestrictionType


#define soap_in__saml2__AudienceRestriction soap_in_saml2__AudienceRestrictionType

#define soap_new__saml2__AudienceRestriction soap_new_saml2__AudienceRestrictionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AudienceRestriction(struct soap*, const struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_write__saml2__AudienceRestriction
#define soap_write__saml2__AudienceRestriction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AudienceRestriction
#define soap_PUT__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AudienceRestriction
#define soap_PATCH__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AudienceRestriction
#define soap_POST_send__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AudienceRestriction soap_get_saml2__AudienceRestrictionType


#define soap_read__saml2__AudienceRestriction soap_read_saml2__AudienceRestrictionType


#define soap_GET__saml2__AudienceRestriction soap_GET_saml2__AudienceRestrictionType


#define soap_POST_recv__saml2__AudienceRestriction soap_POST_recv_saml2__AudienceRestrictionType

#endif
/* _saml2__Condition is a typedef synonym of saml2__ConditionAbstractType */

#ifndef SOAP_TYPE__saml2__Condition_DEFINED
#define SOAP_TYPE__saml2__Condition_DEFINED

#define soap_default__saml2__Condition soap_default_saml2__ConditionAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *);

#define soap_serialize__saml2__Condition soap_serialize_saml2__ConditionAbstractType


#define soap__saml2__Condition2s soap_saml2__ConditionAbstractType2s


#define soap_out__saml2__Condition soap_out_saml2__ConditionAbstractType


#define soap_s2_saml2__Condition soap_s2saml2__ConditionAbstractType


#define soap_in__saml2__Condition soap_in_saml2__ConditionAbstractType

#define soap_new__saml2__Condition soap_new_saml2__ConditionAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Condition(struct soap*, const struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__Condition
#define soap_write__saml2__Condition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Condition
#define soap_PUT__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Condition
#define soap_PATCH__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Condition
#define soap_POST_send__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Condition soap_get_saml2__ConditionAbstractType


#define soap_read__saml2__Condition soap_read_saml2__ConditionAbstractType


#define soap_GET__saml2__Condition soap_GET_saml2__ConditionAbstractType


#define soap_POST_recv__saml2__Condition soap_POST_recv_saml2__ConditionAbstractType

#endif
/* _saml2__Conditions is a typedef synonym of saml2__ConditionsType */

#ifndef SOAP_TYPE__saml2__Conditions_DEFINED
#define SOAP_TYPE__saml2__Conditions_DEFINED

#define soap_default__saml2__Conditions soap_default_saml2__ConditionsType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *);

#define soap_serialize__saml2__Conditions soap_serialize_saml2__ConditionsType


#define soap__saml2__Conditions2s soap_saml2__ConditionsType2s


#define soap_out__saml2__Conditions soap_out_saml2__ConditionsType


#define soap_s2_saml2__Conditions soap_s2saml2__ConditionsType


#define soap_in__saml2__Conditions soap_in_saml2__ConditionsType

#define soap_new__saml2__Conditions soap_new_saml2__ConditionsType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Conditions(struct soap*, const struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_write__saml2__Conditions
#define soap_write__saml2__Conditions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Conditions
#define soap_PUT__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Conditions
#define soap_PATCH__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Conditions
#define soap_POST_send__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Conditions soap_get_saml2__ConditionsType


#define soap_read__saml2__Conditions soap_read_saml2__ConditionsType


#define soap_GET__saml2__Conditions soap_GET_saml2__ConditionsType


#define soap_POST_recv__saml2__Conditions soap_POST_recv_saml2__ConditionsType

#endif
/* _saml2__SubjectConfirmationData is a typedef synonym of saml2__SubjectConfirmationDataType */

#ifndef SOAP_TYPE__saml2__SubjectConfirmationData_DEFINED
#define SOAP_TYPE__saml2__SubjectConfirmationData_DEFINED

#define soap_default__saml2__SubjectConfirmationData soap_default_saml2__SubjectConfirmationDataType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *);

#define soap_serialize__saml2__SubjectConfirmationData soap_serialize_saml2__SubjectConfirmationDataType


#define soap__saml2__SubjectConfirmationData2s soap_saml2__SubjectConfirmationDataType2s


#define soap_out__saml2__SubjectConfirmationData soap_out_saml2__SubjectConfirmationDataType


#define soap_s2_saml2__SubjectConfirmationData soap_s2saml2__SubjectConfirmationDataType


#define soap_in__saml2__SubjectConfirmationData soap_in_saml2__SubjectConfirmationDataType

#define soap_new__saml2__SubjectConfirmationData soap_new_saml2__SubjectConfirmationDataType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectConfirmationData(struct soap*, const struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectConfirmationData
#define soap_write__saml2__SubjectConfirmationData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectConfirmationData
#define soap_PUT__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectConfirmationData
#define soap_PATCH__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectConfirmationData
#define soap_POST_send__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectConfirmationData soap_get_saml2__SubjectConfirmationDataType


#define soap_read__saml2__SubjectConfirmationData soap_read_saml2__SubjectConfirmationDataType


#define soap_GET__saml2__SubjectConfirmationData soap_GET_saml2__SubjectConfirmationDataType


#define soap_POST_recv__saml2__SubjectConfirmationData soap_POST_recv_saml2__SubjectConfirmationDataType

#endif
/* _saml2__SubjectConfirmation is a typedef synonym of saml2__SubjectConfirmationType */

#ifndef SOAP_TYPE__saml2__SubjectConfirmation_DEFINED
#define SOAP_TYPE__saml2__SubjectConfirmation_DEFINED

#define soap_default__saml2__SubjectConfirmation soap_default_saml2__SubjectConfirmationType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *);

#define soap_serialize__saml2__SubjectConfirmation soap_serialize_saml2__SubjectConfirmationType


#define soap__saml2__SubjectConfirmation2s soap_saml2__SubjectConfirmationType2s


#define soap_out__saml2__SubjectConfirmation soap_out_saml2__SubjectConfirmationType


#define soap_s2_saml2__SubjectConfirmation soap_s2saml2__SubjectConfirmationType


#define soap_in__saml2__SubjectConfirmation soap_in_saml2__SubjectConfirmationType

#define soap_new__saml2__SubjectConfirmation soap_new_saml2__SubjectConfirmationType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectConfirmation(struct soap*, const struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectConfirmation
#define soap_write__saml2__SubjectConfirmation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectConfirmation
#define soap_PUT__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectConfirmation
#define soap_PATCH__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectConfirmation
#define soap_POST_send__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectConfirmation soap_get_saml2__SubjectConfirmationType


#define soap_read__saml2__SubjectConfirmation soap_read_saml2__SubjectConfirmationType


#define soap_GET__saml2__SubjectConfirmation soap_GET_saml2__SubjectConfirmationType


#define soap_POST_recv__saml2__SubjectConfirmation soap_POST_recv_saml2__SubjectConfirmationType

#endif
/* _saml2__Subject is a typedef synonym of saml2__SubjectType */

#ifndef SOAP_TYPE__saml2__Subject_DEFINED
#define SOAP_TYPE__saml2__Subject_DEFINED

#define soap_default__saml2__Subject soap_default_saml2__SubjectType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *);

#define soap_serialize__saml2__Subject soap_serialize_saml2__SubjectType


#define soap__saml2__Subject2s soap_saml2__SubjectType2s


#define soap_out__saml2__Subject soap_out_saml2__SubjectType


#define soap_s2_saml2__Subject soap_s2saml2__SubjectType


#define soap_in__saml2__Subject soap_in_saml2__SubjectType

#define soap_new__saml2__Subject soap_new_saml2__SubjectType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Subject(struct soap*, const struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_write__saml2__Subject
#define soap_write__saml2__Subject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Subject
#define soap_PUT__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Subject
#define soap_PATCH__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Subject
#define soap_POST_send__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Subject soap_get_saml2__SubjectType


#define soap_read__saml2__Subject soap_read_saml2__SubjectType


#define soap_GET__saml2__Subject soap_GET_saml2__SubjectType


#define soap_POST_recv__saml2__Subject soap_POST_recv_saml2__SubjectType

#endif
/* _saml2__Assertion is a typedef synonym of saml2__AssertionType */

#ifndef SOAP_TYPE__saml2__Assertion_DEFINED
#define SOAP_TYPE__saml2__Assertion_DEFINED

#define soap_default__saml2__Assertion soap_default_saml2__AssertionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *);

#define soap_serialize__saml2__Assertion soap_serialize_saml2__AssertionType


#define soap__saml2__Assertion2s soap_saml2__AssertionType2s


#define soap_out__saml2__Assertion soap_out_saml2__AssertionType


#define soap_s2_saml2__Assertion soap_s2saml2__AssertionType


#define soap_in__saml2__Assertion soap_in_saml2__AssertionType

#define soap_new__saml2__Assertion soap_new_saml2__AssertionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Assertion(struct soap*, const struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_write__saml2__Assertion
#define soap_write__saml2__Assertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Assertion
#define soap_PUT__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Assertion
#define soap_PATCH__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Assertion
#define soap_POST_send__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Assertion soap_get_saml2__AssertionType


#define soap_read__saml2__Assertion soap_read_saml2__AssertionType


#define soap_GET__saml2__Assertion soap_GET_saml2__AssertionType


#define soap_POST_recv__saml2__Assertion soap_POST_recv_saml2__AssertionType

#endif
/* _saml2__Issuer is a typedef synonym of saml2__NameIDType */

#ifndef SOAP_TYPE__saml2__Issuer_DEFINED
#define SOAP_TYPE__saml2__Issuer_DEFINED

#define soap_default__saml2__Issuer soap_default_saml2__NameIDType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);

#define soap_serialize__saml2__Issuer soap_serialize_saml2__NameIDType


#define soap__saml2__Issuer2s soap_saml2__NameIDType2s


#define soap_out__saml2__Issuer soap_out_saml2__NameIDType


#define soap_s2_saml2__Issuer soap_s2saml2__NameIDType


#define soap_in__saml2__Issuer soap_in_saml2__NameIDType

#define soap_new__saml2__Issuer soap_new_saml2__NameIDType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Issuer(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write__saml2__Issuer
#define soap_write__saml2__Issuer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Issuer
#define soap_PUT__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Issuer
#define soap_PATCH__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Issuer
#define soap_POST_send__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Issuer soap_get_saml2__NameIDType


#define soap_read__saml2__Issuer soap_read_saml2__NameIDType


#define soap_GET__saml2__Issuer soap_GET_saml2__NameIDType


#define soap_POST_recv__saml2__Issuer soap_POST_recv_saml2__NameIDType

#endif
/* _saml2__EncryptedID is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedID_DEFINED
#define SOAP_TYPE__saml2__EncryptedID_DEFINED

#define soap_default__saml2__EncryptedID soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedID soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedID2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedID soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedID soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedID soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedID soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedID(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedID
#define soap_write__saml2__EncryptedID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedID
#define soap_PUT__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedID
#define soap_PATCH__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedID
#define soap_POST_send__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedID soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedID soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedID soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedID soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__NameID is a typedef synonym of saml2__NameIDType */

#ifndef SOAP_TYPE__saml2__NameID_DEFINED
#define SOAP_TYPE__saml2__NameID_DEFINED

#define soap_default__saml2__NameID soap_default_saml2__NameIDType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);

#define soap_serialize__saml2__NameID soap_serialize_saml2__NameIDType


#define soap__saml2__NameID2s soap_saml2__NameIDType2s


#define soap_out__saml2__NameID soap_out_saml2__NameIDType


#define soap_s2_saml2__NameID soap_s2saml2__NameIDType


#define soap_in__saml2__NameID soap_in_saml2__NameIDType

#define soap_new__saml2__NameID soap_new_saml2__NameIDType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__NameID(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write__saml2__NameID
#define soap_write__saml2__NameID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__NameID
#define soap_PUT__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__NameID
#define soap_PATCH__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__NameID
#define soap_POST_send__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__NameID soap_get_saml2__NameIDType


#define soap_read__saml2__NameID soap_read_saml2__NameIDType


#define soap_GET__saml2__NameID soap_GET_saml2__NameIDType


#define soap_POST_recv__saml2__NameID soap_POST_recv_saml2__NameIDType

#endif
/* _saml2__BaseID is a typedef synonym of saml2__BaseIDAbstractType */

#ifndef SOAP_TYPE__saml2__BaseID_DEFINED
#define SOAP_TYPE__saml2__BaseID_DEFINED

#define soap_default__saml2__BaseID soap_default_saml2__BaseIDAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *);

#define soap_serialize__saml2__BaseID soap_serialize_saml2__BaseIDAbstractType


#define soap__saml2__BaseID2s soap_saml2__BaseIDAbstractType2s


#define soap_out__saml2__BaseID soap_out_saml2__BaseIDAbstractType


#define soap_s2_saml2__BaseID soap_s2saml2__BaseIDAbstractType


#define soap_in__saml2__BaseID soap_in_saml2__BaseIDAbstractType

#define soap_new__saml2__BaseID soap_new_saml2__BaseIDAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__BaseID(struct soap*, const struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__BaseID
#define soap_write__saml2__BaseID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__BaseID
#define soap_PUT__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__BaseID
#define soap_PATCH__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__BaseID
#define soap_POST_send__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__BaseID soap_get_saml2__BaseIDAbstractType


#define soap_read__saml2__BaseID soap_read_saml2__BaseIDAbstractType


#define soap_GET__saml2__BaseID soap_GET_saml2__BaseIDAbstractType


#define soap_POST_recv__saml2__BaseID soap_POST_recv_saml2__BaseIDAbstractType

#endif

#ifndef SOAP_TYPE___saml2__union_AttributeStatementType_DEFINED
#define SOAP_TYPE___saml2__union_AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AttributeStatementType(struct soap*, const struct __saml2__union_AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AttributeStatementType(struct soap*, const char*, int, const struct __saml2__union_AttributeStatementType *, const char*);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_in___saml2__union_AttributeStatementType(struct soap*, const char*, struct __saml2__union_AttributeStatementType *, const char*);

SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_new___saml2__union_AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AttributeStatementType(struct soap*, const struct __saml2__union_AttributeStatementType *, const char*, const char*);

#ifndef soap_write___saml2__union_AttributeStatementType
#define soap_write___saml2__union_AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AttributeStatementType
#define soap_PUT___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AttributeStatementType
#define soap_PATCH___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AttributeStatementType
#define soap_POST_send___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_get___saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *, const char*, const char*);

#ifndef soap_read___saml2__union_AttributeStatementType
#define soap_read___saml2__union_AttributeStatementType(soap, data) ( ((data) ? (soap_default___saml2__union_AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AttributeStatementType
#define soap_GET___saml2__union_AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AttributeStatementType
#define soap_POST_recv___saml2__union_AttributeStatementType(soap, data) ( soap_read___saml2__union_AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_EvidenceType_DEFINED
#define SOAP_TYPE___saml2__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_EvidenceType(struct soap*, const struct __saml2__union_EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_EvidenceType(struct soap*, const char*, int, const struct __saml2__union_EvidenceType *, const char*);
SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_in___saml2__union_EvidenceType(struct soap*, const char*, struct __saml2__union_EvidenceType *, const char*);

SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_new___saml2__union_EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_EvidenceType(struct soap*, const struct __saml2__union_EvidenceType *, const char*, const char*);

#ifndef soap_write___saml2__union_EvidenceType
#define soap_write___saml2__union_EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_EvidenceType
#define soap_PUT___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_EvidenceType
#define soap_PATCH___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_EvidenceType
#define soap_POST_send___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_get___saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *, const char*, const char*);

#ifndef soap_read___saml2__union_EvidenceType
#define soap_read___saml2__union_EvidenceType(soap, data) ( ((data) ? (soap_default___saml2__union_EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_EvidenceType
#define soap_GET___saml2__union_EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_EvidenceType
#define soap_POST_recv___saml2__union_EvidenceType(soap, data) ( soap_read___saml2__union_EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_AdviceType_DEFINED
#define SOAP_TYPE___saml2__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AdviceType(struct soap*, const struct __saml2__union_AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AdviceType(struct soap*, const char*, int, const struct __saml2__union_AdviceType *, const char*);
SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_in___saml2__union_AdviceType(struct soap*, const char*, struct __saml2__union_AdviceType *, const char*);

SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_new___saml2__union_AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AdviceType(struct soap*, const struct __saml2__union_AdviceType *, const char*, const char*);

#ifndef soap_write___saml2__union_AdviceType
#define soap_write___saml2__union_AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AdviceType
#define soap_PUT___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AdviceType
#define soap_PATCH___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AdviceType
#define soap_POST_send___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_get___saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *, const char*, const char*);

#ifndef soap_read___saml2__union_AdviceType
#define soap_read___saml2__union_AdviceType(soap, data) ( ((data) ? (soap_default___saml2__union_AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AdviceType
#define soap_GET___saml2__union_AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AdviceType
#define soap_POST_recv___saml2__union_AdviceType(soap, data) ( soap_read___saml2__union_AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_ConditionsType_DEFINED
#define SOAP_TYPE___saml2__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_ConditionsType(struct soap*, const struct __saml2__union_ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_ConditionsType(struct soap*, const char*, int, const struct __saml2__union_ConditionsType *, const char*);
SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_in___saml2__union_ConditionsType(struct soap*, const char*, struct __saml2__union_ConditionsType *, const char*);

SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_new___saml2__union_ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_ConditionsType(struct soap*, const struct __saml2__union_ConditionsType *, const char*, const char*);

#ifndef soap_write___saml2__union_ConditionsType
#define soap_write___saml2__union_ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_ConditionsType
#define soap_PUT___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_ConditionsType
#define soap_PATCH___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_ConditionsType
#define soap_POST_send___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_get___saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *, const char*, const char*);

#ifndef soap_read___saml2__union_ConditionsType
#define soap_read___saml2__union_ConditionsType(soap, data) ( ((data) ? (soap_default___saml2__union_ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_ConditionsType
#define soap_GET___saml2__union_ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_ConditionsType
#define soap_POST_recv___saml2__union_ConditionsType(soap, data) ( soap_read___saml2__union_ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_AssertionType_DEFINED
#define SOAP_TYPE___saml2__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AssertionType(struct soap*, const struct __saml2__union_AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AssertionType(struct soap*, const char*, int, const struct __saml2__union_AssertionType *, const char*);
SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_in___saml2__union_AssertionType(struct soap*, const char*, struct __saml2__union_AssertionType *, const char*);

SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_new___saml2__union_AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AssertionType(struct soap*, const struct __saml2__union_AssertionType *, const char*, const char*);

#ifndef soap_write___saml2__union_AssertionType
#define soap_write___saml2__union_AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AssertionType
#define soap_PUT___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AssertionType
#define soap_PATCH___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AssertionType
#define soap_POST_send___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_get___saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *, const char*, const char*);

#ifndef soap_read___saml2__union_AssertionType
#define soap_read___saml2__union_AssertionType(soap, data) ( ((data) ? (soap_default___saml2__union_AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AssertionType
#define soap_GET___saml2__union_AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AssertionType
#define soap_POST_recv___saml2__union_AssertionType(soap, data) ( soap_read___saml2__union_AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AttributeType_DEFINED
#define SOAP_TYPE_saml2__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AttributeType(struct soap*, struct saml2__AttributeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AttributeType(struct soap*, const char*, int, const struct saml2__AttributeType *, const char*);
SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_in_saml2__AttributeType(struct soap*, const char*, struct saml2__AttributeType *, const char*);

SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_new_saml2__AttributeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_write_saml2__AttributeType
#define soap_write_saml2__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AttributeType
#define soap_PUT_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AttributeType
#define soap_PATCH_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AttributeType
#define soap_POST_send_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_get_saml2__AttributeType(struct soap*, struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_read_saml2__AttributeType
#define soap_read_saml2__AttributeType(soap, data) ( ((data) ? (soap_default_saml2__AttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AttributeType
#define soap_GET_saml2__AttributeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AttributeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AttributeType
#define soap_POST_recv_saml2__AttributeType(soap, data) ( soap_read_saml2__AttributeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AttributeStatementType_DEFINED
#define SOAP_TYPE_saml2__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AttributeStatementType(struct soap*, const char*, int, const struct saml2__AttributeStatementType *, const char*);
SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_in_saml2__AttributeStatementType(struct soap*, const char*, struct saml2__AttributeStatementType *, const char*);

SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_new_saml2__AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AttributeStatementType
#define soap_write_saml2__AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AttributeStatementType
#define soap_PUT_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AttributeStatementType
#define soap_PATCH_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AttributeStatementType
#define soap_POST_send_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_get_saml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AttributeStatementType
#define soap_read_saml2__AttributeStatementType(soap, data) ( ((data) ? (soap_default_saml2__AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AttributeStatementType
#define soap_GET_saml2__AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AttributeStatementType
#define soap_POST_recv_saml2__AttributeStatementType(soap, data) ( soap_read_saml2__AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__EvidenceType_DEFINED
#define SOAP_TYPE_saml2__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__EvidenceType(struct soap*, struct saml2__EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__EvidenceType(struct soap*, const char*, int, const struct saml2__EvidenceType *, const char*);
SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_in_saml2__EvidenceType(struct soap*, const char*, struct saml2__EvidenceType *, const char*);

SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_new_saml2__EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_write_saml2__EvidenceType
#define soap_write_saml2__EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__EvidenceType
#define soap_PUT_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__EvidenceType
#define soap_PATCH_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__EvidenceType
#define soap_POST_send_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_get_saml2__EvidenceType(struct soap*, struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_read_saml2__EvidenceType
#define soap_read_saml2__EvidenceType(soap, data) ( ((data) ? (soap_default_saml2__EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__EvidenceType
#define soap_GET_saml2__EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__EvidenceType
#define soap_POST_recv_saml2__EvidenceType(soap, data) ( soap_read_saml2__EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ActionType_DEFINED
#define SOAP_TYPE_saml2__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ActionType(struct soap*, struct saml2__ActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ActionType(struct soap*, const struct saml2__ActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ActionType(struct soap*, const char*, int, const struct saml2__ActionType *, const char*);
SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_in_saml2__ActionType(struct soap*, const char*, struct saml2__ActionType *, const char*);

SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_new_saml2__ActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ActionType(struct soap*, const struct saml2__ActionType *, const char*, const char*);

#ifndef soap_write_saml2__ActionType
#define soap_write_saml2__ActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ActionType
#define soap_PUT_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ActionType
#define soap_PATCH_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ActionType
#define soap_POST_send_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_get_saml2__ActionType(struct soap*, struct saml2__ActionType *, const char*, const char*);

#ifndef soap_read_saml2__ActionType
#define soap_read_saml2__ActionType(soap, data) ( ((data) ? (soap_default_saml2__ActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ActionType
#define soap_GET_saml2__ActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ActionType
#define soap_POST_recv_saml2__ActionType(soap, data) ( soap_read_saml2__ActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthzDecisionStatementType_DEFINED
#define SOAP_TYPE_saml2__AuthzDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthzDecisionStatementType(struct soap*, const char*, int, const struct saml2__AuthzDecisionStatementType *, const char*);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_in_saml2__AuthzDecisionStatementType(struct soap*, const char*, struct saml2__AuthzDecisionStatementType *, const char*);

SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_new_saml2__AuthzDecisionStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AuthzDecisionStatementType
#define soap_write_saml2__AuthzDecisionStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthzDecisionStatementType
#define soap_PUT_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthzDecisionStatementType
#define soap_PATCH_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthzDecisionStatementType
#define soap_POST_send_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_get_saml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AuthzDecisionStatementType
#define soap_read_saml2__AuthzDecisionStatementType(soap, data) ( ((data) ? (soap_default_saml2__AuthzDecisionStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthzDecisionStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthzDecisionStatementType
#define soap_GET_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthzDecisionStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthzDecisionStatementType
#define soap_POST_recv_saml2__AuthzDecisionStatementType(soap, data) ( soap_read_saml2__AuthzDecisionStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthnContextType_DEFINED
#define SOAP_TYPE_saml2__AuthnContextType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthnContextType(struct soap*, const char*, int, const struct saml2__AuthnContextType *, const char*);
SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_in_saml2__AuthnContextType(struct soap*, const char*, struct saml2__AuthnContextType *, const char*);

SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_new_saml2__AuthnContextType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_write_saml2__AuthnContextType
#define soap_write_saml2__AuthnContextType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthnContextType
#define soap_PUT_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthnContextType
#define soap_PATCH_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthnContextType
#define soap_POST_send_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_get_saml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_read_saml2__AuthnContextType
#define soap_read_saml2__AuthnContextType(soap, data) ( ((data) ? (soap_default_saml2__AuthnContextType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthnContextType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthnContextType
#define soap_GET_saml2__AuthnContextType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthnContextType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthnContextType
#define soap_POST_recv_saml2__AuthnContextType(soap, data) ( soap_read_saml2__AuthnContextType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectLocalityType_DEFINED
#define SOAP_TYPE_saml2__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectLocalityType(struct soap*, const char*, int, const struct saml2__SubjectLocalityType *, const char*);
SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_in_saml2__SubjectLocalityType(struct soap*, const char*, struct saml2__SubjectLocalityType *, const char*);

SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_new_saml2__SubjectLocalityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectLocalityType
#define soap_write_saml2__SubjectLocalityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectLocalityType
#define soap_PUT_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectLocalityType
#define soap_PATCH_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectLocalityType
#define soap_POST_send_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_get_saml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectLocalityType
#define soap_read_saml2__SubjectLocalityType(soap, data) ( ((data) ? (soap_default_saml2__SubjectLocalityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectLocalityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectLocalityType
#define soap_GET_saml2__SubjectLocalityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectLocalityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectLocalityType
#define soap_POST_recv_saml2__SubjectLocalityType(soap, data) ( soap_read_saml2__SubjectLocalityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthnStatementType_DEFINED
#define SOAP_TYPE_saml2__AuthnStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthnStatementType(struct soap*, const char*, int, const struct saml2__AuthnStatementType *, const char*);
SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_in_saml2__AuthnStatementType(struct soap*, const char*, struct saml2__AuthnStatementType *, const char*);

SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_new_saml2__AuthnStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AuthnStatementType
#define soap_write_saml2__AuthnStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthnStatementType
#define soap_PUT_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthnStatementType
#define soap_PATCH_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthnStatementType
#define soap_POST_send_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_get_saml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AuthnStatementType
#define soap_read_saml2__AuthnStatementType(soap, data) ( ((data) ? (soap_default_saml2__AuthnStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthnStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthnStatementType
#define soap_GET_saml2__AuthnStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthnStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthnStatementType
#define soap_POST_recv_saml2__AuthnStatementType(soap, data) ( soap_read_saml2__AuthnStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__StatementAbstractType_DEFINED
#define SOAP_TYPE_saml2__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__StatementAbstractType(struct soap*, const char*, int, const struct saml2__StatementAbstractType *, const char*);
SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_in_saml2__StatementAbstractType(struct soap*, const char*, struct saml2__StatementAbstractType *, const char*);

SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_new_saml2__StatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__StatementAbstractType
#define soap_write_saml2__StatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__StatementAbstractType
#define soap_PUT_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__StatementAbstractType
#define soap_PATCH_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__StatementAbstractType
#define soap_POST_send_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_get_saml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__StatementAbstractType
#define soap_read_saml2__StatementAbstractType(soap, data) ( ((data) ? (soap_default_saml2__StatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__StatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__StatementAbstractType
#define soap_GET_saml2__StatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__StatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__StatementAbstractType
#define soap_POST_recv_saml2__StatementAbstractType(soap, data) ( soap_read_saml2__StatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AdviceType_DEFINED
#define SOAP_TYPE_saml2__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AdviceType(struct soap*, struct saml2__AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AdviceType(struct soap*, const char*, int, const struct saml2__AdviceType *, const char*);
SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_in_saml2__AdviceType(struct soap*, const char*, struct saml2__AdviceType *, const char*);

SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_new_saml2__AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_write_saml2__AdviceType
#define soap_write_saml2__AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AdviceType
#define soap_PUT_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AdviceType
#define soap_PATCH_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AdviceType
#define soap_POST_send_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_get_saml2__AdviceType(struct soap*, struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_read_saml2__AdviceType
#define soap_read_saml2__AdviceType(soap, data) ( ((data) ? (soap_default_saml2__AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AdviceType
#define soap_GET_saml2__AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AdviceType
#define soap_POST_recv_saml2__AdviceType(soap, data) ( soap_read_saml2__AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ProxyRestrictionType_DEFINED
#define SOAP_TYPE_saml2__ProxyRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ProxyRestrictionType(struct soap*, const char*, int, const struct saml2__ProxyRestrictionType *, const char*);
SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_in_saml2__ProxyRestrictionType(struct soap*, const char*, struct saml2__ProxyRestrictionType *, const char*);

SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_new_saml2__ProxyRestrictionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_write_saml2__ProxyRestrictionType
#define soap_write_saml2__ProxyRestrictionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ProxyRestrictionType
#define soap_PUT_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ProxyRestrictionType
#define soap_PATCH_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ProxyRestrictionType
#define soap_POST_send_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_get_saml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_read_saml2__ProxyRestrictionType
#define soap_read_saml2__ProxyRestrictionType(soap, data) ( ((data) ? (soap_default_saml2__ProxyRestrictionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ProxyRestrictionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ProxyRestrictionType
#define soap_GET_saml2__ProxyRestrictionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ProxyRestrictionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ProxyRestrictionType
#define soap_POST_recv_saml2__ProxyRestrictionType(soap, data) ( soap_read_saml2__ProxyRestrictionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__OneTimeUseType_DEFINED
#define SOAP_TYPE_saml2__OneTimeUseType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__OneTimeUseType(struct soap*, const char*, int, const struct saml2__OneTimeUseType *, const char*);
SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_in_saml2__OneTimeUseType(struct soap*, const char*, struct saml2__OneTimeUseType *, const char*);

SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_new_saml2__OneTimeUseType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_write_saml2__OneTimeUseType
#define soap_write_saml2__OneTimeUseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__OneTimeUseType
#define soap_PUT_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__OneTimeUseType
#define soap_PATCH_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__OneTimeUseType
#define soap_POST_send_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_get_saml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_read_saml2__OneTimeUseType
#define soap_read_saml2__OneTimeUseType(soap, data) ( ((data) ? (soap_default_saml2__OneTimeUseType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__OneTimeUseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__OneTimeUseType
#define soap_GET_saml2__OneTimeUseType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__OneTimeUseType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__OneTimeUseType
#define soap_POST_recv_saml2__OneTimeUseType(soap, data) ( soap_read_saml2__OneTimeUseType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AudienceRestrictionType_DEFINED
#define SOAP_TYPE_saml2__AudienceRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AudienceRestrictionType(struct soap*, const char*, int, const struct saml2__AudienceRestrictionType *, const char*);
SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_in_saml2__AudienceRestrictionType(struct soap*, const char*, struct saml2__AudienceRestrictionType *, const char*);

SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_new_saml2__AudienceRestrictionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_write_saml2__AudienceRestrictionType
#define soap_write_saml2__AudienceRestrictionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AudienceRestrictionType
#define soap_PUT_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AudienceRestrictionType
#define soap_PATCH_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AudienceRestrictionType
#define soap_POST_send_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_get_saml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_read_saml2__AudienceRestrictionType
#define soap_read_saml2__AudienceRestrictionType(soap, data) ( ((data) ? (soap_default_saml2__AudienceRestrictionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AudienceRestrictionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AudienceRestrictionType
#define soap_GET_saml2__AudienceRestrictionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AudienceRestrictionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AudienceRestrictionType
#define soap_POST_recv_saml2__AudienceRestrictionType(soap, data) ( soap_read_saml2__AudienceRestrictionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ConditionAbstractType_DEFINED
#define SOAP_TYPE_saml2__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ConditionAbstractType(struct soap*, const char*, int, const struct saml2__ConditionAbstractType *, const char*);
SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_in_saml2__ConditionAbstractType(struct soap*, const char*, struct saml2__ConditionAbstractType *, const char*);

SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_new_saml2__ConditionAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__ConditionAbstractType
#define soap_write_saml2__ConditionAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ConditionAbstractType
#define soap_PUT_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ConditionAbstractType
#define soap_PATCH_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ConditionAbstractType
#define soap_POST_send_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_get_saml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__ConditionAbstractType
#define soap_read_saml2__ConditionAbstractType(soap, data) ( ((data) ? (soap_default_saml2__ConditionAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ConditionAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ConditionAbstractType
#define soap_GET_saml2__ConditionAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ConditionAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ConditionAbstractType
#define soap_POST_recv_saml2__ConditionAbstractType(soap, data) ( soap_read_saml2__ConditionAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ConditionsType_DEFINED
#define SOAP_TYPE_saml2__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ConditionsType(struct soap*, struct saml2__ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ConditionsType(struct soap*, const char*, int, const struct saml2__ConditionsType *, const char*);
SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_in_saml2__ConditionsType(struct soap*, const char*, struct saml2__ConditionsType *, const char*);

SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_new_saml2__ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_write_saml2__ConditionsType
#define soap_write_saml2__ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ConditionsType
#define soap_PUT_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ConditionsType
#define soap_PATCH_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ConditionsType
#define soap_POST_send_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_get_saml2__ConditionsType(struct soap*, struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_read_saml2__ConditionsType
#define soap_read_saml2__ConditionsType(soap, data) ( ((data) ? (soap_default_saml2__ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ConditionsType
#define soap_GET_saml2__ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ConditionsType
#define soap_POST_recv_saml2__ConditionsType(soap, data) ( soap_read_saml2__ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__KeyInfoConfirmationDataType_DEFINED
#define SOAP_TYPE_saml2__KeyInfoConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__KeyInfoConfirmationDataType(struct soap*, struct saml2__KeyInfoConfirmationDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__KeyInfoConfirmationDataType(struct soap*, const struct saml2__KeyInfoConfirmationDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__KeyInfoConfirmationDataType(struct soap*, const char*, int, const struct saml2__KeyInfoConfirmationDataType *, const char*);
SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_in_saml2__KeyInfoConfirmationDataType(struct soap*, const char*, struct saml2__KeyInfoConfirmationDataType *, const char*);

SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_new_saml2__KeyInfoConfirmationDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__KeyInfoConfirmationDataType(struct soap*, const struct saml2__KeyInfoConfirmationDataType *, const char*, const char*);

#ifndef soap_write_saml2__KeyInfoConfirmationDataType
#define soap_write_saml2__KeyInfoConfirmationDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__KeyInfoConfirmationDataType
#define soap_PUT_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__KeyInfoConfirmationDataType
#define soap_PATCH_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__KeyInfoConfirmationDataType
#define soap_POST_send_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_get_saml2__KeyInfoConfirmationDataType(struct soap*, struct saml2__KeyInfoConfirmationDataType *, const char*, const char*);

#ifndef soap_read_saml2__KeyInfoConfirmationDataType
#define soap_read_saml2__KeyInfoConfirmationDataType(soap, data) ( ((data) ? (soap_default_saml2__KeyInfoConfirmationDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__KeyInfoConfirmationDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__KeyInfoConfirmationDataType
#define soap_GET_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__KeyInfoConfirmationDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__KeyInfoConfirmationDataType
#define soap_POST_recv_saml2__KeyInfoConfirmationDataType(soap, data) ( soap_read_saml2__KeyInfoConfirmationDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectConfirmationDataType_DEFINED
#define SOAP_TYPE_saml2__SubjectConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectConfirmationDataType(struct soap*, const char*, int, const struct saml2__SubjectConfirmationDataType *, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_in_saml2__SubjectConfirmationDataType(struct soap*, const char*, struct saml2__SubjectConfirmationDataType *, const char*);

SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_new_saml2__SubjectConfirmationDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectConfirmationDataType
#define soap_write_saml2__SubjectConfirmationDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectConfirmationDataType
#define soap_PUT_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectConfirmationDataType
#define soap_PATCH_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectConfirmationDataType
#define soap_POST_send_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_get_saml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectConfirmationDataType
#define soap_read_saml2__SubjectConfirmationDataType(soap, data) ( ((data) ? (soap_default_saml2__SubjectConfirmationDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectConfirmationDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectConfirmationDataType
#define soap_GET_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectConfirmationDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectConfirmationDataType
#define soap_POST_recv_saml2__SubjectConfirmationDataType(soap, data) ( soap_read_saml2__SubjectConfirmationDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_saml2__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectConfirmationType(struct soap*, const char*, int, const struct saml2__SubjectConfirmationType *, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_in_saml2__SubjectConfirmationType(struct soap*, const char*, struct saml2__SubjectConfirmationType *, const char*);

SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_new_saml2__SubjectConfirmationType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectConfirmationType
#define soap_write_saml2__SubjectConfirmationType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectConfirmationType
#define soap_PUT_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectConfirmationType
#define soap_PATCH_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectConfirmationType
#define soap_POST_send_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_get_saml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectConfirmationType
#define soap_read_saml2__SubjectConfirmationType(soap, data) ( ((data) ? (soap_default_saml2__SubjectConfirmationType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectConfirmationType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectConfirmationType
#define soap_GET_saml2__SubjectConfirmationType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectConfirmationType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectConfirmationType
#define soap_POST_recv_saml2__SubjectConfirmationType(soap, data) ( soap_read_saml2__SubjectConfirmationType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectType_DEFINED
#define SOAP_TYPE_saml2__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectType(struct soap*, struct saml2__SubjectType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectType(struct soap*, const char*, int, const struct saml2__SubjectType *, const char*);
SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_in_saml2__SubjectType(struct soap*, const char*, struct saml2__SubjectType *, const char*);

SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_new_saml2__SubjectType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectType
#define soap_write_saml2__SubjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectType
#define soap_PUT_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectType
#define soap_PATCH_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectType
#define soap_POST_send_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_get_saml2__SubjectType(struct soap*, struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectType
#define soap_read_saml2__SubjectType(soap, data) ( ((data) ? (soap_default_saml2__SubjectType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectType
#define soap_GET_saml2__SubjectType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectType
#define soap_POST_recv_saml2__SubjectType(soap, data) ( soap_read_saml2__SubjectType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AssertionType_DEFINED
#define SOAP_TYPE_saml2__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AssertionType(struct soap*, struct saml2__AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AssertionType(struct soap*, const char*, int, const struct saml2__AssertionType *, const char*);
SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_in_saml2__AssertionType(struct soap*, const char*, struct saml2__AssertionType *, const char*);

SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_new_saml2__AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_write_saml2__AssertionType
#define soap_write_saml2__AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AssertionType
#define soap_PUT_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AssertionType
#define soap_PATCH_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AssertionType
#define soap_POST_send_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_get_saml2__AssertionType(struct soap*, struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_read_saml2__AssertionType
#define soap_read_saml2__AssertionType(soap, data) ( ((data) ? (soap_default_saml2__AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AssertionType
#define soap_GET_saml2__AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AssertionType
#define soap_POST_recv_saml2__AssertionType(soap, data) ( soap_read_saml2__AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__EncryptedElementType_DEFINED
#define SOAP_TYPE_saml2__EncryptedElementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__EncryptedElementType(struct soap*, const char*, int, const struct saml2__EncryptedElementType *, const char*);
SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_in_saml2__EncryptedElementType(struct soap*, const char*, struct saml2__EncryptedElementType *, const char*);

SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_new_saml2__EncryptedElementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write_saml2__EncryptedElementType
#define soap_write_saml2__EncryptedElementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__EncryptedElementType
#define soap_PUT_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__EncryptedElementType
#define soap_PATCH_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__EncryptedElementType
#define soap_POST_send_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_get_saml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_read_saml2__EncryptedElementType
#define soap_read_saml2__EncryptedElementType(soap, data) ( ((data) ? (soap_default_saml2__EncryptedElementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__EncryptedElementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__EncryptedElementType
#define soap_GET_saml2__EncryptedElementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__EncryptedElementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__EncryptedElementType
#define soap_POST_recv_saml2__EncryptedElementType(soap, data) ( soap_read_saml2__EncryptedElementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__NameIDType_DEFINED
#define SOAP_TYPE_saml2__NameIDType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__NameIDType(struct soap*, struct saml2__NameIDType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__NameIDType(struct soap*, const char*, int, const struct saml2__NameIDType *, const char*);
SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_in_saml2__NameIDType(struct soap*, const char*, struct saml2__NameIDType *, const char*);

SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_new_saml2__NameIDType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write_saml2__NameIDType
#define soap_write_saml2__NameIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__NameIDType
#define soap_PUT_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__NameIDType
#define soap_PATCH_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__NameIDType
#define soap_POST_send_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_get_saml2__NameIDType(struct soap*, struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_read_saml2__NameIDType
#define soap_read_saml2__NameIDType(soap, data) ( ((data) ? (soap_default_saml2__NameIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__NameIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__NameIDType
#define soap_GET_saml2__NameIDType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__NameIDType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__NameIDType
#define soap_POST_recv_saml2__NameIDType(soap, data) ( soap_read_saml2__NameIDType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__BaseIDAbstractType_DEFINED
#define SOAP_TYPE_saml2__BaseIDAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__BaseIDAbstractType(struct soap*, const char*, int, const struct saml2__BaseIDAbstractType *, const char*);
SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_in_saml2__BaseIDAbstractType(struct soap*, const char*, struct saml2__BaseIDAbstractType *, const char*);

SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_new_saml2__BaseIDAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__BaseIDAbstractType
#define soap_write_saml2__BaseIDAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__BaseIDAbstractType
#define soap_PUT_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__BaseIDAbstractType
#define soap_PATCH_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__BaseIDAbstractType
#define soap_POST_send_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_get_saml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__BaseIDAbstractType
#define soap_read_saml2__BaseIDAbstractType(soap, data) ( ((data) ? (soap_default_saml2__BaseIDAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__BaseIDAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__BaseIDAbstractType
#define soap_GET_saml2__BaseIDAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__BaseIDAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__BaseIDAbstractType
#define soap_POST_recv_saml2__BaseIDAbstractType(soap, data) ( soap_read_saml2__BaseIDAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _saml1__Attribute is a typedef synonym of saml1__AttributeType */

#ifndef SOAP_TYPE__saml1__Attribute_DEFINED
#define SOAP_TYPE__saml1__Attribute_DEFINED

#define soap_default__saml1__Attribute soap_default_saml1__AttributeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *);

#define soap_serialize__saml1__Attribute soap_serialize_saml1__AttributeType


#define soap__saml1__Attribute2s soap_saml1__AttributeType2s


#define soap_out__saml1__Attribute soap_out_saml1__AttributeType


#define soap_s2_saml1__Attribute soap_s2saml1__AttributeType


#define soap_in__saml1__Attribute soap_in_saml1__AttributeType

#define soap_new__saml1__Attribute soap_new_saml1__AttributeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Attribute(struct soap*, const struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_write__saml1__Attribute
#define soap_write__saml1__Attribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Attribute
#define soap_PUT__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Attribute
#define soap_PATCH__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Attribute
#define soap_POST_send__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Attribute soap_get_saml1__AttributeType


#define soap_read__saml1__Attribute soap_read_saml1__AttributeType


#define soap_GET__saml1__Attribute soap_GET_saml1__AttributeType


#define soap_POST_recv__saml1__Attribute soap_POST_recv_saml1__AttributeType

#endif
/* _saml1__AttributeDesignator is a typedef synonym of saml1__AttributeDesignatorType */

#ifndef SOAP_TYPE__saml1__AttributeDesignator_DEFINED
#define SOAP_TYPE__saml1__AttributeDesignator_DEFINED

#define soap_default__saml1__AttributeDesignator soap_default_saml1__AttributeDesignatorType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *);

#define soap_serialize__saml1__AttributeDesignator soap_serialize_saml1__AttributeDesignatorType


#define soap__saml1__AttributeDesignator2s soap_saml1__AttributeDesignatorType2s


#define soap_out__saml1__AttributeDesignator soap_out_saml1__AttributeDesignatorType


#define soap_s2_saml1__AttributeDesignator soap_s2saml1__AttributeDesignatorType


#define soap_in__saml1__AttributeDesignator soap_in_saml1__AttributeDesignatorType

#define soap_new__saml1__AttributeDesignator soap_new_saml1__AttributeDesignatorType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AttributeDesignator(struct soap*, const struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_write__saml1__AttributeDesignator
#define soap_write__saml1__AttributeDesignator(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AttributeDesignator
#define soap_PUT__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AttributeDesignator
#define soap_PATCH__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AttributeDesignator
#define soap_POST_send__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AttributeDesignator soap_get_saml1__AttributeDesignatorType


#define soap_read__saml1__AttributeDesignator soap_read_saml1__AttributeDesignatorType


#define soap_GET__saml1__AttributeDesignator soap_GET_saml1__AttributeDesignatorType


#define soap_POST_recv__saml1__AttributeDesignator soap_POST_recv_saml1__AttributeDesignatorType

#endif
/* _saml1__AttributeStatement is a typedef synonym of saml1__AttributeStatementType */

#ifndef SOAP_TYPE__saml1__AttributeStatement_DEFINED
#define SOAP_TYPE__saml1__AttributeStatement_DEFINED

#define soap_default__saml1__AttributeStatement soap_default_saml1__AttributeStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *);

#define soap_serialize__saml1__AttributeStatement soap_serialize_saml1__AttributeStatementType


#define soap__saml1__AttributeStatement2s soap_saml1__AttributeStatementType2s


#define soap_out__saml1__AttributeStatement soap_out_saml1__AttributeStatementType


#define soap_s2_saml1__AttributeStatement soap_s2saml1__AttributeStatementType


#define soap_in__saml1__AttributeStatement soap_in_saml1__AttributeStatementType

#define soap_new__saml1__AttributeStatement soap_new_saml1__AttributeStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AttributeStatement(struct soap*, const struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AttributeStatement
#define soap_write__saml1__AttributeStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AttributeStatement
#define soap_PUT__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AttributeStatement
#define soap_PATCH__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AttributeStatement
#define soap_POST_send__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AttributeStatement soap_get_saml1__AttributeStatementType


#define soap_read__saml1__AttributeStatement soap_read_saml1__AttributeStatementType


#define soap_GET__saml1__AttributeStatement soap_GET_saml1__AttributeStatementType


#define soap_POST_recv__saml1__AttributeStatement soap_POST_recv_saml1__AttributeStatementType

#endif
/* _saml1__Evidence is a typedef synonym of saml1__EvidenceType */

#ifndef SOAP_TYPE__saml1__Evidence_DEFINED
#define SOAP_TYPE__saml1__Evidence_DEFINED

#define soap_default__saml1__Evidence soap_default_saml1__EvidenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *);

#define soap_serialize__saml1__Evidence soap_serialize_saml1__EvidenceType


#define soap__saml1__Evidence2s soap_saml1__EvidenceType2s


#define soap_out__saml1__Evidence soap_out_saml1__EvidenceType


#define soap_s2_saml1__Evidence soap_s2saml1__EvidenceType


#define soap_in__saml1__Evidence soap_in_saml1__EvidenceType

#define soap_new__saml1__Evidence soap_new_saml1__EvidenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Evidence(struct soap*, const struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_write__saml1__Evidence
#define soap_write__saml1__Evidence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Evidence
#define soap_PUT__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Evidence
#define soap_PATCH__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Evidence
#define soap_POST_send__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Evidence soap_get_saml1__EvidenceType


#define soap_read__saml1__Evidence soap_read_saml1__EvidenceType


#define soap_GET__saml1__Evidence soap_GET_saml1__EvidenceType


#define soap_POST_recv__saml1__Evidence soap_POST_recv_saml1__EvidenceType

#endif
/* _saml1__Action is a typedef synonym of saml1__ActionType */

#ifndef SOAP_TYPE__saml1__Action_DEFINED
#define SOAP_TYPE__saml1__Action_DEFINED

#define soap_default__saml1__Action soap_default_saml1__ActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ActionType(struct soap*, const struct saml1__ActionType *);

#define soap_serialize__saml1__Action soap_serialize_saml1__ActionType


#define soap__saml1__Action2s soap_saml1__ActionType2s


#define soap_out__saml1__Action soap_out_saml1__ActionType


#define soap_s2_saml1__Action soap_s2saml1__ActionType


#define soap_in__saml1__Action soap_in_saml1__ActionType

#define soap_new__saml1__Action soap_new_saml1__ActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Action(struct soap*, const struct saml1__ActionType *, const char*, const char*);

#ifndef soap_write__saml1__Action
#define soap_write__saml1__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Action
#define soap_PUT__saml1__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Action
#define soap_PATCH__saml1__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Action
#define soap_POST_send__saml1__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Action soap_get_saml1__ActionType


#define soap_read__saml1__Action soap_read_saml1__ActionType


#define soap_GET__saml1__Action soap_GET_saml1__ActionType


#define soap_POST_recv__saml1__Action soap_POST_recv_saml1__ActionType

#endif
/* _saml1__AuthorizationDecisionStatement is a typedef synonym of saml1__AuthorizationDecisionStatementType */

#ifndef SOAP_TYPE__saml1__AuthorizationDecisionStatement_DEFINED
#define SOAP_TYPE__saml1__AuthorizationDecisionStatement_DEFINED

#define soap_default__saml1__AuthorizationDecisionStatement soap_default_saml1__AuthorizationDecisionStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *);

#define soap_serialize__saml1__AuthorizationDecisionStatement soap_serialize_saml1__AuthorizationDecisionStatementType


#define soap__saml1__AuthorizationDecisionStatement2s soap_saml1__AuthorizationDecisionStatementType2s


#define soap_out__saml1__AuthorizationDecisionStatement soap_out_saml1__AuthorizationDecisionStatementType


#define soap_s2_saml1__AuthorizationDecisionStatement soap_s2saml1__AuthorizationDecisionStatementType


#define soap_in__saml1__AuthorizationDecisionStatement soap_in_saml1__AuthorizationDecisionStatementType

#define soap_new__saml1__AuthorizationDecisionStatement soap_new_saml1__AuthorizationDecisionStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthorizationDecisionStatement(struct soap*, const struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AuthorizationDecisionStatement
#define soap_write__saml1__AuthorizationDecisionStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthorizationDecisionStatement
#define soap_PUT__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthorizationDecisionStatement
#define soap_PATCH__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthorizationDecisionStatement
#define soap_POST_send__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthorizationDecisionStatement soap_get_saml1__AuthorizationDecisionStatementType


#define soap_read__saml1__AuthorizationDecisionStatement soap_read_saml1__AuthorizationDecisionStatementType


#define soap_GET__saml1__AuthorizationDecisionStatement soap_GET_saml1__AuthorizationDecisionStatementType


#define soap_POST_recv__saml1__AuthorizationDecisionStatement soap_POST_recv_saml1__AuthorizationDecisionStatementType

#endif
/* _saml1__AuthorityBinding is a typedef synonym of saml1__AuthorityBindingType */

#ifndef SOAP_TYPE__saml1__AuthorityBinding_DEFINED
#define SOAP_TYPE__saml1__AuthorityBinding_DEFINED

#define soap_default__saml1__AuthorityBinding soap_default_saml1__AuthorityBindingType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *);

#define soap_serialize__saml1__AuthorityBinding soap_serialize_saml1__AuthorityBindingType


#define soap__saml1__AuthorityBinding2s soap_saml1__AuthorityBindingType2s


#define soap_out__saml1__AuthorityBinding soap_out_saml1__AuthorityBindingType


#define soap_s2_saml1__AuthorityBinding soap_s2saml1__AuthorityBindingType


#define soap_in__saml1__AuthorityBinding soap_in_saml1__AuthorityBindingType

#define soap_new__saml1__AuthorityBinding soap_new_saml1__AuthorityBindingType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthorityBinding(struct soap*, const struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_write__saml1__AuthorityBinding
#define soap_write__saml1__AuthorityBinding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthorityBinding
#define soap_PUT__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthorityBinding
#define soap_PATCH__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthorityBinding
#define soap_POST_send__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthorityBinding soap_get_saml1__AuthorityBindingType


#define soap_read__saml1__AuthorityBinding soap_read_saml1__AuthorityBindingType


#define soap_GET__saml1__AuthorityBinding soap_GET_saml1__AuthorityBindingType


#define soap_POST_recv__saml1__AuthorityBinding soap_POST_recv_saml1__AuthorityBindingType

#endif
/* _saml1__SubjectLocality is a typedef synonym of saml1__SubjectLocalityType */

#ifndef SOAP_TYPE__saml1__SubjectLocality_DEFINED
#define SOAP_TYPE__saml1__SubjectLocality_DEFINED

#define soap_default__saml1__SubjectLocality soap_default_saml1__SubjectLocalityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *);

#define soap_serialize__saml1__SubjectLocality soap_serialize_saml1__SubjectLocalityType


#define soap__saml1__SubjectLocality2s soap_saml1__SubjectLocalityType2s


#define soap_out__saml1__SubjectLocality soap_out_saml1__SubjectLocalityType


#define soap_s2_saml1__SubjectLocality soap_s2saml1__SubjectLocalityType


#define soap_in__saml1__SubjectLocality soap_in_saml1__SubjectLocalityType

#define soap_new__saml1__SubjectLocality soap_new_saml1__SubjectLocalityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectLocality(struct soap*, const struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectLocality
#define soap_write__saml1__SubjectLocality(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectLocality
#define soap_PUT__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectLocality
#define soap_PATCH__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectLocality
#define soap_POST_send__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectLocality soap_get_saml1__SubjectLocalityType


#define soap_read__saml1__SubjectLocality soap_read_saml1__SubjectLocalityType


#define soap_GET__saml1__SubjectLocality soap_GET_saml1__SubjectLocalityType


#define soap_POST_recv__saml1__SubjectLocality soap_POST_recv_saml1__SubjectLocalityType

#endif
/* _saml1__AuthenticationStatement is a typedef synonym of saml1__AuthenticationStatementType */

#ifndef SOAP_TYPE__saml1__AuthenticationStatement_DEFINED
#define SOAP_TYPE__saml1__AuthenticationStatement_DEFINED

#define soap_default__saml1__AuthenticationStatement soap_default_saml1__AuthenticationStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *);

#define soap_serialize__saml1__AuthenticationStatement soap_serialize_saml1__AuthenticationStatementType


#define soap__saml1__AuthenticationStatement2s soap_saml1__AuthenticationStatementType2s


#define soap_out__saml1__AuthenticationStatement soap_out_saml1__AuthenticationStatementType


#define soap_s2_saml1__AuthenticationStatement soap_s2saml1__AuthenticationStatementType


#define soap_in__saml1__AuthenticationStatement soap_in_saml1__AuthenticationStatementType

#define soap_new__saml1__AuthenticationStatement soap_new_saml1__AuthenticationStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthenticationStatement(struct soap*, const struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AuthenticationStatement
#define soap_write__saml1__AuthenticationStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthenticationStatement
#define soap_PUT__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthenticationStatement
#define soap_PATCH__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthenticationStatement
#define soap_POST_send__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthenticationStatement soap_get_saml1__AuthenticationStatementType


#define soap_read__saml1__AuthenticationStatement soap_read_saml1__AuthenticationStatementType


#define soap_GET__saml1__AuthenticationStatement soap_GET_saml1__AuthenticationStatementType


#define soap_POST_recv__saml1__AuthenticationStatement soap_POST_recv_saml1__AuthenticationStatementType

#endif
/* _saml1__SubjectConfirmation is a typedef synonym of saml1__SubjectConfirmationType */

#ifndef SOAP_TYPE__saml1__SubjectConfirmation_DEFINED
#define SOAP_TYPE__saml1__SubjectConfirmation_DEFINED

#define soap_default__saml1__SubjectConfirmation soap_default_saml1__SubjectConfirmationType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *);

#define soap_serialize__saml1__SubjectConfirmation soap_serialize_saml1__SubjectConfirmationType


#define soap__saml1__SubjectConfirmation2s soap_saml1__SubjectConfirmationType2s


#define soap_out__saml1__SubjectConfirmation soap_out_saml1__SubjectConfirmationType


#define soap_s2_saml1__SubjectConfirmation soap_s2saml1__SubjectConfirmationType


#define soap_in__saml1__SubjectConfirmation soap_in_saml1__SubjectConfirmationType

#define soap_new__saml1__SubjectConfirmation soap_new_saml1__SubjectConfirmationType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectConfirmation(struct soap*, const struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectConfirmation
#define soap_write__saml1__SubjectConfirmation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectConfirmation
#define soap_PUT__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectConfirmation
#define soap_PATCH__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectConfirmation
#define soap_POST_send__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectConfirmation soap_get_saml1__SubjectConfirmationType


#define soap_read__saml1__SubjectConfirmation soap_read_saml1__SubjectConfirmationType


#define soap_GET__saml1__SubjectConfirmation soap_GET_saml1__SubjectConfirmationType


#define soap_POST_recv__saml1__SubjectConfirmation soap_POST_recv_saml1__SubjectConfirmationType

#endif
/* _saml1__NameIdentifier is a typedef synonym of saml1__NameIdentifierType */

#ifndef SOAP_TYPE__saml1__NameIdentifier_DEFINED
#define SOAP_TYPE__saml1__NameIdentifier_DEFINED

#define soap_default__saml1__NameIdentifier soap_default_saml1__NameIdentifierType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *);

#define soap_serialize__saml1__NameIdentifier soap_serialize_saml1__NameIdentifierType


#define soap__saml1__NameIdentifier2s soap_saml1__NameIdentifierType2s


#define soap_out__saml1__NameIdentifier soap_out_saml1__NameIdentifierType


#define soap_s2_saml1__NameIdentifier soap_s2saml1__NameIdentifierType


#define soap_in__saml1__NameIdentifier soap_in_saml1__NameIdentifierType

#define soap_new__saml1__NameIdentifier soap_new_saml1__NameIdentifierType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__NameIdentifier(struct soap*, const struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_write__saml1__NameIdentifier
#define soap_write__saml1__NameIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__NameIdentifier
#define soap_PUT__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__NameIdentifier
#define soap_PATCH__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__NameIdentifier
#define soap_POST_send__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__NameIdentifier soap_get_saml1__NameIdentifierType


#define soap_read__saml1__NameIdentifier soap_read_saml1__NameIdentifierType


#define soap_GET__saml1__NameIdentifier soap_GET_saml1__NameIdentifierType


#define soap_POST_recv__saml1__NameIdentifier soap_POST_recv_saml1__NameIdentifierType

#endif
/* _saml1__Subject is a typedef synonym of saml1__SubjectType */

#ifndef SOAP_TYPE__saml1__Subject_DEFINED
#define SOAP_TYPE__saml1__Subject_DEFINED

#define soap_default__saml1__Subject soap_default_saml1__SubjectType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *);

#define soap_serialize__saml1__Subject soap_serialize_saml1__SubjectType


#define soap__saml1__Subject2s soap_saml1__SubjectType2s


#define soap_out__saml1__Subject soap_out_saml1__SubjectType


#define soap_s2_saml1__Subject soap_s2saml1__SubjectType


#define soap_in__saml1__Subject soap_in_saml1__SubjectType

#define soap_new__saml1__Subject soap_new_saml1__SubjectType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Subject(struct soap*, const struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_write__saml1__Subject
#define soap_write__saml1__Subject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Subject
#define soap_PUT__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Subject
#define soap_PATCH__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Subject
#define soap_POST_send__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Subject soap_get_saml1__SubjectType


#define soap_read__saml1__Subject soap_read_saml1__SubjectType


#define soap_GET__saml1__Subject soap_GET_saml1__SubjectType


#define soap_POST_recv__saml1__Subject soap_POST_recv_saml1__SubjectType

#endif
/* _saml1__SubjectStatement is a typedef synonym of saml1__SubjectStatementAbstractType */

#ifndef SOAP_TYPE__saml1__SubjectStatement_DEFINED
#define SOAP_TYPE__saml1__SubjectStatement_DEFINED

#define soap_default__saml1__SubjectStatement soap_default_saml1__SubjectStatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *);

#define soap_serialize__saml1__SubjectStatement soap_serialize_saml1__SubjectStatementAbstractType


#define soap__saml1__SubjectStatement2s soap_saml1__SubjectStatementAbstractType2s


#define soap_out__saml1__SubjectStatement soap_out_saml1__SubjectStatementAbstractType


#define soap_s2_saml1__SubjectStatement soap_s2saml1__SubjectStatementAbstractType


#define soap_in__saml1__SubjectStatement soap_in_saml1__SubjectStatementAbstractType

#define soap_new__saml1__SubjectStatement soap_new_saml1__SubjectStatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectStatement(struct soap*, const struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectStatement
#define soap_write__saml1__SubjectStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectStatement
#define soap_PUT__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectStatement
#define soap_PATCH__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectStatement
#define soap_POST_send__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectStatement soap_get_saml1__SubjectStatementAbstractType


#define soap_read__saml1__SubjectStatement soap_read_saml1__SubjectStatementAbstractType


#define soap_GET__saml1__SubjectStatement soap_GET_saml1__SubjectStatementAbstractType


#define soap_POST_recv__saml1__SubjectStatement soap_POST_recv_saml1__SubjectStatementAbstractType

#endif
/* _saml1__Statement is a typedef synonym of saml1__StatementAbstractType */

#ifndef SOAP_TYPE__saml1__Statement_DEFINED
#define SOAP_TYPE__saml1__Statement_DEFINED

#define soap_default__saml1__Statement soap_default_saml1__StatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *);

#define soap_serialize__saml1__Statement soap_serialize_saml1__StatementAbstractType


#define soap__saml1__Statement2s soap_saml1__StatementAbstractType2s


#define soap_out__saml1__Statement soap_out_saml1__StatementAbstractType


#define soap_s2_saml1__Statement soap_s2saml1__StatementAbstractType


#define soap_in__saml1__Statement soap_in_saml1__StatementAbstractType

#define soap_new__saml1__Statement soap_new_saml1__StatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Statement(struct soap*, const struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__Statement
#define soap_write__saml1__Statement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Statement
#define soap_PUT__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Statement
#define soap_PATCH__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Statement
#define soap_POST_send__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Statement soap_get_saml1__StatementAbstractType


#define soap_read__saml1__Statement soap_read_saml1__StatementAbstractType


#define soap_GET__saml1__Statement soap_GET_saml1__StatementAbstractType


#define soap_POST_recv__saml1__Statement soap_POST_recv_saml1__StatementAbstractType

#endif
/* _saml1__Advice is a typedef synonym of saml1__AdviceType */

#ifndef SOAP_TYPE__saml1__Advice_DEFINED
#define SOAP_TYPE__saml1__Advice_DEFINED

#define soap_default__saml1__Advice soap_default_saml1__AdviceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *);

#define soap_serialize__saml1__Advice soap_serialize_saml1__AdviceType


#define soap__saml1__Advice2s soap_saml1__AdviceType2s


#define soap_out__saml1__Advice soap_out_saml1__AdviceType


#define soap_s2_saml1__Advice soap_s2saml1__AdviceType


#define soap_in__saml1__Advice soap_in_saml1__AdviceType

#define soap_new__saml1__Advice soap_new_saml1__AdviceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Advice(struct soap*, const struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_write__saml1__Advice
#define soap_write__saml1__Advice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Advice
#define soap_PUT__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Advice
#define soap_PATCH__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Advice
#define soap_POST_send__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Advice soap_get_saml1__AdviceType


#define soap_read__saml1__Advice soap_read_saml1__AdviceType


#define soap_GET__saml1__Advice soap_GET_saml1__AdviceType


#define soap_POST_recv__saml1__Advice soap_POST_recv_saml1__AdviceType

#endif
/* _saml1__DoNotCacheCondition is a typedef synonym of saml1__DoNotCacheConditionType */

#ifndef SOAP_TYPE__saml1__DoNotCacheCondition_DEFINED
#define SOAP_TYPE__saml1__DoNotCacheCondition_DEFINED

#define soap_default__saml1__DoNotCacheCondition soap_default_saml1__DoNotCacheConditionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *);

#define soap_serialize__saml1__DoNotCacheCondition soap_serialize_saml1__DoNotCacheConditionType


#define soap__saml1__DoNotCacheCondition2s soap_saml1__DoNotCacheConditionType2s


#define soap_out__saml1__DoNotCacheCondition soap_out_saml1__DoNotCacheConditionType


#define soap_s2_saml1__DoNotCacheCondition soap_s2saml1__DoNotCacheConditionType


#define soap_in__saml1__DoNotCacheCondition soap_in_saml1__DoNotCacheConditionType

#define soap_new__saml1__DoNotCacheCondition soap_new_saml1__DoNotCacheConditionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__DoNotCacheCondition(struct soap*, const struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_write__saml1__DoNotCacheCondition
#define soap_write__saml1__DoNotCacheCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__DoNotCacheCondition
#define soap_PUT__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__DoNotCacheCondition
#define soap_PATCH__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__DoNotCacheCondition
#define soap_POST_send__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__DoNotCacheCondition soap_get_saml1__DoNotCacheConditionType


#define soap_read__saml1__DoNotCacheCondition soap_read_saml1__DoNotCacheConditionType


#define soap_GET__saml1__DoNotCacheCondition soap_GET_saml1__DoNotCacheConditionType


#define soap_POST_recv__saml1__DoNotCacheCondition soap_POST_recv_saml1__DoNotCacheConditionType

#endif
/* _saml1__AudienceRestrictionCondition is a typedef synonym of saml1__AudienceRestrictionConditionType */

#ifndef SOAP_TYPE__saml1__AudienceRestrictionCondition_DEFINED
#define SOAP_TYPE__saml1__AudienceRestrictionCondition_DEFINED

#define soap_default__saml1__AudienceRestrictionCondition soap_default_saml1__AudienceRestrictionConditionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *);

#define soap_serialize__saml1__AudienceRestrictionCondition soap_serialize_saml1__AudienceRestrictionConditionType


#define soap__saml1__AudienceRestrictionCondition2s soap_saml1__AudienceRestrictionConditionType2s


#define soap_out__saml1__AudienceRestrictionCondition soap_out_saml1__AudienceRestrictionConditionType


#define soap_s2_saml1__AudienceRestrictionCondition soap_s2saml1__AudienceRestrictionConditionType


#define soap_in__saml1__AudienceRestrictionCondition soap_in_saml1__AudienceRestrictionConditionType

#define soap_new__saml1__AudienceRestrictionCondition soap_new_saml1__AudienceRestrictionConditionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AudienceRestrictionCondition(struct soap*, const struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_write__saml1__AudienceRestrictionCondition
#define soap_write__saml1__AudienceRestrictionCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AudienceRestrictionCondition
#define soap_PUT__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AudienceRestrictionCondition
#define soap_PATCH__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AudienceRestrictionCondition
#define soap_POST_send__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AudienceRestrictionCondition soap_get_saml1__AudienceRestrictionConditionType


#define soap_read__saml1__AudienceRestrictionCondition soap_read_saml1__AudienceRestrictionConditionType


#define soap_GET__saml1__AudienceRestrictionCondition soap_GET_saml1__AudienceRestrictionConditionType


#define soap_POST_recv__saml1__AudienceRestrictionCondition soap_POST_recv_saml1__AudienceRestrictionConditionType

#endif
/* _saml1__Condition is a typedef synonym of saml1__ConditionAbstractType */

#ifndef SOAP_TYPE__saml1__Condition_DEFINED
#define SOAP_TYPE__saml1__Condition_DEFINED

#define soap_default__saml1__Condition soap_default_saml1__ConditionAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *);

#define soap_serialize__saml1__Condition soap_serialize_saml1__ConditionAbstractType


#define soap__saml1__Condition2s soap_saml1__ConditionAbstractType2s


#define soap_out__saml1__Condition soap_out_saml1__ConditionAbstractType


#define soap_s2_saml1__Condition soap_s2saml1__ConditionAbstractType


#define soap_in__saml1__Condition soap_in_saml1__ConditionAbstractType

#define soap_new__saml1__Condition soap_new_saml1__ConditionAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Condition(struct soap*, const struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__Condition
#define soap_write__saml1__Condition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Condition
#define soap_PUT__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Condition
#define soap_PATCH__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Condition
#define soap_POST_send__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Condition soap_get_saml1__ConditionAbstractType


#define soap_read__saml1__Condition soap_read_saml1__ConditionAbstractType


#define soap_GET__saml1__Condition soap_GET_saml1__ConditionAbstractType


#define soap_POST_recv__saml1__Condition soap_POST_recv_saml1__ConditionAbstractType

#endif
/* _saml1__Conditions is a typedef synonym of saml1__ConditionsType */

#ifndef SOAP_TYPE__saml1__Conditions_DEFINED
#define SOAP_TYPE__saml1__Conditions_DEFINED

#define soap_default__saml1__Conditions soap_default_saml1__ConditionsType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *);

#define soap_serialize__saml1__Conditions soap_serialize_saml1__ConditionsType


#define soap__saml1__Conditions2s soap_saml1__ConditionsType2s


#define soap_out__saml1__Conditions soap_out_saml1__ConditionsType


#define soap_s2_saml1__Conditions soap_s2saml1__ConditionsType


#define soap_in__saml1__Conditions soap_in_saml1__ConditionsType

#define soap_new__saml1__Conditions soap_new_saml1__ConditionsType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Conditions(struct soap*, const struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_write__saml1__Conditions
#define soap_write__saml1__Conditions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Conditions
#define soap_PUT__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Conditions
#define soap_PATCH__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Conditions
#define soap_POST_send__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Conditions soap_get_saml1__ConditionsType


#define soap_read__saml1__Conditions soap_read_saml1__ConditionsType


#define soap_GET__saml1__Conditions soap_GET_saml1__ConditionsType


#define soap_POST_recv__saml1__Conditions soap_POST_recv_saml1__ConditionsType

#endif
/* _saml1__Assertion is a typedef synonym of saml1__AssertionType */

#ifndef SOAP_TYPE__saml1__Assertion_DEFINED
#define SOAP_TYPE__saml1__Assertion_DEFINED

#define soap_default__saml1__Assertion soap_default_saml1__AssertionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *);

#define soap_serialize__saml1__Assertion soap_serialize_saml1__AssertionType


#define soap__saml1__Assertion2s soap_saml1__AssertionType2s


#define soap_out__saml1__Assertion soap_out_saml1__AssertionType


#define soap_s2_saml1__Assertion soap_s2saml1__AssertionType


#define soap_in__saml1__Assertion soap_in_saml1__AssertionType

#define soap_new__saml1__Assertion soap_new_saml1__AssertionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Assertion(struct soap*, const struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_write__saml1__Assertion
#define soap_write__saml1__Assertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Assertion
#define soap_PUT__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Assertion
#define soap_PATCH__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Assertion
#define soap_POST_send__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Assertion soap_get_saml1__AssertionType


#define soap_read__saml1__Assertion soap_read_saml1__AssertionType


#define soap_GET__saml1__Assertion soap_GET_saml1__AssertionType


#define soap_POST_recv__saml1__Assertion soap_POST_recv_saml1__AssertionType

#endif

#ifndef SOAP_TYPE___saml1__union_EvidenceType_DEFINED
#define SOAP_TYPE___saml1__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_EvidenceType(struct soap*, const struct __saml1__union_EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_EvidenceType(struct soap*, const char*, int, const struct __saml1__union_EvidenceType *, const char*);
SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_in___saml1__union_EvidenceType(struct soap*, const char*, struct __saml1__union_EvidenceType *, const char*);

SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_new___saml1__union_EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_EvidenceType(struct soap*, const struct __saml1__union_EvidenceType *, const char*, const char*);

#ifndef soap_write___saml1__union_EvidenceType
#define soap_write___saml1__union_EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_EvidenceType
#define soap_PUT___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_EvidenceType
#define soap_PATCH___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_EvidenceType
#define soap_POST_send___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_get___saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *, const char*, const char*);

#ifndef soap_read___saml1__union_EvidenceType
#define soap_read___saml1__union_EvidenceType(soap, data) ( ((data) ? (soap_default___saml1__union_EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_EvidenceType
#define soap_GET___saml1__union_EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_EvidenceType
#define soap_POST_recv___saml1__union_EvidenceType(soap, data) ( soap_read___saml1__union_EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_AdviceType_DEFINED
#define SOAP_TYPE___saml1__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_AdviceType(struct soap*, const struct __saml1__union_AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_AdviceType(struct soap*, const char*, int, const struct __saml1__union_AdviceType *, const char*);
SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_in___saml1__union_AdviceType(struct soap*, const char*, struct __saml1__union_AdviceType *, const char*);

SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_new___saml1__union_AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_AdviceType(struct soap*, const struct __saml1__union_AdviceType *, const char*, const char*);

#ifndef soap_write___saml1__union_AdviceType
#define soap_write___saml1__union_AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_AdviceType
#define soap_PUT___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_AdviceType
#define soap_PATCH___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_AdviceType
#define soap_POST_send___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_get___saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *, const char*, const char*);

#ifndef soap_read___saml1__union_AdviceType
#define soap_read___saml1__union_AdviceType(soap, data) ( ((data) ? (soap_default___saml1__union_AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_AdviceType
#define soap_GET___saml1__union_AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_AdviceType
#define soap_POST_recv___saml1__union_AdviceType(soap, data) ( soap_read___saml1__union_AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_ConditionsType_DEFINED
#define SOAP_TYPE___saml1__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_ConditionsType(struct soap*, const struct __saml1__union_ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_ConditionsType(struct soap*, const char*, int, const struct __saml1__union_ConditionsType *, const char*);
SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_in___saml1__union_ConditionsType(struct soap*, const char*, struct __saml1__union_ConditionsType *, const char*);

SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_new___saml1__union_ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_ConditionsType(struct soap*, const struct __saml1__union_ConditionsType *, const char*, const char*);

#ifndef soap_write___saml1__union_ConditionsType
#define soap_write___saml1__union_ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_ConditionsType
#define soap_PUT___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_ConditionsType
#define soap_PATCH___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_ConditionsType
#define soap_POST_send___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_get___saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *, const char*, const char*);

#ifndef soap_read___saml1__union_ConditionsType
#define soap_read___saml1__union_ConditionsType(soap, data) ( ((data) ? (soap_default___saml1__union_ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_ConditionsType
#define soap_GET___saml1__union_ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_ConditionsType
#define soap_POST_recv___saml1__union_ConditionsType(soap, data) ( soap_read___saml1__union_ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_AssertionType_DEFINED
#define SOAP_TYPE___saml1__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_AssertionType(struct soap*, const struct __saml1__union_AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_AssertionType(struct soap*, const char*, int, const struct __saml1__union_AssertionType *, const char*);
SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_in___saml1__union_AssertionType(struct soap*, const char*, struct __saml1__union_AssertionType *, const char*);

SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_new___saml1__union_AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_AssertionType(struct soap*, const struct __saml1__union_AssertionType *, const char*, const char*);

#ifndef soap_write___saml1__union_AssertionType
#define soap_write___saml1__union_AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_AssertionType
#define soap_PUT___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_AssertionType
#define soap_PATCH___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_AssertionType
#define soap_POST_send___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_get___saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *, const char*, const char*);

#ifndef soap_read___saml1__union_AssertionType
#define soap_read___saml1__union_AssertionType(soap, data) ( ((data) ? (soap_default___saml1__union_AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_AssertionType
#define soap_GET___saml1__union_AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_AssertionType
#define soap_POST_recv___saml1__union_AssertionType(soap, data) ( soap_read___saml1__union_AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeType_DEFINED
#define SOAP_TYPE_saml1__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeType(struct soap*, struct saml1__AttributeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeType(struct soap*, const char*, int, const struct saml1__AttributeType *, const char*);
SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_in_saml1__AttributeType(struct soap*, const char*, struct saml1__AttributeType *, const char*);

SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_new_saml1__AttributeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeType
#define soap_write_saml1__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeType
#define soap_PUT_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeType
#define soap_PATCH_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeType
#define soap_POST_send_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_get_saml1__AttributeType(struct soap*, struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeType
#define soap_read_saml1__AttributeType(soap, data) ( ((data) ? (soap_default_saml1__AttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeType
#define soap_GET_saml1__AttributeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeType
#define soap_POST_recv_saml1__AttributeType(soap, data) ( soap_read_saml1__AttributeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeDesignatorType_DEFINED
#define SOAP_TYPE_saml1__AttributeDesignatorType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeDesignatorType(struct soap*, struct saml1__AttributeDesignatorType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeDesignatorType(struct soap*, const char*, int, const struct saml1__AttributeDesignatorType *, const char*);
SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_in_saml1__AttributeDesignatorType(struct soap*, const char*, struct saml1__AttributeDesignatorType *, const char*);

SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_new_saml1__AttributeDesignatorType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeDesignatorType
#define soap_write_saml1__AttributeDesignatorType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeDesignatorType
#define soap_PUT_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeDesignatorType
#define soap_PATCH_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeDesignatorType
#define soap_POST_send_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_get_saml1__AttributeDesignatorType(struct soap*, struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeDesignatorType
#define soap_read_saml1__AttributeDesignatorType(soap, data) ( ((data) ? (soap_default_saml1__AttributeDesignatorType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeDesignatorType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeDesignatorType
#define soap_GET_saml1__AttributeDesignatorType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeDesignatorType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeDesignatorType
#define soap_POST_recv_saml1__AttributeDesignatorType(soap, data) ( soap_read_saml1__AttributeDesignatorType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeStatementType_DEFINED
#define SOAP_TYPE_saml1__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeStatementType(struct soap*, const char*, int, const struct saml1__AttributeStatementType *, const char*);
SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_in_saml1__AttributeStatementType(struct soap*, const char*, struct saml1__AttributeStatementType *, const char*);

SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_new_saml1__AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeStatementType
#define soap_write_saml1__AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeStatementType
#define soap_PUT_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeStatementType
#define soap_PATCH_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeStatementType
#define soap_POST_send_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_get_saml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeStatementType
#define soap_read_saml1__AttributeStatementType(soap, data) ( ((data) ? (soap_default_saml1__AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeStatementType
#define soap_GET_saml1__AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeStatementType
#define soap_POST_recv_saml1__AttributeStatementType(soap, data) ( soap_read_saml1__AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__EvidenceType_DEFINED
#define SOAP_TYPE_saml1__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__EvidenceType(struct soap*, struct saml1__EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__EvidenceType(struct soap*, const char*, int, const struct saml1__EvidenceType *, const char*);
SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_in_saml1__EvidenceType(struct soap*, const char*, struct saml1__EvidenceType *, const char*);

SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_new_saml1__EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_write_saml1__EvidenceType
#define soap_write_saml1__EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__EvidenceType
#define soap_PUT_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__EvidenceType
#define soap_PATCH_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__EvidenceType
#define soap_POST_send_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_get_saml1__EvidenceType(struct soap*, struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_read_saml1__EvidenceType
#define soap_read_saml1__EvidenceType(soap, data) ( ((data) ? (soap_default_saml1__EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__EvidenceType
#define soap_GET_saml1__EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__EvidenceType
#define soap_POST_recv_saml1__EvidenceType(soap, data) ( soap_read_saml1__EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ActionType_DEFINED
#define SOAP_TYPE_saml1__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ActionType(struct soap*, struct saml1__ActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ActionType(struct soap*, const struct saml1__ActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ActionType(struct soap*, const char*, int, const struct saml1__ActionType *, const char*);
SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_in_saml1__ActionType(struct soap*, const char*, struct saml1__ActionType *, const char*);

SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_new_saml1__ActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ActionType(struct soap*, const struct saml1__ActionType *, const char*, const char*);

#ifndef soap_write_saml1__ActionType
#define soap_write_saml1__ActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ActionType
#define soap_PUT_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ActionType
#define soap_PATCH_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ActionType
#define soap_POST_send_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_get_saml1__ActionType(struct soap*, struct saml1__ActionType *, const char*, const char*);

#ifndef soap_read_saml1__ActionType
#define soap_read_saml1__ActionType(soap, data) ( ((data) ? (soap_default_saml1__ActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ActionType
#define soap_GET_saml1__ActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ActionType
#define soap_POST_recv_saml1__ActionType(soap, data) ( soap_read_saml1__ActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthorizationDecisionStatementType_DEFINED
#define SOAP_TYPE_saml1__AuthorizationDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthorizationDecisionStatementType(struct soap*, const char*, int, const struct saml1__AuthorizationDecisionStatementType *, const char*);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_in_saml1__AuthorizationDecisionStatementType(struct soap*, const char*, struct saml1__AuthorizationDecisionStatementType *, const char*);

SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_new_saml1__AuthorizationDecisionStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AuthorizationDecisionStatementType
#define soap_write_saml1__AuthorizationDecisionStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthorizationDecisionStatementType
#define soap_PUT_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthorizationDecisionStatementType
#define soap_PATCH_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthorizationDecisionStatementType
#define soap_POST_send_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_get_saml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AuthorizationDecisionStatementType
#define soap_read_saml1__AuthorizationDecisionStatementType(soap, data) ( ((data) ? (soap_default_saml1__AuthorizationDecisionStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthorizationDecisionStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthorizationDecisionStatementType
#define soap_GET_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthorizationDecisionStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthorizationDecisionStatementType
#define soap_POST_recv_saml1__AuthorizationDecisionStatementType(soap, data) ( soap_read_saml1__AuthorizationDecisionStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthorityBindingType_DEFINED
#define SOAP_TYPE_saml1__AuthorityBindingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthorityBindingType(struct soap*, const char*, int, const struct saml1__AuthorityBindingType *, const char*);
SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_in_saml1__AuthorityBindingType(struct soap*, const char*, struct saml1__AuthorityBindingType *, const char*);

SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_new_saml1__AuthorityBindingType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_write_saml1__AuthorityBindingType
#define soap_write_saml1__AuthorityBindingType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthorityBindingType
#define soap_PUT_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthorityBindingType
#define soap_PATCH_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthorityBindingType
#define soap_POST_send_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_get_saml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_read_saml1__AuthorityBindingType
#define soap_read_saml1__AuthorityBindingType(soap, data) ( ((data) ? (soap_default_saml1__AuthorityBindingType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthorityBindingType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthorityBindingType
#define soap_GET_saml1__AuthorityBindingType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthorityBindingType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthorityBindingType
#define soap_POST_recv_saml1__AuthorityBindingType(soap, data) ( soap_read_saml1__AuthorityBindingType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectLocalityType_DEFINED
#define SOAP_TYPE_saml1__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectLocalityType(struct soap*, const char*, int, const struct saml1__SubjectLocalityType *, const char*);
SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_in_saml1__SubjectLocalityType(struct soap*, const char*, struct saml1__SubjectLocalityType *, const char*);

SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_new_saml1__SubjectLocalityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectLocalityType
#define soap_write_saml1__SubjectLocalityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectLocalityType
#define soap_PUT_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectLocalityType
#define soap_PATCH_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectLocalityType
#define soap_POST_send_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_get_saml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectLocalityType
#define soap_read_saml1__SubjectLocalityType(soap, data) ( ((data) ? (soap_default_saml1__SubjectLocalityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectLocalityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectLocalityType
#define soap_GET_saml1__SubjectLocalityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectLocalityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectLocalityType
#define soap_POST_recv_saml1__SubjectLocalityType(soap, data) ( soap_read_saml1__SubjectLocalityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthenticationStatementType_DEFINED
#define SOAP_TYPE_saml1__AuthenticationStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthenticationStatementType(struct soap*, const char*, int, const struct saml1__AuthenticationStatementType *, const char*);
SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_in_saml1__AuthenticationStatementType(struct soap*, const char*, struct saml1__AuthenticationStatementType *, const char*);

SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_new_saml1__AuthenticationStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AuthenticationStatementType
#define soap_write_saml1__AuthenticationStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthenticationStatementType
#define soap_PUT_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthenticationStatementType
#define soap_PATCH_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthenticationStatementType
#define soap_POST_send_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_get_saml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AuthenticationStatementType
#define soap_read_saml1__AuthenticationStatementType(soap, data) ( ((data) ? (soap_default_saml1__AuthenticationStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthenticationStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthenticationStatementType
#define soap_GET_saml1__AuthenticationStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthenticationStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthenticationStatementType
#define soap_POST_recv_saml1__AuthenticationStatementType(soap, data) ( soap_read_saml1__AuthenticationStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_saml1__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectConfirmationType(struct soap*, const char*, int, const struct saml1__SubjectConfirmationType *, const char*);
SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_in_saml1__SubjectConfirmationType(struct soap*, const char*, struct saml1__SubjectConfirmationType *, const char*);

SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_new_saml1__SubjectConfirmationType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectConfirmationType
#define soap_write_saml1__SubjectConfirmationType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectConfirmationType
#define soap_PUT_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectConfirmationType
#define soap_PATCH_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectConfirmationType
#define soap_POST_send_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_get_saml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectConfirmationType
#define soap_read_saml1__SubjectConfirmationType(soap, data) ( ((data) ? (soap_default_saml1__SubjectConfirmationType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectConfirmationType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectConfirmationType
#define soap_GET_saml1__SubjectConfirmationType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectConfirmationType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectConfirmationType
#define soap_POST_recv_saml1__SubjectConfirmationType(soap, data) ( soap_read_saml1__SubjectConfirmationType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__NameIdentifierType_DEFINED
#define SOAP_TYPE_saml1__NameIdentifierType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__NameIdentifierType(struct soap*, const char*, int, const struct saml1__NameIdentifierType *, const char*);
SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_in_saml1__NameIdentifierType(struct soap*, const char*, struct saml1__NameIdentifierType *, const char*);

SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_new_saml1__NameIdentifierType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_write_saml1__NameIdentifierType
#define soap_write_saml1__NameIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__NameIdentifierType
#define soap_PUT_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__NameIdentifierType
#define soap_PATCH_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__NameIdentifierType
#define soap_POST_send_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_get_saml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_read_saml1__NameIdentifierType
#define soap_read_saml1__NameIdentifierType(soap, data) ( ((data) ? (soap_default_saml1__NameIdentifierType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__NameIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__NameIdentifierType
#define soap_GET_saml1__NameIdentifierType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__NameIdentifierType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__NameIdentifierType
#define soap_POST_recv_saml1__NameIdentifierType(soap, data) ( soap_read_saml1__NameIdentifierType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectType_DEFINED
#define SOAP_TYPE_saml1__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectType(struct soap*, struct saml1__SubjectType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectType(struct soap*, const char*, int, const struct saml1__SubjectType *, const char*);
SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_in_saml1__SubjectType(struct soap*, const char*, struct saml1__SubjectType *, const char*);

SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_new_saml1__SubjectType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectType
#define soap_write_saml1__SubjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectType
#define soap_PUT_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectType
#define soap_PATCH_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectType
#define soap_POST_send_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_get_saml1__SubjectType(struct soap*, struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectType
#define soap_read_saml1__SubjectType(soap, data) ( ((data) ? (soap_default_saml1__SubjectType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectType
#define soap_GET_saml1__SubjectType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectType
#define soap_POST_recv_saml1__SubjectType(soap, data) ( soap_read_saml1__SubjectType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectStatementAbstractType_DEFINED
#define SOAP_TYPE_saml1__SubjectStatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectStatementAbstractType(struct soap*, const char*, int, const struct saml1__SubjectStatementAbstractType *, const char*);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_in_saml1__SubjectStatementAbstractType(struct soap*, const char*, struct saml1__SubjectStatementAbstractType *, const char*);

SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_new_saml1__SubjectStatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectStatementAbstractType
#define soap_write_saml1__SubjectStatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectStatementAbstractType
#define soap_PUT_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectStatementAbstractType
#define soap_PATCH_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectStatementAbstractType
#define soap_POST_send_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_get_saml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectStatementAbstractType
#define soap_read_saml1__SubjectStatementAbstractType(soap, data) ( ((data) ? (soap_default_saml1__SubjectStatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectStatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectStatementAbstractType
#define soap_GET_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectStatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectStatementAbstractType
#define soap_POST_recv_saml1__SubjectStatementAbstractType(soap, data) ( soap_read_saml1__SubjectStatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__StatementAbstractType_DEFINED
#define SOAP_TYPE_saml1__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__StatementAbstractType(struct soap*, const char*, int, const struct saml1__StatementAbstractType *, const char*);
SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_in_saml1__StatementAbstractType(struct soap*, const char*, struct saml1__StatementAbstractType *, const char*);

SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_new_saml1__StatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__StatementAbstractType
#define soap_write_saml1__StatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__StatementAbstractType
#define soap_PUT_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__StatementAbstractType
#define soap_PATCH_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__StatementAbstractType
#define soap_POST_send_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_get_saml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__StatementAbstractType
#define soap_read_saml1__StatementAbstractType(soap, data) ( ((data) ? (soap_default_saml1__StatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__StatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__StatementAbstractType
#define soap_GET_saml1__StatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__StatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__StatementAbstractType
#define soap_POST_recv_saml1__StatementAbstractType(soap, data) ( soap_read_saml1__StatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AdviceType_DEFINED
#define SOAP_TYPE_saml1__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AdviceType(struct soap*, struct saml1__AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AdviceType(struct soap*, const char*, int, const struct saml1__AdviceType *, const char*);
SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_in_saml1__AdviceType(struct soap*, const char*, struct saml1__AdviceType *, const char*);

SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_new_saml1__AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_write_saml1__AdviceType
#define soap_write_saml1__AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AdviceType
#define soap_PUT_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AdviceType
#define soap_PATCH_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AdviceType
#define soap_POST_send_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_get_saml1__AdviceType(struct soap*, struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_read_saml1__AdviceType
#define soap_read_saml1__AdviceType(soap, data) ( ((data) ? (soap_default_saml1__AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AdviceType
#define soap_GET_saml1__AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AdviceType
#define soap_POST_recv_saml1__AdviceType(soap, data) ( soap_read_saml1__AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__DoNotCacheConditionType_DEFINED
#define SOAP_TYPE_saml1__DoNotCacheConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__DoNotCacheConditionType(struct soap*, const char*, int, const struct saml1__DoNotCacheConditionType *, const char*);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_in_saml1__DoNotCacheConditionType(struct soap*, const char*, struct saml1__DoNotCacheConditionType *, const char*);

SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_new_saml1__DoNotCacheConditionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_write_saml1__DoNotCacheConditionType
#define soap_write_saml1__DoNotCacheConditionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__DoNotCacheConditionType
#define soap_PUT_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__DoNotCacheConditionType
#define soap_PATCH_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__DoNotCacheConditionType
#define soap_POST_send_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_get_saml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_read_saml1__DoNotCacheConditionType
#define soap_read_saml1__DoNotCacheConditionType(soap, data) ( ((data) ? (soap_default_saml1__DoNotCacheConditionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__DoNotCacheConditionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__DoNotCacheConditionType
#define soap_GET_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__DoNotCacheConditionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__DoNotCacheConditionType
#define soap_POST_recv_saml1__DoNotCacheConditionType(soap, data) ( soap_read_saml1__DoNotCacheConditionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AudienceRestrictionConditionType_DEFINED
#define SOAP_TYPE_saml1__AudienceRestrictionConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AudienceRestrictionConditionType(struct soap*, const char*, int, const struct saml1__AudienceRestrictionConditionType *, const char*);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_in_saml1__AudienceRestrictionConditionType(struct soap*, const char*, struct saml1__AudienceRestrictionConditionType *, const char*);

SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_new_saml1__AudienceRestrictionConditionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_write_saml1__AudienceRestrictionConditionType
#define soap_write_saml1__AudienceRestrictionConditionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AudienceRestrictionConditionType
#define soap_PUT_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AudienceRestrictionConditionType
#define soap_PATCH_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AudienceRestrictionConditionType
#define soap_POST_send_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_get_saml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_read_saml1__AudienceRestrictionConditionType
#define soap_read_saml1__AudienceRestrictionConditionType(soap, data) ( ((data) ? (soap_default_saml1__AudienceRestrictionConditionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AudienceRestrictionConditionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AudienceRestrictionConditionType
#define soap_GET_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AudienceRestrictionConditionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AudienceRestrictionConditionType
#define soap_POST_recv_saml1__AudienceRestrictionConditionType(soap, data) ( soap_read_saml1__AudienceRestrictionConditionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ConditionAbstractType_DEFINED
#define SOAP_TYPE_saml1__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ConditionAbstractType(struct soap*, const char*, int, const struct saml1__ConditionAbstractType *, const char*);
SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_in_saml1__ConditionAbstractType(struct soap*, const char*, struct saml1__ConditionAbstractType *, const char*);

SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_new_saml1__ConditionAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__ConditionAbstractType
#define soap_write_saml1__ConditionAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ConditionAbstractType
#define soap_PUT_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ConditionAbstractType
#define soap_PATCH_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ConditionAbstractType
#define soap_POST_send_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_get_saml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__ConditionAbstractType
#define soap_read_saml1__ConditionAbstractType(soap, data) ( ((data) ? (soap_default_saml1__ConditionAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ConditionAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ConditionAbstractType
#define soap_GET_saml1__ConditionAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ConditionAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ConditionAbstractType
#define soap_POST_recv_saml1__ConditionAbstractType(soap, data) ( soap_read_saml1__ConditionAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ConditionsType_DEFINED
#define SOAP_TYPE_saml1__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ConditionsType(struct soap*, struct saml1__ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ConditionsType(struct soap*, const char*, int, const struct saml1__ConditionsType *, const char*);
SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_in_saml1__ConditionsType(struct soap*, const char*, struct saml1__ConditionsType *, const char*);

SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_new_saml1__ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_write_saml1__ConditionsType
#define soap_write_saml1__ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ConditionsType
#define soap_PUT_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ConditionsType
#define soap_PATCH_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ConditionsType
#define soap_POST_send_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_get_saml1__ConditionsType(struct soap*, struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_read_saml1__ConditionsType
#define soap_read_saml1__ConditionsType(soap, data) ( ((data) ? (soap_default_saml1__ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ConditionsType
#define soap_GET_saml1__ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ConditionsType
#define soap_POST_recv_saml1__ConditionsType(soap, data) ( soap_read_saml1__ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AssertionType_DEFINED
#define SOAP_TYPE_saml1__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AssertionType(struct soap*, struct saml1__AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AssertionType(struct soap*, const char*, int, const struct saml1__AssertionType *, const char*);
SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_in_saml1__AssertionType(struct soap*, const char*, struct saml1__AssertionType *, const char*);

SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_new_saml1__AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_write_saml1__AssertionType
#define soap_write_saml1__AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AssertionType
#define soap_PUT_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AssertionType
#define soap_PATCH_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AssertionType
#define soap_POST_send_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_get_saml1__AssertionType(struct soap*, struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_read_saml1__AssertionType
#define soap_read_saml1__AssertionType(soap, data) ( ((data) ? (soap_default_saml1__AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AssertionType
#define soap_GET_saml1__AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AssertionType
#define soap_POST_recv_saml1__AssertionType(soap, data) ( soap_read_saml1__AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsc__DerivedKeyTokenType_sequence_DEFINED
#define SOAP_TYPE___wsc__DerivedKeyTokenType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, int, const struct __wsc__DerivedKeyTokenType_sequence *, const char*);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_in___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence *, const char*);

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_new___wsc__DerivedKeyTokenType_sequence(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_write___wsc__DerivedKeyTokenType_sequence
#define soap_write___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsc__DerivedKeyTokenType_sequence
#define soap_PUT___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsc__DerivedKeyTokenType_sequence
#define soap_PATCH___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsc__DerivedKeyTokenType_sequence
#define soap_POST_send___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_get___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_read___wsc__DerivedKeyTokenType_sequence
#define soap_read___wsc__DerivedKeyTokenType_sequence(soap, data) ( ((data) ? (soap_default___wsc__DerivedKeyTokenType_sequence(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsc__DerivedKeyTokenType_sequence(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsc__DerivedKeyTokenType_sequence
#define soap_GET___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsc__DerivedKeyTokenType_sequence(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsc__DerivedKeyTokenType_sequence
#define soap_POST_recv___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_read___wsc__DerivedKeyTokenType_sequence(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__PropertiesType_DEFINED
#define SOAP_TYPE_wsc__PropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__PropertiesType(struct soap*, const char*, int, const struct wsc__PropertiesType *, const char*);
SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_in_wsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType *, const char*);

SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_new_wsc__PropertiesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_write_wsc__PropertiesType
#define soap_write_wsc__PropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__PropertiesType
#define soap_PUT_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__PropertiesType
#define soap_PATCH_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__PropertiesType
#define soap_POST_send_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_get_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_read_wsc__PropertiesType
#define soap_read_wsc__PropertiesType(soap, data) ( ((data) ? (soap_default_wsc__PropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__PropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__PropertiesType
#define soap_GET_wsc__PropertiesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__PropertiesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__PropertiesType
#define soap_POST_recv_wsc__PropertiesType(soap, data) ( soap_read_wsc__PropertiesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__DerivedKeyTokenType_DEFINED
#define SOAP_TYPE_wsc__DerivedKeyTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__DerivedKeyTokenType(struct soap*, const char*, int, const struct wsc__DerivedKeyTokenType *, const char*);
SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_in_wsc__DerivedKeyTokenType(struct soap*, const char*, struct wsc__DerivedKeyTokenType *, const char*);

SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_new_wsc__DerivedKeyTokenType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_write_wsc__DerivedKeyTokenType
#define soap_write_wsc__DerivedKeyTokenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__DerivedKeyTokenType
#define soap_PUT_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__DerivedKeyTokenType
#define soap_PATCH_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__DerivedKeyTokenType
#define soap_POST_send_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_get_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_read_wsc__DerivedKeyTokenType
#define soap_read_wsc__DerivedKeyTokenType(soap, data) ( ((data) ? (soap_default_wsc__DerivedKeyTokenType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__DerivedKeyTokenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__DerivedKeyTokenType
#define soap_GET_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__DerivedKeyTokenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__DerivedKeyTokenType
#define soap_POST_recv_wsc__DerivedKeyTokenType(soap, data) ( soap_read_wsc__DerivedKeyTokenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__SecurityContextTokenType_DEFINED
#define SOAP_TYPE_wsc__SecurityContextTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__SecurityContextTokenType(struct soap*, const char*, int, const struct wsc__SecurityContextTokenType *, const char*);
SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_in_wsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType *, const char*);

SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_new_wsc__SecurityContextTokenType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_write_wsc__SecurityContextTokenType
#define soap_write_wsc__SecurityContextTokenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__SecurityContextTokenType
#define soap_PUT_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__SecurityContextTokenType
#define soap_PATCH_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__SecurityContextTokenType
#define soap_POST_send_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_get_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_read_wsc__SecurityContextTokenType
#define soap_read_wsc__SecurityContextTokenType(soap, data) ( ((data) ? (soap_default_wsc__SecurityContextTokenType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__SecurityContextTokenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__SecurityContextTokenType
#define soap_GET_wsc__SecurityContextTokenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__SecurityContextTokenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__SecurityContextTokenType
#define soap_POST_recv_wsc__SecurityContextTokenType(soap, data) ( soap_read_wsc__SecurityContextTokenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___xenc__union_ReferenceList_DEFINED
#define SOAP_TYPE___xenc__union_ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___xenc__union_ReferenceList(struct soap*, const char*, int, const struct __xenc__union_ReferenceList *, const char*);
SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_in___xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList *, const char*);

SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_new___xenc__union_ReferenceList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_write___xenc__union_ReferenceList
#define soap_write___xenc__union_ReferenceList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___xenc__union_ReferenceList
#define soap_PUT___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___xenc__union_ReferenceList
#define soap_PATCH___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___xenc__union_ReferenceList
#define soap_POST_send___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_get___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_read___xenc__union_ReferenceList
#define soap_read___xenc__union_ReferenceList(soap, data) ( ((data) ? (soap_default___xenc__union_ReferenceList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___xenc__union_ReferenceList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___xenc__union_ReferenceList
#define soap_GET___xenc__union_ReferenceList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___xenc__union_ReferenceList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___xenc__union_ReferenceList
#define soap_POST_recv___xenc__union_ReferenceList(soap, data) ( soap_read___xenc__union_ReferenceList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__xenc__ReferenceList_DEFINED
#define SOAP_TYPE__xenc__ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xenc__ReferenceList(struct soap*, const char*, int, const struct _xenc__ReferenceList *, const char*);
SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_in__xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList *, const char*);

SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_new__xenc__ReferenceList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_write__xenc__ReferenceList
#define soap_write__xenc__ReferenceList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__xenc__ReferenceList
#define soap_PUT__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__xenc__ReferenceList
#define soap_PATCH__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__xenc__ReferenceList
#define soap_POST_send__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_get__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_read__xenc__ReferenceList
#define soap_read__xenc__ReferenceList(soap, data) ( ((data) ? (soap_default__xenc__ReferenceList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__xenc__ReferenceList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__xenc__ReferenceList
#define soap_GET__xenc__ReferenceList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__xenc__ReferenceList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__xenc__ReferenceList
#define soap_POST_recv__xenc__ReferenceList(soap, data) ( soap_read__xenc__ReferenceList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType_DEFINED
#define SOAP_TYPE_xenc__EncryptionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertyType(struct soap*, const char*, int, const struct xenc__EncryptionPropertyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_new_xenc__EncryptionPropertyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertyType
#define soap_write_xenc__EncryptionPropertyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionPropertyType
#define soap_PUT_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionPropertyType
#define soap_PATCH_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionPropertyType
#define soap_POST_send_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertyType
#define soap_read_xenc__EncryptionPropertyType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionPropertyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionPropertyType
#define soap_GET_xenc__EncryptionPropertyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionPropertyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionPropertyType
#define soap_POST_recv_xenc__EncryptionPropertyType(soap, data) ( soap_read_xenc__EncryptionPropertyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType_DEFINED
#define SOAP_TYPE_xenc__EncryptionPropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertiesType(struct soap*, const char*, int, const struct xenc__EncryptionPropertiesType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_new_xenc__EncryptionPropertiesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertiesType
#define soap_write_xenc__EncryptionPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionPropertiesType
#define soap_PUT_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionPropertiesType
#define soap_PATCH_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionPropertiesType
#define soap_POST_send_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertiesType
#define soap_read_xenc__EncryptionPropertiesType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionPropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionPropertiesType
#define soap_GET_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionPropertiesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionPropertiesType
#define soap_POST_recv_xenc__EncryptionPropertiesType(soap, data) ( soap_read_xenc__EncryptionPropertiesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__ReferenceType_DEFINED
#define SOAP_TYPE_xenc__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__ReferenceType(struct soap*, const char*, int, const struct xenc__ReferenceType *, const char*);
SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_in_xenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType *, const char*);

SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_new_xenc__ReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__ReferenceType
#define soap_write_xenc__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__ReferenceType
#define soap_PUT_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__ReferenceType
#define soap_PATCH_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__ReferenceType
#define soap_POST_send_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_get_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__ReferenceType
#define soap_read_xenc__ReferenceType(soap, data) ( ((data) ? (soap_default_xenc__ReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__ReferenceType
#define soap_GET_xenc__ReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__ReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__ReferenceType
#define soap_POST_recv_xenc__ReferenceType(soap, data) ( soap_read_xenc__ReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__AgreementMethodType_DEFINED
#define SOAP_TYPE_xenc__AgreementMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__AgreementMethodType(struct soap*, const char*, int, const struct xenc__AgreementMethodType *, const char*);
SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_in_xenc__AgreementMethodType(struct soap*, const char*, struct xenc__AgreementMethodType *, const char*);

SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_new_xenc__AgreementMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_write_xenc__AgreementMethodType
#define soap_write_xenc__AgreementMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__AgreementMethodType
#define soap_PUT_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__AgreementMethodType
#define soap_PATCH_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__AgreementMethodType
#define soap_POST_send_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_get_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_read_xenc__AgreementMethodType
#define soap_read_xenc__AgreementMethodType(soap, data) ( ((data) ? (soap_default_xenc__AgreementMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__AgreementMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__AgreementMethodType
#define soap_GET_xenc__AgreementMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__AgreementMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__AgreementMethodType
#define soap_POST_recv_xenc__AgreementMethodType(soap, data) ( soap_read_xenc__AgreementMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_xenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedKeyType(struct soap*, const char*, int, const struct xenc__EncryptedKeyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_in_xenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_new_xenc__EncryptedKeyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedKeyType
#define soap_write_xenc__EncryptedKeyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedKeyType
#define soap_PUT_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedKeyType
#define soap_PATCH_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedKeyType
#define soap_POST_send_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_get_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedKeyType
#define soap_read_xenc__EncryptedKeyType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedKeyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedKeyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedKeyType
#define soap_GET_xenc__EncryptedKeyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedKeyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedKeyType
#define soap_POST_recv_xenc__EncryptedKeyType(soap, data) ( soap_read_xenc__EncryptedKeyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedDataType_DEFINED
#define SOAP_TYPE_xenc__EncryptedDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedDataType(struct soap*, const char*, int, const struct xenc__EncryptedDataType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_in_xenc__EncryptedDataType(struct soap*, const char*, struct xenc__EncryptedDataType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_new_xenc__EncryptedDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedDataType
#define soap_write_xenc__EncryptedDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedDataType
#define soap_PUT_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedDataType
#define soap_PATCH_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedDataType
#define soap_POST_send_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_get_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedDataType
#define soap_read_xenc__EncryptedDataType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedDataType
#define soap_GET_xenc__EncryptedDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedDataType
#define soap_POST_recv_xenc__EncryptedDataType(soap, data) ( soap_read_xenc__EncryptedDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__TransformsType_DEFINED
#define SOAP_TYPE_xenc__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__TransformsType(struct soap*, struct xenc__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__TransformsType(struct soap*, const char*, int, const struct xenc__TransformsType *, const char*);
SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_in_xenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType *, const char*);

SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_new_xenc__TransformsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_write_xenc__TransformsType
#define soap_write_xenc__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__TransformsType
#define soap_PUT_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__TransformsType
#define soap_PATCH_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__TransformsType
#define soap_POST_send_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_get_xenc__TransformsType(struct soap*, struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_read_xenc__TransformsType
#define soap_read_xenc__TransformsType(soap, data) ( ((data) ? (soap_default_xenc__TransformsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__TransformsType
#define soap_GET_xenc__TransformsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__TransformsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__TransformsType
#define soap_POST_recv_xenc__TransformsType(soap, data) ( soap_read_xenc__TransformsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__CipherReferenceType_DEFINED
#define SOAP_TYPE_xenc__CipherReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherReferenceType(struct soap*, const char*, int, const struct xenc__CipherReferenceType *, const char*);
SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_in_xenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType *, const char*);

SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_new_xenc__CipherReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__CipherReferenceType
#define soap_write_xenc__CipherReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__CipherReferenceType
#define soap_PUT_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__CipherReferenceType
#define soap_PATCH_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__CipherReferenceType
#define soap_POST_send_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_get_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__CipherReferenceType
#define soap_read_xenc__CipherReferenceType(soap, data) ( ((data) ? (soap_default_xenc__CipherReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__CipherReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__CipherReferenceType
#define soap_GET_xenc__CipherReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__CipherReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__CipherReferenceType
#define soap_POST_recv_xenc__CipherReferenceType(soap, data) ( soap_read_xenc__CipherReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__CipherDataType_DEFINED
#define SOAP_TYPE_xenc__CipherDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherDataType(struct soap*, const char*, int, const struct xenc__CipherDataType *, const char*);
SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_in_xenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType *, const char*);

SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_new_xenc__CipherDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_write_xenc__CipherDataType
#define soap_write_xenc__CipherDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__CipherDataType
#define soap_PUT_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__CipherDataType
#define soap_PATCH_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__CipherDataType
#define soap_POST_send_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_get_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_read_xenc__CipherDataType
#define soap_read_xenc__CipherDataType(soap, data) ( ((data) ? (soap_default_xenc__CipherDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__CipherDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__CipherDataType
#define soap_GET_xenc__CipherDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__CipherDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__CipherDataType
#define soap_POST_recv_xenc__CipherDataType(soap, data) ( soap_read_xenc__CipherDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionMethodType_DEFINED
#define SOAP_TYPE_xenc__EncryptionMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionMethodType(struct soap*, const char*, int, const struct xenc__EncryptionMethodType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_in_xenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_new_xenc__EncryptionMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionMethodType
#define soap_write_xenc__EncryptionMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionMethodType
#define soap_PUT_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionMethodType
#define soap_PATCH_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionMethodType
#define soap_POST_send_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_get_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionMethodType
#define soap_read_xenc__EncryptionMethodType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionMethodType
#define soap_GET_xenc__EncryptionMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionMethodType
#define soap_POST_recv_xenc__EncryptionMethodType(soap, data) ( soap_read_xenc__EncryptionMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedType_DEFINED
#define SOAP_TYPE_xenc__EncryptedType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedType(struct soap*, const char*, int, const struct xenc__EncryptedType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_in_xenc__EncryptedType(struct soap*, const char*, struct xenc__EncryptedType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_new_xenc__EncryptedType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedType
#define soap_write_xenc__EncryptedType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedType
#define soap_PUT_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedType
#define soap_PATCH_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedType
#define soap_POST_send_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_get_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedType
#define soap_read_xenc__EncryptedType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedType
#define soap_GET_xenc__EncryptedType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedType
#define soap_POST_recv_xenc__EncryptedType(soap, data) ( soap_read_xenc__EncryptedType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType_DEFINED
#define SOAP_TYPE_ds__RSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RSAKeyValueType(struct soap*, const char*, int, const struct ds__RSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_in_ds__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType *, const char*);

SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_new_ds__RSAKeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__RSAKeyValueType
#define soap_write_ds__RSAKeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__RSAKeyValueType
#define soap_PUT_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__RSAKeyValueType
#define soap_PATCH_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__RSAKeyValueType
#define soap_POST_send_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_get_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__RSAKeyValueType
#define soap_read_ds__RSAKeyValueType(soap, data) ( ((data) ? (soap_default_ds__RSAKeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__RSAKeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__RSAKeyValueType
#define soap_GET_ds__RSAKeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__RSAKeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__RSAKeyValueType
#define soap_POST_recv_ds__RSAKeyValueType(soap, data) ( soap_read_ds__RSAKeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType_DEFINED
#define SOAP_TYPE_ds__DSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DSAKeyValueType(struct soap*, const char*, int, const struct ds__DSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_in_ds__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType *, const char*);

SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_new_ds__DSAKeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__DSAKeyValueType
#define soap_write_ds__DSAKeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__DSAKeyValueType
#define soap_PUT_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__DSAKeyValueType
#define soap_PATCH_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__DSAKeyValueType
#define soap_POST_send_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_get_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__DSAKeyValueType
#define soap_read_ds__DSAKeyValueType(soap, data) ( ((data) ? (soap_default_ds__DSAKeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__DSAKeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__DSAKeyValueType
#define soap_GET_ds__DSAKeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__DSAKeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__DSAKeyValueType
#define soap_POST_recv_ds__DSAKeyValueType(soap, data) ( soap_read_ds__DSAKeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType_DEFINED
#define SOAP_TYPE_ds__X509IssuerSerialType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509IssuerSerialType(struct soap*, const char*, int, const struct ds__X509IssuerSerialType *, const char*);
SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_in_ds__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType *, const char*);

SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_new_ds__X509IssuerSerialType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_write_ds__X509IssuerSerialType
#define soap_write_ds__X509IssuerSerialType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__X509IssuerSerialType
#define soap_PUT_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__X509IssuerSerialType
#define soap_PATCH_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__X509IssuerSerialType
#define soap_POST_send_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_get_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_read_ds__X509IssuerSerialType
#define soap_read_ds__X509IssuerSerialType(soap, data) ( ((data) ? (soap_default_ds__X509IssuerSerialType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__X509IssuerSerialType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__X509IssuerSerialType
#define soap_GET_ds__X509IssuerSerialType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__X509IssuerSerialType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__X509IssuerSerialType
#define soap_POST_recv_ds__X509IssuerSerialType(soap, data) ( soap_read_ds__X509IssuerSerialType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__KeyInfo is a typedef synonym of ds__KeyInfoType */

#ifndef SOAP_TYPE__ds__KeyInfo_DEFINED
#define SOAP_TYPE__ds__KeyInfo_DEFINED

#define soap_default__ds__KeyInfo soap_default_ds__KeyInfoType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *);

#define soap_serialize__ds__KeyInfo soap_serialize_ds__KeyInfoType


#define soap__ds__KeyInfo2s soap_ds__KeyInfoType2s


#define soap_out__ds__KeyInfo soap_out_ds__KeyInfoType


#define soap_s2_ds__KeyInfo soap_s2ds__KeyInfoType


#define soap_in__ds__KeyInfo soap_in_ds__KeyInfoType

#define soap_new__ds__KeyInfo soap_new_ds__KeyInfoType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__KeyInfo(struct soap*, const struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_write__ds__KeyInfo
#define soap_write__ds__KeyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__KeyInfo
#define soap_PUT__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__KeyInfo
#define soap_PATCH__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__KeyInfo
#define soap_POST_send__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__KeyInfo soap_get_ds__KeyInfoType


#define soap_read__ds__KeyInfo soap_read_ds__KeyInfoType


#define soap_GET__ds__KeyInfo soap_GET_ds__KeyInfoType


#define soap_POST_recv__ds__KeyInfo soap_POST_recv_ds__KeyInfoType

#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType_DEFINED
#define SOAP_TYPE_ds__RetrievalMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RetrievalMethodType(struct soap*, const char*, int, const struct ds__RetrievalMethodType *, const char*);
SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_in_ds__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType *, const char*);

SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_new_ds__RetrievalMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_write_ds__RetrievalMethodType
#define soap_write_ds__RetrievalMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__RetrievalMethodType
#define soap_PUT_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__RetrievalMethodType
#define soap_PATCH_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__RetrievalMethodType
#define soap_POST_send_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_get_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_read_ds__RetrievalMethodType
#define soap_read_ds__RetrievalMethodType(soap, data) ( ((data) ? (soap_default_ds__RetrievalMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__RetrievalMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__RetrievalMethodType
#define soap_GET_ds__RetrievalMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__RetrievalMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__RetrievalMethodType
#define soap_POST_recv_ds__RetrievalMethodType(soap, data) ( soap_read_ds__RetrievalMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__KeyValueType_DEFINED
#define SOAP_TYPE_ds__KeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyValueType(struct soap*, struct ds__KeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyValueType(struct soap*, const char*, int, const struct ds__KeyValueType *, const char*);
SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_in_ds__KeyValueType(struct soap*, const char*, struct ds__KeyValueType *, const char*);

SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_new_ds__KeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_write_ds__KeyValueType
#define soap_write_ds__KeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__KeyValueType
#define soap_PUT_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__KeyValueType
#define soap_PATCH_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__KeyValueType
#define soap_POST_send_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_get_ds__KeyValueType(struct soap*, struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_read_ds__KeyValueType
#define soap_read_ds__KeyValueType(soap, data) ( ((data) ? (soap_default_ds__KeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__KeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__KeyValueType
#define soap_GET_ds__KeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__KeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__KeyValueType
#define soap_POST_recv_ds__KeyValueType(soap, data) ( soap_read_ds__KeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__DigestMethodType_DEFINED
#define SOAP_TYPE_ds__DigestMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DigestMethodType(struct soap*, const char*, int, const struct ds__DigestMethodType *, const char*);
SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_in_ds__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType *, const char*);

SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_new_ds__DigestMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_write_ds__DigestMethodType
#define soap_write_ds__DigestMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__DigestMethodType
#define soap_PUT_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__DigestMethodType
#define soap_PATCH_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__DigestMethodType
#define soap_POST_send_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_get_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_read_ds__DigestMethodType
#define soap_read_ds__DigestMethodType(soap, data) ( ((data) ? (soap_default_ds__DigestMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__DigestMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__DigestMethodType
#define soap_GET_ds__DigestMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__DigestMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__DigestMethodType
#define soap_POST_recv_ds__DigestMethodType(soap, data) ( soap_read_ds__DigestMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__Transform is a typedef synonym of ds__TransformType */

#ifndef SOAP_TYPE__ds__Transform_DEFINED
#define SOAP_TYPE__ds__Transform_DEFINED

#define soap_default__ds__Transform soap_default_ds__TransformType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformType(struct soap*, const struct ds__TransformType *);

#define soap_serialize__ds__Transform soap_serialize_ds__TransformType


#define soap__ds__Transform2s soap_ds__TransformType2s


#define soap_out__ds__Transform soap_out_ds__TransformType


#define soap_s2_ds__Transform soap_s2ds__TransformType


#define soap_in__ds__Transform soap_in_ds__TransformType

#define soap_new__ds__Transform soap_new_ds__TransformType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__Transform(struct soap*, const struct ds__TransformType *, const char*, const char*);

#ifndef soap_write__ds__Transform
#define soap_write__ds__Transform(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__Transform
#define soap_PUT__ds__Transform(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__Transform
#define soap_PATCH__ds__Transform(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__Transform
#define soap_POST_send__ds__Transform(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__Transform soap_get_ds__TransformType


#define soap_read__ds__Transform soap_read_ds__TransformType


#define soap_GET__ds__Transform soap_GET_ds__TransformType


#define soap_POST_recv__ds__Transform soap_POST_recv_ds__TransformType

#endif

#ifndef SOAP_TYPE_ds__TransformType_DEFINED
#define SOAP_TYPE_ds__TransformType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformType(struct soap*, struct ds__TransformType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformType(struct soap*, const struct ds__TransformType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformType(struct soap*, const char*, int, const struct ds__TransformType *, const char*);
SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_in_ds__TransformType(struct soap*, const char*, struct ds__TransformType *, const char*);

SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_new_ds__TransformType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformType(struct soap*, const struct ds__TransformType *, const char*, const char*);

#ifndef soap_write_ds__TransformType
#define soap_write_ds__TransformType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__TransformType
#define soap_PUT_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__TransformType
#define soap_PATCH_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__TransformType
#define soap_POST_send_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_get_ds__TransformType(struct soap*, struct ds__TransformType *, const char*, const char*);

#ifndef soap_read_ds__TransformType
#define soap_read_ds__TransformType(soap, data) ( ((data) ? (soap_default_ds__TransformType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__TransformType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__TransformType
#define soap_GET_ds__TransformType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__TransformType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__TransformType
#define soap_POST_recv_ds__TransformType(soap, data) ( soap_read_ds__TransformType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces_DEFINED
#define SOAP_TYPE__c14n__InclusiveNamespaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__c14n__InclusiveNamespaces(struct soap*, const char*, int, const struct _c14n__InclusiveNamespaces *, const char*);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_in__c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces *, const char*);

SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_new__c14n__InclusiveNamespaces(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_write__c14n__InclusiveNamespaces
#define soap_write__c14n__InclusiveNamespaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__c14n__InclusiveNamespaces
#define soap_PUT__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__c14n__InclusiveNamespaces
#define soap_PATCH__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__c14n__InclusiveNamespaces
#define soap_POST_send__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_get__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_read__c14n__InclusiveNamespaces
#define soap_read__c14n__InclusiveNamespaces(soap, data) ( ((data) ? (soap_default__c14n__InclusiveNamespaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__c14n__InclusiveNamespaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__c14n__InclusiveNamespaces
#define soap_GET__c14n__InclusiveNamespaces(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__c14n__InclusiveNamespaces(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__c14n__InclusiveNamespaces
#define soap_POST_recv__c14n__InclusiveNamespaces(soap, data) ( soap_read__c14n__InclusiveNamespaces(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__TransformsType_DEFINED
#define SOAP_TYPE_ds__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformsType(struct soap*, struct ds__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformsType(struct soap*, const struct ds__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformsType(struct soap*, const char*, int, const struct ds__TransformsType *, const char*);
SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_in_ds__TransformsType(struct soap*, const char*, struct ds__TransformsType *, const char*);

SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_new_ds__TransformsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformsType(struct soap*, const struct ds__TransformsType *, const char*, const char*);

#ifndef soap_write_ds__TransformsType
#define soap_write_ds__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__TransformsType
#define soap_PUT_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__TransformsType
#define soap_PATCH_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__TransformsType
#define soap_POST_send_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_get_ds__TransformsType(struct soap*, struct ds__TransformsType *, const char*, const char*);

#ifndef soap_read_ds__TransformsType
#define soap_read_ds__TransformsType(soap, data) ( ((data) ? (soap_default_ds__TransformsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__TransformsType
#define soap_GET_ds__TransformsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__TransformsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__TransformsType
#define soap_POST_recv_ds__TransformsType(soap, data) ( soap_read_ds__TransformsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__ReferenceType_DEFINED
#define SOAP_TYPE_ds__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__ReferenceType(struct soap*, struct ds__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__ReferenceType(struct soap*, const char*, int, const struct ds__ReferenceType *, const char*);
SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_in_ds__ReferenceType(struct soap*, const char*, struct ds__ReferenceType *, const char*);

SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_new_ds__ReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_write_ds__ReferenceType
#define soap_write_ds__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__ReferenceType
#define soap_PUT_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__ReferenceType
#define soap_PATCH_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__ReferenceType
#define soap_POST_send_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_get_ds__ReferenceType(struct soap*, struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_read_ds__ReferenceType
#define soap_read_ds__ReferenceType(soap, data) ( ((data) ? (soap_default_ds__ReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__ReferenceType
#define soap_GET_ds__ReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__ReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__ReferenceType
#define soap_POST_recv_ds__ReferenceType(soap, data) ( soap_read_ds__ReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType_DEFINED
#define SOAP_TYPE_ds__SignatureMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureMethodType(struct soap*, const char*, int, const struct ds__SignatureMethodType *, const char*);
SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_in_ds__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType *, const char*);

SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_new_ds__SignatureMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_write_ds__SignatureMethodType
#define soap_write_ds__SignatureMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignatureMethodType
#define soap_PUT_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignatureMethodType
#define soap_PATCH_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignatureMethodType
#define soap_POST_send_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_get_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_read_ds__SignatureMethodType
#define soap_read_ds__SignatureMethodType(soap, data) ( ((data) ? (soap_default_ds__SignatureMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignatureMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignatureMethodType
#define soap_GET_ds__SignatureMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignatureMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignatureMethodType
#define soap_POST_recv_ds__SignatureMethodType(soap, data) ( soap_read_ds__SignatureMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType_DEFINED
#define SOAP_TYPE_ds__CanonicalizationMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__CanonicalizationMethodType(struct soap*, const char*, int, const struct ds__CanonicalizationMethodType *, const char*);
SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_in_ds__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType *, const char*);

SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_new_ds__CanonicalizationMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_write_ds__CanonicalizationMethodType
#define soap_write_ds__CanonicalizationMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__CanonicalizationMethodType
#define soap_PUT_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__CanonicalizationMethodType
#define soap_PATCH_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__CanonicalizationMethodType
#define soap_POST_send_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_get_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_read_ds__CanonicalizationMethodType
#define soap_read_ds__CanonicalizationMethodType(soap, data) ( ((data) ? (soap_default_ds__CanonicalizationMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__CanonicalizationMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__CanonicalizationMethodType
#define soap_GET_ds__CanonicalizationMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__CanonicalizationMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__CanonicalizationMethodType
#define soap_POST_recv_ds__CanonicalizationMethodType(soap, data) ( soap_read_ds__CanonicalizationMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__Signature is a typedef synonym of ds__SignatureType */

#ifndef SOAP_TYPE__ds__Signature_DEFINED
#define SOAP_TYPE__ds__Signature_DEFINED

#define soap_default__ds__Signature soap_default_ds__SignatureType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureType(struct soap*, const struct ds__SignatureType *);

#define soap_serialize__ds__Signature soap_serialize_ds__SignatureType


#define soap__ds__Signature2s soap_ds__SignatureType2s


#define soap_out__ds__Signature soap_out_ds__SignatureType


#define soap_s2_ds__Signature soap_s2ds__SignatureType


#define soap_in__ds__Signature soap_in_ds__SignatureType

#define soap_new__ds__Signature soap_new_ds__SignatureType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__Signature(struct soap*, const struct ds__SignatureType *, const char*, const char*);

#ifndef soap_write__ds__Signature
#define soap_write__ds__Signature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__Signature
#define soap_PUT__ds__Signature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__Signature
#define soap_PATCH__ds__Signature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__Signature
#define soap_POST_send__ds__Signature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__Signature soap_get_ds__SignatureType


#define soap_read__ds__Signature soap_read_ds__SignatureType


#define soap_GET__ds__Signature soap_GET_ds__SignatureType


#define soap_POST_recv__ds__Signature soap_POST_recv_ds__SignatureType

#endif

#ifndef SOAP_TYPE_ds__KeyInfoType_DEFINED
#define SOAP_TYPE_ds__KeyInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyInfoType(struct soap*, const char*, int, const struct ds__KeyInfoType *, const char*);
SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_in_ds__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType *, const char*);

SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_new_ds__KeyInfoType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_write_ds__KeyInfoType
#define soap_write_ds__KeyInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__KeyInfoType
#define soap_PUT_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__KeyInfoType
#define soap_PATCH_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__KeyInfoType
#define soap_POST_send_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_get_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_read_ds__KeyInfoType
#define soap_read_ds__KeyInfoType(soap, data) ( ((data) ? (soap_default_ds__KeyInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__KeyInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__KeyInfoType
#define soap_GET_ds__KeyInfoType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__KeyInfoType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__KeyInfoType
#define soap_POST_recv_ds__KeyInfoType(soap, data) ( soap_read_ds__KeyInfoType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__SignedInfoType_DEFINED
#define SOAP_TYPE_ds__SignedInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignedInfoType(struct soap*, const char*, int, const struct ds__SignedInfoType *, const char*);
SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_in_ds__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType *, const char*);

SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_new_ds__SignedInfoType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_write_ds__SignedInfoType
#define soap_write_ds__SignedInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignedInfoType
#define soap_PUT_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignedInfoType
#define soap_PATCH_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignedInfoType
#define soap_POST_send_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_get_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_read_ds__SignedInfoType
#define soap_read_ds__SignedInfoType(soap, data) ( ((data) ? (soap_default_ds__SignedInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignedInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignedInfoType
#define soap_GET_ds__SignedInfoType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignedInfoType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignedInfoType
#define soap_POST_recv_ds__SignedInfoType(soap, data) ( soap_read_ds__SignedInfoType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__SignatureType_DEFINED
#define SOAP_TYPE_ds__SignatureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureType(struct soap*, struct ds__SignatureType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureType(struct soap*, const struct ds__SignatureType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureType(struct soap*, const char*, int, const struct ds__SignatureType *, const char*);
SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_in_ds__SignatureType(struct soap*, const char*, struct ds__SignatureType *, const char*);

SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_new_ds__SignatureType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureType(struct soap*, const struct ds__SignatureType *, const char*, const char*);

#ifndef soap_write_ds__SignatureType
#define soap_write_ds__SignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignatureType
#define soap_PUT_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignatureType
#define soap_PATCH_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignatureType
#define soap_POST_send_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_get_ds__SignatureType(struct soap*, struct ds__SignatureType *, const char*, const char*);

#ifndef soap_read_ds__SignatureType
#define soap_read_ds__SignatureType(soap, data) ( ((data) ? (soap_default_ds__SignatureType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignatureType
#define soap_GET_ds__SignatureType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignatureType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignatureType
#define soap_POST_recv_ds__SignatureType(soap, data) ( soap_read_ds__SignatureType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__X509DataType_DEFINED
#define SOAP_TYPE_ds__X509DataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509DataType(struct soap*, struct ds__X509DataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509DataType(struct soap*, const struct ds__X509DataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509DataType(struct soap*, const char*, int, const struct ds__X509DataType *, const char*);
SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_in_ds__X509DataType(struct soap*, const char*, struct ds__X509DataType *, const char*);

SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_new_ds__X509DataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509DataType(struct soap*, const struct ds__X509DataType *, const char*, const char*);

#ifndef soap_write_ds__X509DataType
#define soap_write_ds__X509DataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__X509DataType
#define soap_PUT_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__X509DataType
#define soap_PATCH_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__X509DataType
#define soap_POST_send_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_get_ds__X509DataType(struct soap*, struct ds__X509DataType *, const char*, const char*);

#ifndef soap_read_ds__X509DataType
#define soap_read_ds__X509DataType(soap, data) ( ((data) ? (soap_default_ds__X509DataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__X509DataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__X509DataType
#define soap_GET_ds__X509DataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__X509DataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__X509DataType
#define soap_POST_recv_ds__X509DataType(soap, data) ( soap_read_ds__X509DataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference_DEFINED
#define SOAP_TYPE__wsse__SecurityTokenReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__SecurityTokenReference(struct soap*, const char*, int, const struct _wsse__SecurityTokenReference *, const char*);
SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_in__wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference *, const char*);

SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_new__wsse__SecurityTokenReference(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_write__wsse__SecurityTokenReference
#define soap_write__wsse__SecurityTokenReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__SecurityTokenReference
#define soap_PUT__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__SecurityTokenReference
#define soap_PATCH__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__SecurityTokenReference
#define soap_POST_send__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_get__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_read__wsse__SecurityTokenReference
#define soap_read__wsse__SecurityTokenReference(soap, data) ( ((data) ? (soap_default__wsse__SecurityTokenReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__SecurityTokenReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__SecurityTokenReference
#define soap_GET__wsse__SecurityTokenReference(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__SecurityTokenReference(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__SecurityTokenReference
#define soap_POST_recv__wsse__SecurityTokenReference(soap, data) ( soap_read__wsse__SecurityTokenReference(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier_DEFINED
#define SOAP_TYPE__wsse__KeyIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__KeyIdentifier(struct soap*, const char*, int, const struct _wsse__KeyIdentifier *, const char*);
SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_in__wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier *, const char*);

SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_new__wsse__KeyIdentifier(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_write__wsse__KeyIdentifier
#define soap_write__wsse__KeyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__KeyIdentifier
#define soap_PUT__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__KeyIdentifier
#define soap_PATCH__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__KeyIdentifier
#define soap_POST_send__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_get__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_read__wsse__KeyIdentifier
#define soap_read__wsse__KeyIdentifier(soap, data) ( ((data) ? (soap_default__wsse__KeyIdentifier(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__KeyIdentifier(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__KeyIdentifier
#define soap_GET__wsse__KeyIdentifier(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__KeyIdentifier(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__KeyIdentifier
#define soap_POST_recv__wsse__KeyIdentifier(soap, data) ( soap_read__wsse__KeyIdentifier(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Embedded_DEFINED
#define SOAP_TYPE__wsse__Embedded_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Embedded(struct soap*, struct _wsse__Embedded *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Embedded(struct soap*, const struct _wsse__Embedded *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Embedded(struct soap*, const char*, int, const struct _wsse__Embedded *, const char*);
SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_in__wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded *, const char*);

SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_new__wsse__Embedded(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Embedded(struct soap*, const struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_write__wsse__Embedded
#define soap_write__wsse__Embedded(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Embedded
#define soap_PUT__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Embedded
#define soap_PATCH__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Embedded
#define soap_POST_send__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_get__wsse__Embedded(struct soap*, struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_read__wsse__Embedded
#define soap_read__wsse__Embedded(soap, data) ( ((data) ? (soap_default__wsse__Embedded(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Embedded(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Embedded
#define soap_GET__wsse__Embedded(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Embedded(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Embedded
#define soap_POST_recv__wsse__Embedded(soap, data) ( soap_read__wsse__Embedded(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Reference_DEFINED
#define SOAP_TYPE__wsse__Reference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Reference(struct soap*, struct _wsse__Reference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Reference(struct soap*, const struct _wsse__Reference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Reference(struct soap*, const char*, int, const struct _wsse__Reference *, const char*);
SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_in__wsse__Reference(struct soap*, const char*, struct _wsse__Reference *, const char*);

SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_new__wsse__Reference(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Reference(struct soap*, const struct _wsse__Reference *, const char*, const char*);

#ifndef soap_write__wsse__Reference
#define soap_write__wsse__Reference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Reference
#define soap_PUT__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Reference
#define soap_PATCH__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Reference
#define soap_POST_send__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_get__wsse__Reference(struct soap*, struct _wsse__Reference *, const char*, const char*);

#ifndef soap_read__wsse__Reference
#define soap_read__wsse__Reference(soap, data) ( ((data) ? (soap_default__wsse__Reference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Reference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Reference
#define soap_GET__wsse__Reference(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Reference(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Reference
#define soap_POST_recv__wsse__Reference(soap, data) ( soap_read__wsse__Reference(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken_DEFINED
#define SOAP_TYPE__wsse__BinarySecurityToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__BinarySecurityToken(struct soap*, const char*, int, const struct _wsse__BinarySecurityToken *, const char*);
SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_in__wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken *, const char*);

SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_new__wsse__BinarySecurityToken(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_write__wsse__BinarySecurityToken
#define soap_write__wsse__BinarySecurityToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__BinarySecurityToken
#define soap_PUT__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__BinarySecurityToken
#define soap_PATCH__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__BinarySecurityToken
#define soap_POST_send__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_get__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_read__wsse__BinarySecurityToken
#define soap_read__wsse__BinarySecurityToken(soap, data) ( ((data) ? (soap_default__wsse__BinarySecurityToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__BinarySecurityToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__BinarySecurityToken
#define soap_GET__wsse__BinarySecurityToken(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__BinarySecurityToken(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__BinarySecurityToken
#define soap_POST_recv__wsse__BinarySecurityToken(soap, data) ( soap_read__wsse__BinarySecurityToken(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Password_DEFINED
#define SOAP_TYPE__wsse__Password_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Password(struct soap*, struct _wsse__Password *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Password(struct soap*, const struct _wsse__Password *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Password(struct soap*, const char*, int, const struct _wsse__Password *, const char*);
SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_in__wsse__Password(struct soap*, const char*, struct _wsse__Password *, const char*);

SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_new__wsse__Password(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Password(struct soap*, const struct _wsse__Password *, const char*, const char*);

#ifndef soap_write__wsse__Password
#define soap_write__wsse__Password(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Password
#define soap_PUT__wsse__Password(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Password
#define soap_PATCH__wsse__Password(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Password
#define soap_POST_send__wsse__Password(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_get__wsse__Password(struct soap*, struct _wsse__Password *, const char*, const char*);

#ifndef soap_read__wsse__Password
#define soap_read__wsse__Password(soap, data) ( ((data) ? (soap_default__wsse__Password(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Password(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Password
#define soap_GET__wsse__Password(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Password(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Password
#define soap_POST_recv__wsse__Password(soap, data) ( soap_read__wsse__Password(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__UsernameToken_DEFINED
#define SOAP_TYPE__wsse__UsernameToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__UsernameToken(struct soap*, const char*, int, const struct _wsse__UsernameToken *, const char*);
SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_in__wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken *, const char*);

SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_new__wsse__UsernameToken(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_write__wsse__UsernameToken
#define soap_write__wsse__UsernameToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__UsernameToken
#define soap_PUT__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__UsernameToken
#define soap_PATCH__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__UsernameToken
#define soap_POST_send__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_get__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_read__wsse__UsernameToken
#define soap_read__wsse__UsernameToken(soap, data) ( ((data) ? (soap_default__wsse__UsernameToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__UsernameToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__UsernameToken
#define soap_GET__wsse__UsernameToken(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__UsernameToken(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__UsernameToken
#define soap_POST_recv__wsse__UsernameToken(soap, data) ( soap_read__wsse__UsernameToken(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsse__EncodedString_DEFINED
#define SOAP_TYPE_wsse__EncodedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsse__EncodedString(struct soap*, struct wsse__EncodedString *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsse__EncodedString(struct soap*, const struct wsse__EncodedString *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsse__EncodedString(struct soap*, const char*, int, const struct wsse__EncodedString *, const char*);
SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_in_wsse__EncodedString(struct soap*, const char*, struct wsse__EncodedString *, const char*);

SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_new_wsse__EncodedString(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsse__EncodedString(struct soap*, const struct wsse__EncodedString *, const char*, const char*);

#ifndef soap_write_wsse__EncodedString
#define soap_write_wsse__EncodedString(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsse__EncodedString
#define soap_PUT_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsse__EncodedString
#define soap_PATCH_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsse__EncodedString
#define soap_POST_send_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_get_wsse__EncodedString(struct soap*, struct wsse__EncodedString *, const char*, const char*);

#ifndef soap_read_wsse__EncodedString
#define soap_read_wsse__EncodedString(soap, data) ( ((data) ? (soap_default_wsse__EncodedString(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsse__EncodedString(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsse__EncodedString
#define soap_GET_wsse__EncodedString(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsse__EncodedString(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsse__EncodedString
#define soap_POST_recv_wsse__EncodedString(soap, data) ( soap_read_wsse__EncodedString(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsu__Timestamp_DEFINED
#define SOAP_TYPE__wsu__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsu__Timestamp(struct soap*, const char*, int, const struct _wsu__Timestamp *, const char*);
SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_in__wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp *, const char*);

SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_new__wsu__Timestamp(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_write__wsu__Timestamp
#define soap_write__wsu__Timestamp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsu__Timestamp
#define soap_PUT__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsu__Timestamp
#define soap_PATCH__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsu__Timestamp
#define soap_POST_send__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_get__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_read__wsu__Timestamp
#define soap_read__wsu__Timestamp(soap, data) ( ((data) ? (soap_default__wsu__Timestamp(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsu__Timestamp(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsu__Timestamp
#define soap_GET__wsu__Timestamp(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsu__Timestamp(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsu__Timestamp
#define soap_POST_recv__wsu__Timestamp(soap, data) ( soap_read__wsu__Timestamp(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsc__union_DerivedKeyTokenType_DEFINED
#define SOAP_TYPE__wsc__union_DerivedKeyTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 union _wsc__union_DerivedKeyTokenType * SOAP_FMAC4 soap_in__wsc__union_DerivedKeyTokenType(struct soap*, int*, union _wsc__union_DerivedKeyTokenType *);
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTodouble_DEFINED
#define SOAP_TYPE_PointerTodouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Security_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Security_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Security(struct soap*, const char *, int, struct _wsse__Security *const*, const char *);
SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_in_PointerTo_wsse__Security(struct soap*, const char*, struct _wsse__Security **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_get_PointerTo_wsse__Security(struct soap*, struct _wsse__Security **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignatureType_DEFINED
#define SOAP_TYPE_PointerTods__SignatureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureType(struct soap*, const char *, int, struct ds__SignatureType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_in_PointerTods__SignatureType(struct soap*, const char*, struct ds__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_get_PointerTods__SignatureType(struct soap*, struct ds__SignatureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsc__SecurityContextTokenType_DEFINED
#define SOAP_TYPE_PointerTowsc__SecurityContextTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__SecurityContextTokenType(struct soap*, const char *, int, struct wsc__SecurityContextTokenType *const*, const char *);
SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_in_PointerTowsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*, const char*, const char*);
SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_get_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__BinarySecurityToken_DEFINED
#define SOAP_TYPE_PointerTo_wsse__BinarySecurityToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__BinarySecurityToken(struct soap*, const char *, int, struct _wsse__BinarySecurityToken *const*, const char *);
SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__UsernameToken_DEFINED
#define SOAP_TYPE_PointerTo_wsse__UsernameToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__UsernameToken(struct soap*, const char *, int, struct _wsse__UsernameToken *const*, const char *);
SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsu__Timestamp_DEFINED
#define SOAP_TYPE_PointerTo_wsu__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsu__Timestamp(struct soap*, const char *, int, struct _wsu__Timestamp *const*, const char *);
SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_in_PointerTo_wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*, const char*, const char*);
SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_get_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp **, const char*, const char*);
#endif
/* _saml2__AttributeValue is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml2__AttributeValue_DEFINED
#define SOAP_TYPE__saml2__AttributeValue_DEFINED
#endif
/* _saml2__AuthenticatingAuthority is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthenticatingAuthority_DEFINED
#define SOAP_TYPE__saml2__AuthenticatingAuthority_DEFINED

#define soap_default__saml2__AuthenticatingAuthority soap_default_string


#define soap_serialize__saml2__AuthenticatingAuthority soap_serialize_string


#define soap__saml2__AuthenticatingAuthority2s(soap, a) (a)

#define soap_out__saml2__AuthenticatingAuthority soap_out_string


#define soap_s2_saml2__AuthenticatingAuthority(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthenticatingAuthority soap_in_string

#define soap_new__saml2__AuthenticatingAuthority soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthenticatingAuthority(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthenticatingAuthority
#define soap_write__saml2__AuthenticatingAuthority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthenticatingAuthority
#define soap_PUT__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthenticatingAuthority
#define soap_PATCH__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthenticatingAuthority
#define soap_POST_send__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthenticatingAuthority soap_get_string


#define soap_read__saml2__AuthenticatingAuthority soap_read_string


#define soap_GET__saml2__AuthenticatingAuthority soap_GET_string


#define soap_POST_recv__saml2__AuthenticatingAuthority soap_POST_recv_string

#endif
/* _saml2__AuthnContextDecl is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml2__AuthnContextDecl_DEFINED
#define SOAP_TYPE__saml2__AuthnContextDecl_DEFINED
#endif
/* _saml2__AuthnContextDeclRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthnContextDeclRef_DEFINED
#define SOAP_TYPE__saml2__AuthnContextDeclRef_DEFINED

#define soap_default__saml2__AuthnContextDeclRef soap_default_string


#define soap_serialize__saml2__AuthnContextDeclRef soap_serialize_string


#define soap__saml2__AuthnContextDeclRef2s(soap, a) (a)

#define soap_out__saml2__AuthnContextDeclRef soap_out_string


#define soap_s2_saml2__AuthnContextDeclRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthnContextDeclRef soap_in_string

#define soap_new__saml2__AuthnContextDeclRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContextDeclRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthnContextDeclRef
#define soap_write__saml2__AuthnContextDeclRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContextDeclRef
#define soap_PUT__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContextDeclRef
#define soap_PATCH__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContextDeclRef
#define soap_POST_send__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContextDeclRef soap_get_string


#define soap_read__saml2__AuthnContextDeclRef soap_read_string


#define soap_GET__saml2__AuthnContextDeclRef soap_GET_string


#define soap_POST_recv__saml2__AuthnContextDeclRef soap_POST_recv_string

#endif
/* _saml2__AuthnContextClassRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthnContextClassRef_DEFINED
#define SOAP_TYPE__saml2__AuthnContextClassRef_DEFINED

#define soap_default__saml2__AuthnContextClassRef soap_default_string


#define soap_serialize__saml2__AuthnContextClassRef soap_serialize_string


#define soap__saml2__AuthnContextClassRef2s(soap, a) (a)

#define soap_out__saml2__AuthnContextClassRef soap_out_string


#define soap_s2_saml2__AuthnContextClassRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthnContextClassRef soap_in_string

#define soap_new__saml2__AuthnContextClassRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContextClassRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthnContextClassRef
#define soap_write__saml2__AuthnContextClassRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContextClassRef
#define soap_PUT__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContextClassRef
#define soap_PATCH__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContextClassRef
#define soap_POST_send__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContextClassRef soap_get_string


#define soap_read__saml2__AuthnContextClassRef soap_read_string


#define soap_GET__saml2__AuthnContextClassRef soap_GET_string


#define soap_POST_recv__saml2__AuthnContextClassRef soap_POST_recv_string

#endif
/* _saml2__Audience is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__Audience_DEFINED
#define SOAP_TYPE__saml2__Audience_DEFINED

#define soap_default__saml2__Audience soap_default_string


#define soap_serialize__saml2__Audience soap_serialize_string


#define soap__saml2__Audience2s(soap, a) (a)

#define soap_out__saml2__Audience soap_out_string


#define soap_s2_saml2__Audience(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__Audience soap_in_string

#define soap_new__saml2__Audience soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Audience(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__Audience
#define soap_write__saml2__Audience(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Audience
#define soap_PUT__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Audience
#define soap_PATCH__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Audience
#define soap_POST_send__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Audience soap_get_string


#define soap_read__saml2__Audience soap_read_string


#define soap_GET__saml2__Audience soap_GET_string


#define soap_POST_recv__saml2__Audience soap_POST_recv_string

#endif
/* _saml2__AssertionURIRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AssertionURIRef_DEFINED
#define SOAP_TYPE__saml2__AssertionURIRef_DEFINED

#define soap_default__saml2__AssertionURIRef soap_default_string


#define soap_serialize__saml2__AssertionURIRef soap_serialize_string


#define soap__saml2__AssertionURIRef2s(soap, a) (a)

#define soap_out__saml2__AssertionURIRef soap_out_string


#define soap_s2_saml2__AssertionURIRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AssertionURIRef soap_in_string

#define soap_new__saml2__AssertionURIRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AssertionURIRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AssertionURIRef
#define soap_write__saml2__AssertionURIRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AssertionURIRef
#define soap_PUT__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AssertionURIRef
#define soap_PATCH__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AssertionURIRef
#define soap_POST_send__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AssertionURIRef soap_get_string


#define soap_read__saml2__AssertionURIRef soap_read_string


#define soap_GET__saml2__AssertionURIRef soap_GET_string


#define soap_POST_recv__saml2__AssertionURIRef soap_POST_recv_string

#endif
/* _saml2__AssertionIDRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AssertionIDRef_DEFINED
#define SOAP_TYPE__saml2__AssertionIDRef_DEFINED

#define soap_default__saml2__AssertionIDRef soap_default_string


#define soap_serialize__saml2__AssertionIDRef soap_serialize_string


#define soap__saml2__AssertionIDRef2s(soap, a) (a)

#define soap_out__saml2__AssertionIDRef soap_out_string


#define soap_s2_saml2__AssertionIDRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AssertionIDRef soap_in_string

#define soap_new__saml2__AssertionIDRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AssertionIDRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AssertionIDRef
#define soap_write__saml2__AssertionIDRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AssertionIDRef
#define soap_PUT__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AssertionIDRef
#define soap_PATCH__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AssertionIDRef
#define soap_POST_send__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AssertionIDRef soap_get_string


#define soap_read__saml2__AssertionIDRef soap_read_string


#define soap_GET__saml2__AssertionIDRef soap_GET_string


#define soap_POST_recv__saml2__AssertionIDRef soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToPointerTo_ds__KeyInfo_DEFINED
#define SOAP_TYPE_PointerToPointerTo_ds__KeyInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTo_ds__KeyInfo(struct soap*, const char *, int, struct ds__KeyInfoType **const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType *** SOAP_FMAC4 soap_in_PointerToPointerTo_ds__KeyInfo(struct soap*, const char*, struct ds__KeyInfoType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType *** SOAP_FMAC4 soap_get_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AttributeStatementType(struct soap*, const char *, int, struct __saml2__union_AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AttributeStatementType(struct soap*, const char*, struct __saml2__union_AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AttributeType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AttributeType(struct soap*, const char *, int, struct saml2__AttributeType *const*, const char *);
SOAP_FMAC3 struct saml2__AttributeType ** SOAP_FMAC4 soap_in_PointerTosaml2__AttributeType(struct soap*, const char*, struct saml2__AttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AttributeType ** SOAP_FMAC4 soap_get_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__EvidenceType_DEFINED
#define SOAP_TYPE_PointerTosaml2__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__EvidenceType(struct soap*, const char *, int, struct saml2__EvidenceType *const*, const char *);
SOAP_FMAC3 struct saml2__EvidenceType ** SOAP_FMAC4 soap_in_PointerTosaml2__EvidenceType(struct soap*, const char*, struct saml2__EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__EvidenceType ** SOAP_FMAC4 soap_get_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ActionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ActionType(struct soap*, const char *, int, struct saml2__ActionType *const*, const char *);
SOAP_FMAC3 struct saml2__ActionType ** SOAP_FMAC4 soap_in_PointerTosaml2__ActionType(struct soap*, const char*, struct saml2__ActionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ActionType ** SOAP_FMAC4 soap_get_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthnContextType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthnContextType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthnContextType(struct soap*, const char *, int, struct saml2__AuthnContextType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthnContextType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthnContextType(struct soap*, const char*, struct saml2__AuthnContextType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthnContextType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectLocalityType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectLocalityType(struct soap*, const char *, int, struct saml2__SubjectLocalityType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectLocalityType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectLocalityType(struct soap*, const char*, struct saml2__SubjectLocalityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectLocalityType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_EvidenceType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_EvidenceType(struct soap*, const char *, int, struct __saml2__union_EvidenceType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_EvidenceType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_EvidenceType(struct soap*, const char*, struct __saml2__union_EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_EvidenceType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AdviceType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AdviceType(struct soap*, const char *, int, struct __saml2__union_AdviceType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AdviceType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AdviceType(struct soap*, const char*, struct __saml2__union_AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AdviceType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AssertionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AssertionType(struct soap*, const char *, int, struct saml2__AssertionType *const*, const char *);
SOAP_FMAC3 struct saml2__AssertionType ** SOAP_FMAC4 soap_in_PointerTosaml2__AssertionType(struct soap*, const char*, struct saml2__AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AssertionType ** SOAP_FMAC4 soap_get_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_ConditionsType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_ConditionsType(struct soap*, const char *, int, struct __saml2__union_ConditionsType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_ConditionsType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_ConditionsType(struct soap*, const char*, struct __saml2__union_ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_ConditionsType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ProxyRestrictionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ProxyRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ProxyRestrictionType(struct soap*, const char *, int, struct saml2__ProxyRestrictionType *const*, const char *);
SOAP_FMAC3 struct saml2__ProxyRestrictionType ** SOAP_FMAC4 soap_in_PointerTosaml2__ProxyRestrictionType(struct soap*, const char*, struct saml2__ProxyRestrictionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ProxyRestrictionType ** SOAP_FMAC4 soap_get_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__OneTimeUseType_DEFINED
#define SOAP_TYPE_PointerTosaml2__OneTimeUseType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__OneTimeUseType(struct soap*, const char *, int, struct saml2__OneTimeUseType *const*, const char *);
SOAP_FMAC3 struct saml2__OneTimeUseType ** SOAP_FMAC4 soap_in_PointerTosaml2__OneTimeUseType(struct soap*, const char*, struct saml2__OneTimeUseType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__OneTimeUseType ** SOAP_FMAC4 soap_get_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AudienceRestrictionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AudienceRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AudienceRestrictionType(struct soap*, const char *, int, struct saml2__AudienceRestrictionType *const*, const char *);
SOAP_FMAC3 struct saml2__AudienceRestrictionType ** SOAP_FMAC4 soap_in_PointerTosaml2__AudienceRestrictionType(struct soap*, const char*, struct saml2__AudienceRestrictionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AudienceRestrictionType ** SOAP_FMAC4 soap_get_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ConditionAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ConditionAbstractType(struct soap*, const char *, int, struct saml2__ConditionAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__ConditionAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__ConditionAbstractType(struct soap*, const char*, struct saml2__ConditionAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ConditionAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectConfirmationDataType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectConfirmationDataType(struct soap*, const char *, int, struct saml2__SubjectConfirmationDataType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectConfirmationDataType(struct soap*, const char*, struct saml2__SubjectConfirmationDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectConfirmationType(struct soap*, const char *, int, struct saml2__SubjectConfirmationType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectConfirmationType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectConfirmationType(struct soap*, const char*, struct saml2__SubjectConfirmationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__EncryptedElementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__EncryptedElementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__EncryptedElementType(struct soap*, const char *, int, struct saml2__EncryptedElementType *const*, const char *);
SOAP_FMAC3 struct saml2__EncryptedElementType ** SOAP_FMAC4 soap_in_PointerTosaml2__EncryptedElementType(struct soap*, const char*, struct saml2__EncryptedElementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__EncryptedElementType ** SOAP_FMAC4 soap_get_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__BaseIDAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__BaseIDAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__BaseIDAbstractType(struct soap*, const char *, int, struct saml2__BaseIDAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__BaseIDAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__BaseIDAbstractType(struct soap*, const char*, struct saml2__BaseIDAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__BaseIDAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AssertionType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AssertionType(struct soap*, const char *, int, struct __saml2__union_AssertionType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AssertionType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AssertionType(struct soap*, const char*, struct __saml2__union_AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AssertionType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AttributeStatementType(struct soap*, const char *, int, struct saml2__AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AttributeStatementType(struct soap*, const char*, struct saml2__AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthzDecisionStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthzDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthzDecisionStatementType(struct soap*, const char *, int, struct saml2__AuthzDecisionStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthzDecisionStatementType(struct soap*, const char*, struct saml2__AuthzDecisionStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthnStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthnStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthnStatementType(struct soap*, const char *, int, struct saml2__AuthnStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthnStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthnStatementType(struct soap*, const char*, struct saml2__AuthnStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthnStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__StatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__StatementAbstractType(struct soap*, const char *, int, struct saml2__StatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__StatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__StatementAbstractType(struct soap*, const char*, struct saml2__StatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__StatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AdviceType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AdviceType(struct soap*, const char *, int, struct saml2__AdviceType *const*, const char *);
SOAP_FMAC3 struct saml2__AdviceType ** SOAP_FMAC4 soap_in_PointerTosaml2__AdviceType(struct soap*, const char*, struct saml2__AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AdviceType ** SOAP_FMAC4 soap_get_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ConditionsType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ConditionsType(struct soap*, const char *, int, struct saml2__ConditionsType *const*, const char *);
SOAP_FMAC3 struct saml2__ConditionsType ** SOAP_FMAC4 soap_in_PointerTosaml2__ConditionsType(struct soap*, const char*, struct saml2__ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ConditionsType ** SOAP_FMAC4 soap_get_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectType(struct soap*, const char *, int, struct saml2__SubjectType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectType(struct soap*, const char*, struct saml2__SubjectType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__NameIDType_DEFINED
#define SOAP_TYPE_PointerTosaml2__NameIDType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__NameIDType(struct soap*, const char *, int, struct saml2__NameIDType *const*, const char *);
SOAP_FMAC3 struct saml2__NameIDType ** SOAP_FMAC4 soap_in_PointerTosaml2__NameIDType(struct soap*, const char*, struct saml2__NameIDType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__NameIDType ** SOAP_FMAC4 soap_get_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerToxenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_PointerToPointerToxenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerToxenc__EncryptedKeyType(struct soap*, const char *, int, struct xenc__EncryptedKeyType **const*, const char *);
SOAP_FMAC3 struct xenc__EncryptedKeyType *** SOAP_FMAC4 soap_in_PointerToPointerToxenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType *** SOAP_FMAC4 soap_get_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptedKeyType(struct soap*, const char *, int, struct xenc__EncryptedKeyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **, const char*, const char*);
#endif
/* _saml1__AttributeValue is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml1__AttributeValue_DEFINED
#define SOAP_TYPE__saml1__AttributeValue_DEFINED
#endif
/* _saml1__ConfirmationMethod is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__ConfirmationMethod_DEFINED
#define SOAP_TYPE__saml1__ConfirmationMethod_DEFINED

#define soap_default__saml1__ConfirmationMethod soap_default_string


#define soap_serialize__saml1__ConfirmationMethod soap_serialize_string


#define soap__saml1__ConfirmationMethod2s(soap, a) (a)

#define soap_out__saml1__ConfirmationMethod soap_out_string


#define soap_s2_saml1__ConfirmationMethod(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__ConfirmationMethod soap_in_string

#define soap_new__saml1__ConfirmationMethod soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__ConfirmationMethod(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__ConfirmationMethod
#define soap_write__saml1__ConfirmationMethod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__ConfirmationMethod
#define soap_PUT__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__ConfirmationMethod
#define soap_PATCH__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__ConfirmationMethod
#define soap_POST_send__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__ConfirmationMethod soap_get_string


#define soap_read__saml1__ConfirmationMethod soap_read_string


#define soap_GET__saml1__ConfirmationMethod soap_GET_string


#define soap_POST_recv__saml1__ConfirmationMethod soap_POST_recv_string

#endif
/* _saml1__SubjectConfirmationData is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml1__SubjectConfirmationData_DEFINED
#define SOAP_TYPE__saml1__SubjectConfirmationData_DEFINED
#endif
/* _saml1__Audience is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__Audience_DEFINED
#define SOAP_TYPE__saml1__Audience_DEFINED

#define soap_default__saml1__Audience soap_default_string


#define soap_serialize__saml1__Audience soap_serialize_string


#define soap__saml1__Audience2s(soap, a) (a)

#define soap_out__saml1__Audience soap_out_string


#define soap_s2_saml1__Audience(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__Audience soap_in_string

#define soap_new__saml1__Audience soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Audience(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__Audience
#define soap_write__saml1__Audience(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Audience
#define soap_PUT__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Audience
#define soap_PATCH__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Audience
#define soap_POST_send__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Audience soap_get_string


#define soap_read__saml1__Audience soap_read_string


#define soap_GET__saml1__Audience soap_GET_string


#define soap_POST_recv__saml1__Audience soap_POST_recv_string

#endif
/* _saml1__AssertionIDReference is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__AssertionIDReference_DEFINED
#define SOAP_TYPE__saml1__AssertionIDReference_DEFINED

#define soap_default__saml1__AssertionIDReference soap_default_string


#define soap_serialize__saml1__AssertionIDReference soap_serialize_string


#define soap__saml1__AssertionIDReference2s(soap, a) (a)

#define soap_out__saml1__AssertionIDReference soap_out_string


#define soap_s2_saml1__AssertionIDReference(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__AssertionIDReference soap_in_string

#define soap_new__saml1__AssertionIDReference soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AssertionIDReference(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__AssertionIDReference
#define soap_write__saml1__AssertionIDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AssertionIDReference
#define soap_PUT__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AssertionIDReference
#define soap_PATCH__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AssertionIDReference
#define soap_POST_send__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AssertionIDReference soap_get_string


#define soap_read__saml1__AssertionIDReference soap_read_string


#define soap_GET__saml1__AssertionIDReference soap_GET_string


#define soap_POST_recv__saml1__AssertionIDReference soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerTosaml1__AttributeType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AttributeType(struct soap*, const char *, int, struct saml1__AttributeType *const*, const char *);
SOAP_FMAC3 struct saml1__AttributeType ** SOAP_FMAC4 soap_in_PointerTosaml1__AttributeType(struct soap*, const char*, struct saml1__AttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AttributeType ** SOAP_FMAC4 soap_get_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__EvidenceType_DEFINED
#define SOAP_TYPE_PointerTosaml1__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__EvidenceType(struct soap*, const char *, int, struct saml1__EvidenceType *const*, const char *);
SOAP_FMAC3 struct saml1__EvidenceType ** SOAP_FMAC4 soap_in_PointerTosaml1__EvidenceType(struct soap*, const char*, struct saml1__EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__EvidenceType ** SOAP_FMAC4 soap_get_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ActionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ActionType(struct soap*, const char *, int, struct saml1__ActionType *const*, const char *);
SOAP_FMAC3 struct saml1__ActionType ** SOAP_FMAC4 soap_in_PointerTosaml1__ActionType(struct soap*, const char*, struct saml1__ActionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ActionType ** SOAP_FMAC4 soap_get_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthorityBindingType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthorityBindingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthorityBindingType(struct soap*, const char *, int, struct saml1__AuthorityBindingType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthorityBindingType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthorityBindingType(struct soap*, const char*, struct saml1__AuthorityBindingType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthorityBindingType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectLocalityType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectLocalityType(struct soap*, const char *, int, struct saml1__SubjectLocalityType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectLocalityType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectLocalityType(struct soap*, const char*, struct saml1__SubjectLocalityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectLocalityType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_XML_DEFINED
#define SOAP_TYPE_PointerTo_XML_DEFINED
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectType(struct soap*, const char *, int, struct saml1__SubjectType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectType(struct soap*, const char*, struct saml1__SubjectType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_EvidenceType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_EvidenceType(struct soap*, const char *, int, struct __saml1__union_EvidenceType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_EvidenceType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_EvidenceType(struct soap*, const char*, struct __saml1__union_EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_EvidenceType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTostring_DEFINED
#define SOAP_TYPE_PointerTostring_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectConfirmationType(struct soap*, const char *, int, struct saml1__SubjectConfirmationType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectConfirmationType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectConfirmationType(struct soap*, const char*, struct saml1__SubjectConfirmationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectConfirmationType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__NameIdentifierType_DEFINED
#define SOAP_TYPE_PointerTosaml1__NameIdentifierType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__NameIdentifierType(struct soap*, const char *, int, struct saml1__NameIdentifierType *const*, const char *);
SOAP_FMAC3 struct saml1__NameIdentifierType ** SOAP_FMAC4 soap_in_PointerTosaml1__NameIdentifierType(struct soap*, const char*, struct saml1__NameIdentifierType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__NameIdentifierType ** SOAP_FMAC4 soap_get_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_AdviceType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_AdviceType(struct soap*, const char *, int, struct __saml1__union_AdviceType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_AdviceType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_AdviceType(struct soap*, const char*, struct __saml1__union_AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_AdviceType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AssertionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AssertionType(struct soap*, const char *, int, struct saml1__AssertionType *const*, const char *);
SOAP_FMAC3 struct saml1__AssertionType ** SOAP_FMAC4 soap_in_PointerTosaml1__AssertionType(struct soap*, const char*, struct saml1__AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AssertionType ** SOAP_FMAC4 soap_get_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTodateTime_DEFINED
#define SOAP_TYPE_PointerTodateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodateTime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodateTime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTodateTime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodateTime(struct soap*, time_t *const*, const char*, const char*);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTodateTime(struct soap*, time_t **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_ConditionsType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_ConditionsType(struct soap*, const char *, int, struct __saml1__union_ConditionsType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_ConditionsType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_ConditionsType(struct soap*, const char*, struct __saml1__union_ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_ConditionsType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ConditionAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ConditionAbstractType(struct soap*, const char *, int, struct saml1__ConditionAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__ConditionAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__ConditionAbstractType(struct soap*, const char*, struct saml1__ConditionAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ConditionAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__DoNotCacheConditionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__DoNotCacheConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__DoNotCacheConditionType(struct soap*, const char *, int, struct saml1__DoNotCacheConditionType *const*, const char *);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType ** SOAP_FMAC4 soap_in_PointerTosaml1__DoNotCacheConditionType(struct soap*, const char*, struct saml1__DoNotCacheConditionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType ** SOAP_FMAC4 soap_get_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AudienceRestrictionConditionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AudienceRestrictionConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, const char *, int, struct saml1__AudienceRestrictionConditionType *const*, const char *);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType ** SOAP_FMAC4 soap_in_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, const char*, struct saml1__AudienceRestrictionConditionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType ** SOAP_FMAC4 soap_get_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ds__Signature_DEFINED
#define SOAP_TYPE_PointerTo_ds__Signature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ds__Signature(struct soap*, const char *, int, struct ds__SignatureType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_in_PointerTo_ds__Signature(struct soap*, const char*, struct ds__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_get_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_AssertionType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_AssertionType(struct soap*, const char *, int, struct __saml1__union_AssertionType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_AssertionType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_AssertionType(struct soap*, const char*, struct __saml1__union_AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_AssertionType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AttributeStatementType(struct soap*, const char *, int, struct saml1__AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AttributeStatementType(struct soap*, const char*, struct saml1__AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthorizationDecisionStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthorizationDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, const char *, int, struct saml1__AuthorizationDecisionStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, const char*, struct saml1__AuthorizationDecisionStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthenticationStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthenticationStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthenticationStatementType(struct soap*, const char *, int, struct saml1__AuthenticationStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthenticationStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthenticationStatementType(struct soap*, const char*, struct saml1__AuthenticationStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthenticationStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectStatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectStatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectStatementAbstractType(struct soap*, const char *, int, struct saml1__SubjectStatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectStatementAbstractType(struct soap*, const char*, struct saml1__SubjectStatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__StatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__StatementAbstractType(struct soap*, const char *, int, struct saml1__StatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__StatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__StatementAbstractType(struct soap*, const char*, struct saml1__StatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__StatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AdviceType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AdviceType(struct soap*, const char *, int, struct saml1__AdviceType *const*, const char *);
SOAP_FMAC3 struct saml1__AdviceType ** SOAP_FMAC4 soap_in_PointerTosaml1__AdviceType(struct soap*, const char*, struct saml1__AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AdviceType ** SOAP_FMAC4 soap_get_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ConditionsType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ConditionsType(struct soap*, const char *, int, struct saml1__ConditionsType *const*, const char *);
SOAP_FMAC3 struct saml1__ConditionsType ** SOAP_FMAC4 soap_in_PointerTosaml1__ConditionsType(struct soap*, const char*, struct saml1__ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ConditionsType ** SOAP_FMAC4 soap_get_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence_DEFINED
#define SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char *, int, struct __wsc__DerivedKeyTokenType_sequence *const*, const char *);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_in_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_get_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToULONG64_DEFINED
#define SOAP_TYPE_PointerToULONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToULONG64(struct soap*, ULONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToULONG64(struct soap*, const char *, int, ULONG64 *const*, const char *);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_in_PointerToULONG64(struct soap*, const char*, ULONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToULONG64(struct soap*, ULONG64 *const*, const char*, const char*);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_get_PointerToULONG64(struct soap*, ULONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsc__PropertiesType_DEFINED
#define SOAP_TYPE_PointerTowsc__PropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__PropertiesType(struct soap*, const char *, int, struct wsc__PropertiesType *const*, const char *);
SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_in_PointerTowsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_get_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsc__FaultCodeOpenEnumType_DEFINED
#define SOAP_TYPE_wsc__FaultCodeOpenEnumType_DEFINED

#ifdef SOAP_DEFAULT_wsc__FaultCodeOpenEnumType
#define soap_default_wsc__FaultCodeOpenEnumType(soap, a) (*(a) = SOAP_DEFAULT_wsc__FaultCodeOpenEnumType)
#else
#define soap_default_wsc__FaultCodeOpenEnumType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__FaultCodeOpenEnumType(struct soap*, char *const*);

#define soap_wsc__FaultCodeOpenEnumType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsc__FaultCodeOpenEnumType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsc__FaultCodeOpenEnumType(struct soap*, const char*, char **, const char*);
#define soap_new_wsc__FaultCodeOpenEnumType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeOpenEnumType
#define soap_write_wsc__FaultCodeOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__FaultCodeOpenEnumType
#define soap_PUT_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__FaultCodeOpenEnumType
#define soap_PATCH_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__FaultCodeOpenEnumType
#define soap_POST_send_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsc__FaultCodeOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeOpenEnumType
#define soap_read_wsc__FaultCodeOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__FaultCodeOpenEnumType
#define soap_GET_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__FaultCodeOpenEnumType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__FaultCodeOpenEnumType
#define soap_POST_recv_wsc__FaultCodeOpenEnumType(soap, data) ( soap_read_wsc__FaultCodeOpenEnumType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_xenc__ReferenceList_DEFINED
#define SOAP_TYPE_PointerTo_xenc__ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xenc__ReferenceList(struct soap*, const char *, int, struct _xenc__ReferenceList *const*, const char *);
SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_in_PointerTo_xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*, const char*, const char*);
SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_get_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__xenc__union_ReferenceList_DEFINED
#define SOAP_TYPE_PointerTo__xenc__union_ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__xenc__union_ReferenceList(struct soap*, const char *, int, struct __xenc__union_ReferenceList *const*, const char *);
SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_in_PointerTo__xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*, const char*, const char*);
SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_get_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__ReferenceType_DEFINED
#define SOAP_TYPE_PointerToxenc__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__ReferenceType(struct soap*, const char *, int, struct xenc__ReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertyType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertyType(struct soap*, const char *, int, struct xenc__EncryptionPropertyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__TransformsType_DEFINED
#define SOAP_TYPE_PointerToxenc__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__TransformsType(struct soap*, const char *, int, struct xenc__TransformsType *const*, const char *);
SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_in_PointerToxenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_get_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__CipherReferenceType_DEFINED
#define SOAP_TYPE_PointerToxenc__CipherReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherReferenceType(struct soap*, const char *, int, struct xenc__CipherReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertiesType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionPropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertiesType(struct soap*, const char *, int, struct xenc__EncryptionPropertiesType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__CipherDataType_DEFINED
#define SOAP_TYPE_PointerToxenc__CipherDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherDataType(struct soap*, const char *, int, struct xenc__CipherDataType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ds__KeyInfo_DEFINED
#define SOAP_TYPE_PointerTo_ds__KeyInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ds__KeyInfo(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTo_ds__KeyInfo(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionMethodType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionMethodType(struct soap*, const char *, int, struct xenc__EncryptionMethodType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__X509IssuerSerialType_DEFINED
#define SOAP_TYPE_PointerTods__X509IssuerSerialType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509IssuerSerialType(struct soap*, const char *, int, struct ds__X509IssuerSerialType *const*, const char *);
SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_in_PointerTods__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_get_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__RSAKeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__RSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RSAKeyValueType(struct soap*, const char *, int, struct ds__RSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__DSAKeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__DSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DSAKeyValueType(struct soap*, const char *, int, struct ds__DSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__TransformType_DEFINED
#define SOAP_TYPE_PointerTods__TransformType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformType(struct soap*, const char *, int, struct ds__TransformType *const*, const char *);
SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_in_PointerTods__TransformType(struct soap*, const char*, struct ds__TransformType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_get_PointerTods__TransformType(struct soap*, struct ds__TransformType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__DigestMethodType_DEFINED
#define SOAP_TYPE_PointerTods__DigestMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DigestMethodType(struct soap*, const char *, int, struct ds__DigestMethodType *const*, const char *);
SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_in_PointerTods__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_get_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__TransformsType_DEFINED
#define SOAP_TYPE_PointerTods__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformsType(struct soap*, const char *, int, struct ds__TransformsType *const*, const char *);
SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_in_PointerTods__TransformsType(struct soap*, const char*, struct ds__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_get_PointerTods__TransformsType(struct soap*, struct ds__TransformsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTods__ReferenceType_DEFINED
#define SOAP_TYPE_PointerToPointerTods__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType **const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_in_PointerToPointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*, const char*, const char*);
SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_get_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__ReferenceType_DEFINED
#define SOAP_TYPE_PointerTods__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType *const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_in_PointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_get_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignatureMethodType_DEFINED
#define SOAP_TYPE_PointerTods__SignatureMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureMethodType(struct soap*, const char *, int, struct ds__SignatureMethodType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_in_PointerTods__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_get_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__CanonicalizationMethodType_DEFINED
#define SOAP_TYPE_PointerTods__CanonicalizationMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__CanonicalizationMethodType(struct soap*, const char *, int, struct ds__CanonicalizationMethodType *const*, const char *);
SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_in_PointerTods__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_get_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__SecurityTokenReference_DEFINED
#define SOAP_TYPE_PointerTo_wsse__SecurityTokenReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__SecurityTokenReference(struct soap*, const char *, int, struct _wsse__SecurityTokenReference *const*, const char *);
SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_in_PointerTo_wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_get_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__RetrievalMethodType_DEFINED
#define SOAP_TYPE_PointerTods__RetrievalMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RetrievalMethodType(struct soap*, const char *, int, struct ds__RetrievalMethodType *const*, const char *);
SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_in_PointerTods__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_get_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__KeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__KeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyValueType(struct soap*, const char *, int, struct ds__KeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_in_PointerTods__KeyValueType(struct soap*, const char*, struct ds__KeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_get_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces_DEFINED
#define SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char *, int, struct _c14n__InclusiveNamespaces *const*, const char *);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_in_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*, const char*, const char*);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_get_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__KeyInfoType_DEFINED
#define SOAP_TYPE_PointerTods__KeyInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyInfoType(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTods__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignedInfoType_DEFINED
#define SOAP_TYPE_PointerTods__SignedInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignedInfoType(struct soap*, const char *, int, struct ds__SignedInfoType *const*, const char *);
SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_in_PointerTods__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_get_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType **, const char*, const char*);
#endif
/* _ds__SignatureValue is a typedef synonym of string */

#ifndef SOAP_TYPE__ds__SignatureValue_DEFINED
#define SOAP_TYPE__ds__SignatureValue_DEFINED

#define soap_default__ds__SignatureValue soap_default_string


#define soap_serialize__ds__SignatureValue soap_serialize_string


#define soap__ds__SignatureValue2s(soap, a) (a)

#define soap_out__ds__SignatureValue soap_out_string


#define soap_s2_ds__SignatureValue(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__ds__SignatureValue soap_in_string

#define soap_new__ds__SignatureValue soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__SignatureValue(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__ds__SignatureValue
#define soap_write__ds__SignatureValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__SignatureValue
#define soap_PUT__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__SignatureValue
#define soap_PATCH__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__SignatureValue
#define soap_POST_send__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__SignatureValue soap_get_string


#define soap_read__ds__SignatureValue soap_read_string


#define soap_GET__ds__SignatureValue soap_GET_string


#define soap_POST_recv__ds__SignatureValue soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerTods__X509DataType_DEFINED
#define SOAP_TYPE_PointerTods__X509DataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509DataType(struct soap*, const char *, int, struct ds__X509DataType *const*, const char *);
SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_in_PointerTods__X509DataType(struct soap*, const char*, struct ds__X509DataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_get_PointerTods__X509DataType(struct soap*, struct ds__X509DataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Embedded_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Embedded_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Embedded(struct soap*, const char *, int, struct _wsse__Embedded *const*, const char *);
SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_in_PointerTo_wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_get_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__KeyIdentifier_DEFINED
#define SOAP_TYPE_PointerTo_wsse__KeyIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__KeyIdentifier(struct soap*, const char *, int, struct _wsse__KeyIdentifier *const*, const char *);
SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_in_PointerTo_wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_get_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Reference_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Reference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Reference(struct soap*, const char *, int, struct _wsse__Reference *const*, const char *);
SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_in_PointerTo_wsse__Reference(struct soap*, const char*, struct _wsse__Reference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_get_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsse__EncodedString_DEFINED
#define SOAP_TYPE_PointerTowsse__EncodedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsse__EncodedString(struct soap*, const char *, int, struct wsse__EncodedString *const*, const char *);
SOAP_FMAC3 struct wsse__EncodedString ** SOAP_FMAC4 soap_in_PointerTowsse__EncodedString(struct soap*, const char*, struct wsse__EncodedString **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString *const*, const char*, const char*);
SOAP_FMAC3 struct wsse__EncodedString ** SOAP_FMAC4 soap_get_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Password_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Password_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Password(struct soap*, const char *, int, struct _wsse__Password *const*, const char *);
SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_in_PointerTo_wsse__Password(struct soap*, const char*, struct _wsse__Password **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_get_PointerTo_wsse__Password(struct soap*, struct _wsse__Password **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
